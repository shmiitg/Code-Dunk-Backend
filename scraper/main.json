[
    {
        "title": "Pick from both sides!",
        "topic": "Arrays",
        "companies": ["Media.net"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> of size <strong>N</strong>.</p>\n<p>\u00a0</p>\n<p>\u00a0</p>\n<p>You have to pick exactly\u00a0<strong>B </strong>elements from either left or right end of the array <strong>A</strong> to get maximum sum.</p>\n<p>Find and return this <strong>maximum possible sum</strong>.</p>\n<p><strong>NOTE:</strong> Suppose B = 4 and array A contains 10 elements then</p>\n<p>\u00a0</p>\n<p>\u00a0</p>\n<ul>\n<li>You can pick first four elements or can pick last four elements or can pick 1 from front and 3 from back etc . you need to return the maximum possible sum of elements you can pick.</li>\n</ul></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>1 &lt;= B &lt;= N</p>\n<p>-10<sup>3</sup> &lt;= A[i] &lt;= 10<sup>3</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong>.</p><p></p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the maximum possible sum of elements you picked.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = [5, -2, 3 , 1, 2]\n B = 3\n</pre>\n<p>Input 2:</p>\n<pre> A = [1, 2]\n B = 1\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 8\n</pre>\n<p>Output 2:</p>\n<pre> 2\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> Pick element 5 from front and element (1, 2) from back so we get 5 + 1 + 2 = 8\n</pre>\n<p>Explanation 2:</p>\n<pre> Pick element 2 from end as this is the maximum we can get\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A of size N. You have to pick exactlyB elements from either left or right end of the array A to get maximum sum. Find and return this maximum possible sum. NOTE: Suppose B = 4 and array A contains 10 elements thenYou can pick first four elements or can pick last four elements or can pick 1 from front and 3 from back etc .  you need to return the maximum possible sum of elements you can pick. ",
        "link": "pick-from-both-sides!"
    },
    {
        "title": "Min Steps in Infinite Grid",
        "topic": "Arrays",
        "companies": ["Directi", "Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are in an infinite 2D grid where you can move in any of the 8 directions</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> (x,y) to \n    (x-1, y-1), \n    (x-1, y)  , \n    (x-1, y+1), \n    (x  , y-1),\n    (x  , y+1), \n    (x+1, y-1), \n    (x+1, y)  , \n    (x+1, y+1) </pre>\n<p>You are given a sequence of points and <strong>the order in which you need to cover the points.</strong>. Give the minimum number of steps in which you can achieve it. You start from the first point.</p>\n<p><strong>NOTE: </strong>This question is intentionally left slightly vague. Clarify the question by trying out a few cases in the \u201cSee Expected Output\u201d section.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given two integer arrays A and B, where A[i] is x coordinate and B[i] is y coordinate of ith point respectively.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an Integer, i.e minimum number of steps.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [0, 1, 1]\n B = [0, 1, 2]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 2</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> Given three points are: (0, 0), (1, 1) and (1, 2).\n It takes 1 step to move from (0, 0) to (1, 1). It takes one more step to move from (1, 1) to (1, 2).</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "You are in an infinite 2D grid where you can move in any of the 8 directions (x,y) to     (x-1, y-1),     (x-1, y)  ,     (x-1, y+1),     (x  , y-1),    (x  , y+1),     (x+1, y-1),     (x+1, y)  ,     (x+1, y+1) You are given a sequence of points and the order in which you need to cover the points. .  Give the minimum number of steps in which you can achieve it.  You start from the first point. NOTE: This question is intentionally left slightly vague.  Clarify the question by trying out a few cases in the \u201cSee Expected Output\u201d section. ",
        "link": "min-steps-in-infinite-grid"
    },
    {
        "title": "Minimum Lights to Activate",
        "topic": "Arrays",
        "companies": ["Directi"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>There is a corridor in a Jail which is <strong>N</strong> units long. Given an array <strong>A</strong> of size <strong>N</strong>. The <strong>i<sup>th</sup></strong> index of this array is <strong>0</strong> if the light at i<sup>th</sup> position is faulty otherwise it is <strong>1.</strong></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>All the lights are of specific power <strong>B</strong> which if is placed at position <strong>X</strong>, it can light the corridor from <strong>[ X-B+1, X+B-1]</strong>.</p>\n<p>Initially all lights are off.</p>\n<p>Return the <strong>minimum number</strong> of lights to be turned ON to light the whole corridor or <strong>-1</strong> if the whole corridor cannot be lighted.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 100000</p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= B &lt;= 10000</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array A where A[i] is either 0 or 1.</p><p></p><p></p><p></p><p></p>\n<p>Second argument is an integer B.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>Return the minimum number of lights to be turned ON to light the whole corridor or -1 if the whole corridor cannot be lighted.</pre></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p></p>\n<pre>A = [ 0, 0, 1, 1, 1, 0, 0, 1].\nB = 3</pre>\n<p>Input 2:</p>\n<pre>A = [ 0, 0, 0, 1, 0].\nB = 3</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>2</pre>\n<p>Output 2:</p>\n<pre>-1</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<p>In the first configuration, Turn on the lights at 2nd and 7th index. Light at 2nd index covers from [ 1, 5] and light at 7th index covers [6, 8].<br/><br/><br/></p>\n<p>Explanation 2:</p>\n<pre>In the second configuration, there is no light which can light the first corridor.</pre></div><br/><br/></p>\n\n</div>",
        "statement": "There is a corridor in a Jail which is N units long.  Given an array A of size N.  The ith index of this array is 0 if the light at ith position is faulty otherwise it is 1. All the lights are of specific power B which if is placed at position X, it can light the corridor from [ X-B+1, X+B-1]. Initially all lights are off. Return the minimum number of lights to be turned ON to light the whole corridor or -1 if the whole corridor cannot be lighted. ",
        "link": "minimum-lights-to-activate"
    },
    {
        "title": "Maximum Sum Triplet",
        "topic": "Arrays",
        "companies": ["Directi", "LIDO learning"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array <strong>A</strong> containing <strong>N</strong> integers.</p><p></p><p></p><p></p>\n<p>You need to find the <strong>maximum sum of triplet</strong> ( A<sub>i</sub> + A<sub>j</sub> + A<sub>k</sub> ) such that 0 &lt;= i &lt; j &lt; k &lt; N and A<sub>i</sub> &lt; A<sub>j</sub> &lt; A<sub>k</sub>.</p>\n<p>If no such triplet exist return <strong>0</strong>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>3 &lt;= N &lt;= 10<sup>5</sup>.</p><p></p><p></p><p></p>\n<p>1 &lt;= A[i] &lt;= 10<sup>8</sup>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the maximum sum of triplet as described in the question.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [2, 5, 3, 1, 4, 9]\n</pre>\n<p>Input 2:</p>\n<pre> A = [1, 2, 3]\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 16\n</pre>\n<p>Output 2:</p>\n<pre> 6\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> All possible triplets are:-\n    2 3 4 =&gt; sum = 9\n    2 5 9 =&gt; sum = 16\n    2 3 9 =&gt; sum = 14\n    3 4 9 =&gt; sum = 16\n    1 4 9 =&gt; sum = 14\n  Maximum sum = 16\n</pre>\n<p>Explanation 2:</p>\n<pre> All possible triplets are:-\n    1 2 3 =&gt; sum = 6\n Maximum sum = 6\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array A containing N integers. You need to find the maximum sum of triplet ( Ai + Aj + Ak ) such that 0 <= i < j < k < N and Ai < Aj < Ak. If no such triplet exist return 0. ",
        "link": "maximum-sum-triplet"
    },
    {
        "title": "Add One To Number",
        "topic": "Arrays",
        "companies": ["Google", "Microsoft"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a <strong>non-negative</strong> number represented as an array of digits, add <strong>1</strong> to the number ( increment the number represented by the digits ).</p><p></p><p></p><p></p><p></p><p></p>\n<p>The digits are stored such that the most significant digit is at the head of the list.</p>\n<p><strong>NOTE:</strong> Certain things are intentionally left unclear in this question which you should practice asking the interviewer. For example: \nfor this problem, following are some good questions to ask :</p>\n<ul>\n<li><strong>Q :</strong> Can the input have <strong>0's</strong> before the most significant digit. Or in other words, is <strong>0 1 2 3</strong> a valid input?</li>\n<li><strong>A :</strong> For the purpose of this question, <strong>YES</strong></li>\n<li><strong>Q :</strong> Can the output have <strong>0's</strong> before the most significant digit? Or in other words, is <strong>0 1 2 4</strong> a valid output?</li>\n<li><strong>A :</strong> For the purpose of this question, <strong>NO</strong>. Even if the input has zeroes before the most significant digit.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an array of digits.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the array of digits after adding one.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre>[1, 2, 3]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre>[1, 2, 4]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre>Given vector is [1, 2, 3].\nThe returned vector should be [1, 2, 4] as 123 + 1 = 124.</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a non-negative number represented as an array of digits, add 1 to the number ( increment the number represented by the digits ). The digits are stored such that the most significant digit is at the head of the list. NOTE: Certain things are intentionally left unclear in this question which you should practice asking the interviewer.  For example: for this problem, following are some good questions to ask :Q : Can the input have 0's before the most significant digit.  Or in other words, is 0 1 2 3 a valid input?A : For the purpose of this question, YESQ : Can the output have 0's before the most significant digit? Or in other words, is 0 1 2 4 a valid output?A : For the purpose of this question, NO.  Even if the input has zeroes before the most significant digit. ",
        "link": "add-one-to-number"
    },
    {
        "title": "Partitions",
        "topic": "Arrays",
        "companies": ["EzCred"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given a 1D integer array <strong>B</strong> containing <strong>A</strong> integers.</p><p></p><p></p>\n<p>Count the number of ways to split all the elements of the array into 3 contiguous parts so that the sum of elements in each part is the same.</p>\n<p><strong>Such that :</strong> sum(B[1],..B[i]) = sum(B[i+1],...B[j]) = sum(B[j+1],...B[n]) </p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>-10<sup>9</sup> &lt;= B[i] &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer <strong>A</strong>.</p><p></p><p></p>\n<p>Second argument is an 1D integer array <strong>B</strong> of size <strong>A</strong>.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the number of ways to split the array <strong>B</strong> into three parts with the same sum.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = 5\n B = [1, 2, 3, 0, 3]\n</pre>\n<p>Input 2:</p>\n<pre> A = 4\n B = [0, 1, -1, 0]\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 2\n</pre>\n<p>Output 2:</p>\n<pre> 1\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> There are no 2 ways to make partitions -\n 1. (1,2)+(3)+(0,3).\n 2. (1,2)+(3,0)+(3).\n</pre>\n<p>Explanation 2:</p>\n<pre> There is only 1 way to make partition -\n 1. (0)+(-1,1)+(0).\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "You are given a 1D integer array B containing A integers. Count the number of ways to split all the elements of the array into 3 contiguous parts so that the sum of elements in each part is the same. Such that : sum(B[1],. . B[i]) = sum(B[i+1],. . . B[j]) = sum(B[j+1],. . . B[n]) ",
        "link": "partitions"
    },
    {
        "title": "Maximum Area of Triangle!",
        "topic": "Arrays",
        "companies": ["Directi"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a character matrix of size <code>N x M</code> in the form of a string array <strong>A</strong> of size <strong>N</strong> where A[i] denotes i<sup>th</sup> row.</p><p></p><p></p><p></p><p></p><p></p>\n<p>Each character in the matrix consists any one of the following three characters {'r', 'g', 'b'} where <strong>'r'</strong> denotes <strong>red</strong> color similarly <strong>'g'</strong> denotes <strong>green</strong> color and <strong>'b'</strong> denotes <strong>blue</strong> color.</p>\n<p>You have to find the area of the <strong>largest triangle</strong> that has one side parallel to y-axis i.e vertical and the color of all three vertices are different.</p>\n<p><strong>NOTE:</strong></p>\n<p></p>\n<p></p>\n<p></p><li>If the area comes out to be a real number than return the <a href=\"https://en.wikipedia.org/wiki/Floor_and_ceiling_functions\">ceil</a> of that number.</li><p></p><p></p><p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= N, M &lt;= 10<sup>3</sup></p><p></p><p></p><p></p><p></p><p></p>\n<p>A[i][j] = 'r' or A[i][j] = 'g' or A[i][j] = 'b'</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an string array <strong>A</strong> of size <strong>N</strong> denoting the 2D character matrix.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the area of the <strong>largest triangle</strong> that has one side parallel to y-axis i.e vertical and the color of all three vertices are different.</p><p></p><p></p><p></p>\n<p>If the area comes out to be a real number than return the <a href=\"https://en.wikipedia.org/wiki/Floor_and_ceiling_functions\">ceil</a> of that number.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [\"rrrrr\", \"rrrrg\", \"rrrrr\", \"bbbbb\"]\n</pre>\n<p>Input 2:</p>\n<pre> A = [\"rrr\", \"rrr\", \"rrr\", \"rrr\"]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> 10\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> The maximum area of triangle is 10.\n Triangle coordinates are (0,0) containing r, (1,4) containing g, (3,0) containing b.\n <img src=\"https://imgur.com/DnNR1Vp.jpeg\"/>\n</pre>\n<p>Explanation 2:</p>\n<pre> All cells have same color so no triangle possible so we will return 0\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a character matrix of size N x M in the form of a string array A of size N where A[i] denotes ith row. Each character in the matrix consists any one of the following three characters {'r', 'g', 'b'} where 'r' denotes red color similarly 'g' denotes green color and 'b' denotes blue color. You have to find the area of the largest triangle that has one side parallel to y-axis i. e vertical and the color of all three vertices are different. NOTE:If the area comes out to be a real number than return the ceil of that number. ",
        "link": "maximum-area-of-triangle!"
    },
    {
        "title": "Flip",
        "topic": "Arrays",
        "companies": ["VMWare", "Microsoft", "Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given a binary string <strong>A</strong>(i.e. with characters <strong>0</strong> and <strong>1</strong>) consisting of characters <strong>A<sub>1</sub></strong>, <strong>A<sub>2</sub></strong>, ..., <strong>A<sub>N</sub></strong>. In a single operation, you can choose two indices <strong>L</strong> and <strong>R</strong> such that <strong>1</strong> \u2264 <strong>L</strong> \u2264 <strong>R</strong> \u2264 <strong>N</strong> and flip the characters <strong>A<sub>L</sub></strong>, <strong>A<sub>L+1</sub></strong>, ..., <strong>A<sub>R</sub></strong>. By flipping, we mean change character <strong>0</strong> to <strong>1</strong> and vice-versa.</p><p></p><p></p><p></p>\n<p>Your aim is to perform <strong>ATMOST</strong> one operation such that in final string number of <strong>1s</strong> is maximised.</p>\n<p>If you don't want to perform the operation, return an <strong>empty</strong> array. Else, return an array consisting of two elements denoting <strong>L</strong> and <strong>R</strong>. If there are multiple solutions, return the <strong>lexicographically smallest</strong> pair of <strong>L</strong> and <strong>R</strong>.</p>\n<p><strong>NOTE: </strong>Pair <strong>(a, b)</strong> is lexicographically smaller than pair <strong>(c, d)</strong> if <strong>a</strong> &lt; <strong>c</strong> or, if <strong>a</strong> == <strong>c</strong> and <strong>b</strong> &lt; <strong>d</strong>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is a string A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an array of integers denoting the answer.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre>A = \"010\"</pre>\n<p>Input 2:</p>\n<pre>A = \"111\"</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre>[1, 1]</pre>\n<p>Output 2:</p>\n<pre>[]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre>A = \"010\"</pre></div></p>\n<p>Pair of [L, R] | Final string\n____________<strong><em>|</em></strong>__________\n[1 1]          | \"110\"\n[1 2]          | \"100\"\n[1 3]          | \"101\"\n[2 2]          | \"000\"\n[2 3]          | \"001\"</p>\n<p>We see that two pairs [1, 1] and [1, 3] give same number of 1s in final string. So, we return [1, 1].\n\n<p>Explanation 2:</p>\n<pre>No operation can give us more than three 1s in final string. So, we return empty array [].</pre>\n<p></p>\n<p></p>\n<p></p></p></div>",
        "statement": "You are given a binary string A(i. e.  with characters 0 and 1) consisting of characters A1, A2, . . . , AN.  In a single operation, you can choose two indices L and R such that 1 \u2264 L \u2264 R \u2264 N and flip the characters AL, AL+1, . . . , AR.  By flipping, we mean change character 0 to 1 and vice-versa. Your aim is to perform ATMOST one operation such that in final string number of 1s is maximised. If you don't want to perform the operation, return an empty array.  Else, return an array consisting of two elements denoting L and R.  If there are multiple solutions, return the lexicographically smallest pair of L and R. NOTE: Pair (a, b) is lexicographically smaller than pair (c, d) if a < c or, if a == c and b < d. ",
        "link": "flip"
    },
    {
        "title": "Max Min",
        "topic": "Arrays",
        "companies": ["Google"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array A of size N. You need to find the sum of <strong>Maximum and Minimum element</strong> in the given array.</p><p></p><p></p>\n<p><strong>NOTE:</strong> You should make minimum number of comparisons.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>-10<sup>9</sup> &lt;= A[i] &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A of size N.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the sum Maximum and Minimum element in the given array.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [-2, 1, -4, 5, 3]</pre>\n<p>Input 2:</p>\n<pre> A = [1, 3, 4, 1]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 1</pre>\n<p>Output 2:</p>\n<pre> 5</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> Maximum Element is 5 and Minimum element is -4. (5 + (-4)) = 1. </pre>\n<p>Explanation 2:</p>\n<pre> Maximum Element is 4 and Minimum element is 1. (4 + 1) = 5.</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array A of size N.  You need to find the sum of Maximum and Minimum element in the given array. NOTE: You should make minimum number of comparisons. ",
        "link": "max-min"
    },
    {
        "title": "Perfect Peak of Array",
        "topic": "Arrays",
        "companies": ["Flipkart", "Ola"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> of size <strong>N</strong>.</p><p></p><p></p><p></p><p></p>\n<p>You need to check that whether there exist a element which is <strong>strictly greater than all the elements on left</strong> of it and <strong>strictly smaller than all the elements</strong> on right of it.</p>\n<p>If it exists return <strong>1</strong> else return <strong>0</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><li>Do not consider the corner elements i.e <strong>A[0] and A[N-1]</strong> as the answer.</li></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>3 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= A[i] &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array <strong>A</strong> containing <strong>N</strong> integers.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return <strong>1</strong> if there exist a element that is <strong>strictly greater than all the elements on left</strong> of it and <strong>strictly  smaller than all the elements</strong> on right of it else return <storng>0.</storng></p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = [5, 1, 4, 3, 6, 8, 10, 7, 9]\n</pre>\n<p>Input 2:</p>\n<pre> A = [5, 1, 4, 4]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> A[4] = 6 is the element we are looking for.\n All elements on left of A[4] are smaller than it and all elements on right are greater.\n</pre>\n<p>Explanation 2:</p>\n<pre> No such element exits.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A of size N. You need to check that whether there exist a element which is strictly greater than all the elements on left of it and strictly smaller than all the elements on right of it. If it exists return 1 else return 0. NOTE:Do not consider the corner elements i. e A[0] and A[N-1] as the answer. ",
        "link": "perfect-peak-of-array"
    },
    {
        "title": "Kth Row of Pascal's Triangle",
        "topic": "Arrays",
        "companies": ["Google"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an index k, return the kth row of the Pascal's triangle.<p></p>\n<p>Pascal's triangle: To generate A[C] in row R, sum up A'[C] and A'[C-1] from previous row R - 1.</p>\n<p><strong>Example:</strong></p>\n<pre><code>Input : k = 3</code></pre></div></p>\n<p>Return : [1,3,3,1]\n\n<p><strong>Note</strong>: k is 0 based. k = 0, corresponds to the row [1]. </p>\n<p><strong>Note</strong>: Could you optimize your algorithm to use only O(k) extra space?</p></p></div>",
        "statement": "Given an index k, return the kth row of the Pascal's triangle. Pascal's triangle: To generate A[C] in row R, sum up A'[C] and A'[C-1] from previous row R - 1. Example:Input : k = 3",
        "link": "kth-row-of-pascal's-triangle"
    },
    {
        "title": "Pascal Triangle",
        "topic": "Arrays",
        "companies": ["Google", "Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given numRows, generate the first numRows of Pascal's triangle.<p></p>\n<p>Pascal's triangle : To generate A[C] in row R, sum up A'[C] and A'[C-1] from previous row R - 1.</p>\n<p><strong>Example:</strong></p>\n<p>Given numRows = 5,</p>\n<p>Return</p>\n<pre><code>[\n     [1],\n     [1,1],\n     [1,2,1],\n     [1,3,3,1],\n     [1,4,6,4,1]\n]\n</code></pre></div></p>\n<p><strong>Constraints:</strong><br/>0 &lt;= numRows &lt;= 25<br/>\n<p></p></p></div>",
        "statement": "Given numRows, generate the first numRows of Pascal's triangle. Pascal's triangle : To generate A[C] in row R, sum up A'[C] and A'[C-1] from previous row R - 1. Example:Given numRows = 5,Return[     [1],     [1,1],     [1,2,1],     [1,3,3,1],     [1,4,6,4,1]]",
        "link": "pascal-triangle"
    },
    {
        "title": "Anti Diagonals",
        "topic": "Arrays",
        "companies": ["Microsoft", "Adobe"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Give a N*N square matrix, return an array of its anti-diagonals. Look at the example for more details.<p></p><p></p>\n<p><strong>Example:</strong></p>\n<pre><code>Input:<br/>\n1 2 3\n4 5 6\n7 8 9\nReturn the following:\n[ \n  [1],\n  [2, 4],\n  [3, 5, 7],\n  [6, 8],\n  [9]\n]</code></pre></div></p>\n<p>Input: \n1 2\n3 4\nReturn the following: \n[\n  [1],\n  [2, 3],\n  [4]\n]\n\n<p></p>\n<p></p></p></div>",
        "statement": "Give a N*N square matrix, return an array of its anti-diagonals.  Look at the example for more details. Example:Input:1 2 34 5 67 8 9Return the following:[   [1],  [2, 4],  [3, 5, 7],  [6, 8],  [9]]",
        "link": "anti-diagonals"
    },
    {
        "title": "Balance Array",
        "topic": "Arrays",
        "companies": ["dunzo"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> of size <strong>N</strong>. You need to count the number of <strong>special</strong> elements in the given array.</p><p></p><p></p><p></p>\n<p>A element is <strong>special</strong> if removal of that element make the array <strong>balanced</strong>.</p>\n<p>Array will be <strong>balanced</strong> if sum of <strong>even</strong> index element <strong>equal</strong> to sum of <strong>odd</strong> index element.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p>\n<p>1 &lt;= A[i] &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A of size N.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the count of special elements.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [2, 1, 6, 4]</pre>\n<p>Input 2:</p>\n<pre> A = [5, 5, 2, 5, 8]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 1</pre>\n<p>Output 2:</p>\n<pre> 2</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> After deleting 1 from array : {2,6,4}\n    (2+4) = (6)\n Hence 1 is the only special element, so count is 1</pre>\n<p>Explanation 2:</p>\n<pre> If we delete A[0] or A[1] , array will be balanced\n    (5+5) = (2+8)\n So A[0] and A[1] are special elements, so count is 2.</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A of size N.  You need to count the number of special elements in the given array. A element is special if removal of that element make the array balanced. Array will be balanced if sum of even index element equal to sum of odd index element. ",
        "link": "balance-array"
    },
    {
        "title": "Find Duplicate in Array",
        "topic": "Arrays",
        "companies": ["Amazon", "VMWare", "Riverbed", "Microsoft"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a read only array of n + 1 integers between 1 and n, find one number that repeats in linear time using less than O(n) space and traversing the stream sequentially O(1) times.</div></p>\n<p><strong>Sample Input:</strong>\n<code>\n[3 4 1 4 1]\n</code>\n<strong>Sample Output:</strong>\n<code>\n1\n</code>\nIf there are multiple possible answers ( like in the sample case above ), output any one.</p>\n<p>If there is no duplicate, output -1</p></div>",
        "statement": "Given a read only array of n + 1 integers between 1 and n, find one number that repeats in linear time using less than O(n) space and traversing the stream sequentially O(1) times. ",
        "link": "find-duplicate-in-array"
    },
    {
        "title": "Sort array with squares!",
        "topic": "Arrays",
        "companies": ["VMWare"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a sorted array <strong>A</strong> containing <strong>N</strong> integers both positive and negative.</p><p></p>\n<p>You need to create another array containing the <strong>squares of all the elements</strong> in <strong>A</strong> and return it in non-decreasing order.</p>\n<p></p><li>Try to this in <strong>O(N)</strong> time.<p></p></li></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup>.</p><p></p>\n<p>-10<sup>3</sup> &lt;= A[i] &lt;= 10<sup>3</sup></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a integer array as described in the problem above.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [-6, -3, -1, 2, 4, 5]\n</pre>\n<p>Input 2:</p>\n<pre> A = [-5, -4, -2, 0, 1]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> [1, 4, 9, 16, 25, 36]\n</pre>\n<p>Output 2:</p>\n<pre> [0, 1, 4, 16, 25]\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a sorted array A containing N integers both positive and negative. You need to create another array containing the squares of all the elements in A and return it in non-decreasing order. Try to this in O(N) time. ",
        "link": "sort-array-with-squares!"
    },
    {
        "title": "Noble Integer",
        "topic": "Arrays",
        "companies": ["headout"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong>, find if an integer <strong>p</strong> exists in the array such that the number of integers greater than <strong>p</strong> in the array equals to <strong>p</strong>.</p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return 1 if any such integer p is found else return -1.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = [3, 2, 1, 3]</pre>\n<p>Input 2:</p>\n<pre> A = [1, 1, 3, 3]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 1</pre>\n<p>Output 2:</p>\n<pre> -1</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> For integer 2, there are 2 greater elements in the array. So, return 1.</pre>\n<p>Explanation 2:</p>\n<pre> There is no such integer exists.</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A, find if an integer p exists in the array such that the number of integers greater than p in the array equals to p. ",
        "link": "noble-integer"
    },
    {
        "title": "Hotel Bookings Possible",
        "topic": "Arrays",
        "companies": ["Goldman Sachs", "Microsoft"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>A hotel manager has to process <strong>N</strong> advance bookings of rooms for the next season. His hotel has <strong>C</strong> rooms. Bookings contain an arrival date and a departure date. He wants to find out whether there are enough rooms in the hotel to satisfy the demand. Write a program that solves this problem in time O(N log N) .</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array A containing arrival time of booking.<br/>\nSecond argument is an integer array B containing departure time of booking.<br/>\nThird argument is an integer C denoting the count of rooms.</p></div><br><br><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return True if there are enough rooms for N bookings else return False.<br/>\nReturn 0/1 for C programs.</p></div><br><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre> A = [1, 3, 5]\n B = [2, 6, 8]\n C = 1</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre> 0</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre> At day = 5, there are 2 guests in the hotel. But I have only one room.</pre></div><br/><br/></br></br></br></p>\n\n</div>",
        "statement": "A hotel manager has to process N advance bookings of rooms for the next season.  His hotel has C rooms.  Bookings contain an arrival date and a departure date.  He wants to find out whether there are enough rooms in the hotel to satisfy the demand.  Write a program that solves this problem in time O(N log N) . ",
        "link": "hotel-bookings-possible"
    },
    {
        "title": "Max Distance",
        "topic": "Arrays",
        "companies": ["Google", "Amazon", "Microsoft"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array <strong>A</strong> of integers, find the maximum of <strong>j - i</strong> subjected to the constraint of <strong>A[i] &lt;= A[j]</strong>.</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the maximum value of j - i;</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre> A = [3, 5, 4, 2]</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre> 2</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre> Maximum value occurs for pair (3, 4).</pre></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array A of integers, find the maximum of j - i subjected to the constraint of A[i] <= A[j]. ",
        "link": "max-distance"
    },
    {
        "title": "Maximum Unsorted Subarray",
        "topic": "Arrays",
        "companies": ["Amazon", "Microsoft"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array <strong>A</strong> of non-negative integers of size <strong>N</strong>. Find the minimum sub-array <strong>A<sub>l</sub>, A<sub>l+1</sub> ,..., A<sub>r</sub></strong> such that if we sort(in ascending order) that sub-array, then the whole array should get sorted.\nIf <strong>A</strong> is already sorted, output <strong>-1</strong>.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 1000000<br/>\n1 &lt;= A[i] &lt;= 1000000</p></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an array of non-negative integers of size N.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an array of length two where the first element denotes the starting index(0-based) and the second element denotes the ending index(0-based) of the sub-array. If the array is already sorted, return an array containing only one element i.e. -1.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>A = [1, 3, 2, 4, 5]</pre>\n<p>Input 2:</p>\n<pre>A = [1, 2, 3, 4, 5]</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>[1, 2]</pre>\n<p>Output 2:</p>\n<pre>[-1]</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>If we sort the sub-array A<sub>1</sub>, A<sub>2</sub>, then the whole array A gets sorted.</pre>\n<p>Explanation 2:</p>\n<pre>A is already sorted.</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given an array A of non-negative integers of size N.  Find the minimum sub-array Al, Al+1 ,. . . , Ar such that if we sort(in ascending order) that sub-array, then the whole array should get sorted. If A is already sorted, output -1. ",
        "link": "maximum-unsorted-subarray"
    },
    {
        "title": "Set Matrix Zeros",
        "topic": "Arrays",
        "companies": ["Oracle", "Amazon", "Facebook", "Paytm"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a matrix, <strong>A</strong> of size <strong>M</strong> x <strong>N</strong> of <strong>0s</strong> and <strong>1s</strong>. If an element is <strong>0</strong>, set its entire row and column to <strong>0</strong>.<p></p><p></p>\n<p><strong>Note</strong>: This will be evaluated on the extra memory used. Try to minimize the space and time complexity.</p>\n<p><strong>Input Format:</strong></p>\n<pre><code>The first and the only argument of input contains a 2-d integer matrix, A, of size M x N.\n</code></pre>\n<p><strong>Output Format:</strong></p>\n<pre><code>Return a 2-d matrix that satisfies the given conditions.\n</code></pre>\n<p><strong>Constraints:</strong></p>\n<pre><code>1 &lt;= N, M &lt;= 1000\n0 &lt;= A[i][j] &lt;= 1\n</code></pre>\n<p><strong>Examples:</strong></p>\n<pre><code>Input 1:\n    [   [1, 0, 1],\n        [1, 1, 1], \n        [1, 1, 1]   ]</code></pre></div></p>\n<p>Output 1:\n    [   [0, 0, 0],\n        [1, 0, 1],\n        [1, 0, 1]   ]</p>\n<p>Input 2:\n    [   [1, 0, 1],\n        [1, 1, 1],\n        [1, 0, 1]   ]</p>\n<p>Output 2:\n    [   [0, 0, 0],\n        [1, 0, 1],\n        [0, 0, 0]   ]\n\n<p></p>\n<p></p></p></div>",
        "statement": "Given a matrix, A of size M x N of 0s and 1s.  If an element is 0, set its entire row and column to 0. Note: This will be evaluated on the extra memory used.  Try to minimize the space and time complexity. Input Format:The first and the only argument of input contains a 2-d integer matrix, A, of size M x N. Output Format:Return a 2-d matrix that satisfies the given conditions. Constraints:1 <= N, M <= 10000 <= A[i][j] <= 1Examples:Input 1:    [   [1, 0, 1],        [1, 1, 1],         [1, 1, 1]   ]",
        "link": "set-matrix-zeros"
    },
    {
        "title": "Maximum Sum Square SubMatrix",
        "topic": "Arrays",
        "companies": ["DE Shaw"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a 2D integer matrix <strong>A</strong> of size <code>N x N</code> find a <code>B x B</code> submatrix where B&lt;= N and B&gt;= 1, such that <strong>sum of all the elements in submatrix is maximum</strong>.</p>\n</div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>3</sup>.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= B &lt;= N </p>\n<p>-10<sup>2</sup> &lt;= A[i][j] &lt;= 10<sup>2</sup>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First arguement is an 2D integer matrix <strong>A</strong>.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the maximum sum of submatrix of size <code>B x B</code>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [\n        [1, 1, 1, 1, 1]\n        [2, 2, 2, 2, 2]\n        [3, 8, 6, 7, 3]\n        [4, 4, 4, 4, 4]\n        [5, 5, 5, 5, 5]\n     ]\n B = 3\n</pre>\n<p>Input 2:</p>\n<pre> A = [\n        [2, 2]\n        [2, 2]\n    ]\n B = 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 48\n</pre>\n<p>Output 2:</p>\n<pre> 8\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>    Maximum sum 3 x 3 matrix is\n    8 6 7\n    4 4 4\n    5 5 5\n    Sum = 48\n</pre>\n<p>Explanation 2:</p>\n<pre> Maximum sum 2 x 2 matrix is\n  2 2\n  2 2\n  Sum = 8\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a 2D integer matrix A of size N x N find a B x B submatrix where B<= N and B>= 1, such that sum of all the elements in submatrix is maximum. ",
        "link": "maximum-sum-square-submatrix"
    },
    {
        "title": "N/3 Repeat Number",
        "topic": "Arrays",
        "companies": ["Google"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">You're given a read only array of n integers. Find out if any integer occurs more than n/3 times in the array in linear time and constant additional space.<p></p>\n<p>If so, return the integer. If not, return -1.</p>\n<p>If there are multiple solutions, return any one.</p>\n<p><strong>Example:</strong></p>\n<pre><code>Input: [1 2 3 1 1]\nOutput: 1 \n1 occurs 3 times which is more than 5/3 times.\n</code></pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "You're given a read only array of n integers.  Find out if any integer occurs more than n/3 times in the array in linear time and constant additional space. If so, return the integer.  If not, return -1. If there are multiple solutions, return any one. Example:Input: [1 2 3 1 1]Output: 1 1 occurs 3 times which is more than 5/3 times. ",
        "link": "n/3-repeat-number"
    },
    {
        "title": "Reorder Data in Log Files",
        "topic": "Arrays",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">You are given an array of logs. Each log is a space-delimited string of words, where the first word is the identifier.<br/><br/>There are two types of logs:<br/><br/>\n<ul>\n<li>Letter-logs: All words (except the identifier) consist of lowercase English letters.</li>\n<li>Digit-logs: All words (except the identifier) consist of digits.</li>\n</ul>\n<br/>Reorder these logs so that:<br/><br/>\n<ul>\n<li>The letter-logs come before all digit-logs.</li>\n<li>The letter-logs are sorted lexicographically by their contents. If their contents are the same, then sort them lexicographically by their identifiers.</li>\n<li>The digit-logs maintain their relative ordering.</li>\n</ul>\n<br/>Return the final order of the logs.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= logs.length &lt;= 1000<br/>\n3 &lt;= logs[i].length &lt;= 1000<br/>\nAll the tokens of logs[i] are separated by a single space.<br/>\nlogs[i] is guaranteed to have an identifier and at least one word after the identifier.<br/></div><br><br><strong>Input Format</strong><br>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is a string array A where each element is a log.</div><br><br><strong>Output Format</strong><br>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return the string array A after making the changes.</div><br><br><strong>Example Input</strong><br>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = [\"dig1-8-1-5-1\", \"let1-art-can\", \"dig2-3-6\", \"let2-own-kit-dig\", \"let3-art-zero\"]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = [\"a1-9-2-3-1\",\"g1-act-car\",\"zo4-4-7\",\"ab1-off-key-dog\",\"a8-act-zoo\"]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>[\"let1-art-can\",\"let3-art-zero\",\"let2-own-kit-dig\",\"dig1-8-1-5-1\",\"dig2-3-6\"]\n</code></pre>\n<p>Output 2:</p>\n<pre><code>[\"g1-act-car\", \"a8-act-zoo\", \"ab1-off-key-dog\", \"a1-9-2-3-1\", \"zo4-4-7\"]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre>The letter-log contents are all different, so their ordering is \"art-can\", \"art-zero\", \"own-kit-dig\".\nThe digit-logs have a relative order of \"dig1-8-1-5-1\", \"dig2-3-6\".\n</pre>\n<p>Explanation 2:</p>\n<pre><code>The array has been sorted restricted to the conditions given.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></br></br></br></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "You are given an array of logs.  Each log is a space-delimited string of words, where the first word is the identifier. There are two types of logs:Letter-logs: All words (except the identifier) consist of lowercase English letters. Digit-logs: All words (except the identifier) consist of digits. Reorder these logs so that:The letter-logs come before all digit-logs. The letter-logs are sorted lexicographically by their contents.  If their contents are the same, then sort them lexicographically by their identifiers. The digit-logs maintain their relative ordering. Return the final order of the logs. ",
        "link": "reorder-data-in-log-files"
    },
    {
        "title": "Move Zeroes",
        "topic": "Arrays",
        "companies": ["Adobe"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong>, move all 0's to the end of it while maintaining the relative order of the non-zero elements.\n</p><p>\nNote that you must do this in-place without making a copy of the array.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>1 &lt;= |A| &lt;= 10<sup>5</sup></pre></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is array of integers A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an array of integers which satisfies above property.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p>\n<pre>A = [0, 1, 0, 3, 12]\n</pre>\n<p>Input 2:</p>\n<pre>A = [0]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Ouput 1:<p></p>\n<pre>[1, 3, 12, 0, 0]\n</pre>\n<p>Ouput 2:</p>\n<pre>[0]\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p>\n<pre>Shift all zeroes to the end.</pre>\n<p>Explanation 2:</p>\n<pre>There is only one zero so no need of shifting.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A, move all 0's to the end of it while maintaining the relative order of the non-zero elements. Note that you must do this in-place without making a copy of the array. ",
        "link": "move-zeroes"
    },
    {
        "title": "Make equal elements Array",
        "topic": "Arrays",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array of all positive integers and an element \u201cx\u201d. </p><p>You need to find out whether all array elements can be made equal or not by performing any of the 3 operations: add x to any element in array, subtract x from any element from array, do nothing.</p><p> This operation can be performed only once on an element of array.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>1&lt;=|A|&lt;=1e5\n1&lt;=A[i],x&lt;=1e9\n</pre></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>First argument is array of integers .\nSecond argument is B which denotes the value of x.</pre></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return 1 if we can make all elements equal , otherwise return 0.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p>\n<pre>A=[2,3,1]\nX=1\n</pre>\n<p>Input 2:</p>\n<pre>A=[2,3,1]\nX=2\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Ouput 1:<p></p>\n<pre>1\n</pre>\n<p>Ouput 2:</p>\n<pre>0\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p>\n<pre>WE can make all elements equal to 2.\n</pre>\n<p>Explanation 2:</p>\n<pre>There is no way to make all elements equal to 0.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array of all positive integers and an element \u201cx\u201d.  You need to find out whether all array elements can be made equal or not by performing any of the 3 operations: add x to any element in array, subtract x from any element from array, do nothing.  This operation can be performed only once on an element of array. ",
        "link": "make-equal-elements-array"
    },
    {
        "title": "Segregate 0s and 1s in an array",
        "topic": "Arrays",
        "companies": ["Unravel Data"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>\nYou are given an array of 0s and 1s in random order. Segregate 0s on left side and 1s on right side of the array [Basically you have to sort the array]. Traverse array only once. </p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>1&lt;=|A|&lt;=1e6\n</pre></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is array of integers consisting of 0's and 1's only.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a sorted array.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p>\n<pre>a=[0 1 0]\n</pre>\n<p>Input 2:</p>\n<pre>A=[1 1 0 ]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Ouput 1:<p></p>\n<pre>[0 0 1]\n</pre>\n<p>Ouput 2:</p>\n<pre>[0 1 1]\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p>\n<pre> above is sorted array.\n</pre>\n<p>Explanation 2:</p>\n<pre>sort the array.\n</pre>\n<p></p>\n</div><br/><br/></p>\n\n</div>",
        "statement": "You are given an array of 0s and 1s in random order.  Segregate 0s on left side and 1s on right side of the array [Basically you have to sort the array].  Traverse array only once.  ",
        "link": "segregate-0s-and-1s-in-an-array"
    },
    {
        "title": "Array Sum",
        "topic": "Arrays",
        "companies": ["Paytm"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given two numbers represented as integer arrays <strong>A</strong> and <strong>B</strong>, where each digit is an element.<br/>\nYou have to return an array which representing the sum of the two given numbers.</p>\n<p>The last element denotes the least significant bit, and the first element denotes the most significant bit.</p></div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A|, |B| &lt;= 10<sup>5</sup><br/>\n0 &lt;= A<sub>i</sub>, B<sub>i</sub> &lt;= 9</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is an integer array A.\nThe second argument is an integer array B.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an array denoting the sum of the two numbers.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = [1, 2, 3]\nB = [2, 5, 5]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = [9, 9, 1]\nB = [1, 2, 1]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>[3, 7, 8]\n</code></pre>\n<p>Output 2:</p>\n<pre><code>[1, 1, 1, 2]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>Simply, add all the digits in their place.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>991 + 121 = 1112\nNote that the resultant array size might be larger.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "You are given two numbers represented as integer arrays A and B, where each digit is an element. You have to return an array which representing the sum of the two given numbers. The last element denotes the least significant bit, and the first element denotes the most significant bit. ",
        "link": "array-sum"
    },
    {
        "title": "Set Intersection",
        "topic": "Arrays",
        "companies": ["uber"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>An integer interval <strong>[X, Y]</strong> (for integers X &lt; Y) is a set of all consecutive integers from X to Y, including X and Y.<br/>\nYou are given a 2D array <strong>A</strong> with dimensions <strong>N x 2</strong>, where each row denotes an interval.<br/>\nFind the minimum size of a set <strong>S</strong> such that for every integer interval <strong>Z</strong> in A, the intersection of S with <strong>Z</strong> has a size of at least two.</p></div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= N &lt;= 10<sup>5</sup><br/>\n1 &lt;= A[i][0] &lt; A[i][1] &lt;= 10<sup>9</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is a 2D integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting the minimum size of S.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = [[1, 3], [1, 4], [2, 5], [3, 5]]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = [[1, 2], [2, 3], [2, 4], [4, 5]]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>3\n</code></pre>\n<p>Output 2:</p>\n<pre><code>5\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>Consider the set S = {2, 3, 4}.  For each interval, there are at least 2 elements from S in the interval.\nAlso, there isn't a smaller size set that fulfills the above condition.\nThus, we output the size of this set, which is 3.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>An example of a minimum sized set is {1, 2, 3, 4, 5}.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></p>\n\n</div>",
        "statement": "An integer interval [X, Y] (for integers X < Y) is a set of all consecutive integers from X to Y, including X and Y. You are given a 2D array A with dimensions N x 2, where each row denotes an interval. Find the minimum size of a set S such that for every integer interval Z in A, the intersection of S with Z has a size of at least two. ",
        "link": "set-intersection"
    },
    {
        "title": "Occurence of Each Number",
        "topic": "Arrays",
        "companies": ["Unravel Data"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given an integer array <strong>A</strong>.<br/>\nYou have to find the number of occurences of each number.<br/>\nReturn an array containing only the occurences with the smallest value's occurence first.<br/>\nFor example, A = [4, 3, 3], you have to return an array [2, 1], where 2 is the number of occurences for element 3, \nand 1 is the number of occurences for element 4. But, 2 comes first because 3 is smaller than 4.</p></div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>\n1 &lt;= A<sub>i</sub> &lt;= 10<sup>9</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer array denoting the occurences of each number.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = [1, 2, 3]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = [4, 3, 3]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>[1, 1, 1]\n</code></pre>\n<p>Output 2:</p>\n<pre><code>[2, 1]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>All the elements occur once, so the resultant array should be [1, 1, 1].</code></pre>\n<p>Explanation 2:</p>\n<pre><code>Explained in the description above.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "You are given an integer array A. You have to find the number of occurences of each number. Return an array containing only the occurences with the smallest value's occurence first. For example, A = [4, 3, 3], you have to return an array [2, 1], where 2 is the number of occurences for element 3, and 1 is the number of occurences for element 4.  But, 2 comes first because 3 is smaller than 4. ",
        "link": "occurence-of-each-number"
    },
    {
        "title": "Greater of Lesser",
        "topic": "Arrays",
        "companies": ["Accenture"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given two integer arrays <strong>A</strong> and <strong>B</strong>, and an integer <strong>C</strong>.<br/>Find the number of integers in <strong>A which are greater than C</strong> and find the number of integers in <strong>B which are less than C</strong>.<br/>Return maximum of these two values.</div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A|, |B| &lt;= 10<sup>5</sup><br/>1 &lt;= A<sub>i</sub>, B<sub>i</sub>, C &lt;=10<sup>9</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is an integer array A.<br/>Second argument is an integer array B.<br/>Third argument is an integer C.</div><br><br><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = [1, 2, 3, 4]\nB = [5, 6, 7, 8]\nC = 4\n</pre>\n<p>Input 2:</p>\n<pre>A = [1, 10, 100]\nB = [9, 9, 9]\nC = 50\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>0\n</pre>\n<p>Output 2:</p>\n<pre>3\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>There are no integers greater than C in A.\nThere are no integers less than C in B.\n</pre>\n<p>Explanation 2:</p>\n<pre>Integers greater than C in A are [100].\nIntegers less than C in A are [9, 9, 9].\n</pre></div><br/><br/></br></br></br></br></br></p>\n\n</div>",
        "statement": "Given two integer arrays A and B, and an integer C. Find the number of integers in A which are greater than C and find the number of integers in B which are less than C. Return maximum of these two values. ",
        "link": "greater-of-lesser"
    },
    {
        "title": "Spiral Matrix",
        "topic": "Arrays",
        "companies": ["Accenture"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an array of <strong>A</strong> of length <strong>B\u00d7C</strong>.<br/>Make a <strong>Spiral matrix</strong> (2D array) of B rows and C columns.<br/><br/>Note: See example input for pattern.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A<sub>i</sub> &lt;=10<sup>5</sup><br/>1 &lt;= B\u00d7C &lt;= 10<sup>5</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is an integer array A.<br/>Second argument is an integer B.<br/>Third argument is an integer C.</div><br><br><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return 2D integer array.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = [1, 2, 4, 8]\nB = 2\nC = 2\n</pre>\n<p>Input 2:</p>\n<pre>A = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nB = 3\nC = 3\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>[[1, 2],\n [8, 4]]\n</pre>\n<p>Output 2:</p>\n<pre>[[1, 2, 3],\n [8, 9, 4],\n [7, 6, 5]]\n</pre></div><br/><br/></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "Given an array of A of length B\u00d7C. Make a Spiral matrix (2D array) of B rows and C columns. Note: See example input for pattern. ",
        "link": "spiral-matrix"
    },
    {
        "title": "Product of All",
        "topic": "Arrays",
        "companies": ["Accenture", "Deloitte"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer array <strong>A</strong>.<br/>Create an array <strong>B</strong> such that <strong>B<sub>i</sub></strong> is the <strong>product of all elements of A excluding A<sub>i</sub></strong>.<br/>Since the products can be too large take <strong>modulo 10<sup>9</sup> +7</strong>.</div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>1 &lt;= A<sub>i</sub> &lt;= 10<sup>9</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer array.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = [1, 2, 3, 4]\n</pre>\n<p>Input 2:</p>\n<pre>A = [9, 9, 9]\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>[24, 12, 8, 6]\n</pre>\n<p>Output 2:</p>\n<pre>[81, 81, 81]\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>[2\u00d73\u00d74, 1\u00d73\u00d74, 1\u00d72\u00d74, 1\u00d72\u00d73]</pre>\n<p>Explanation 2:</p>\n<pre>[9\u00d79, 9\u00d79, 9\u00d79]</pre></div><br/><br/></br></br></br></p>\n\n</div>",
        "statement": "Given an integer array A. Create an array B such that Bi is the product of all elements of A excluding Ai. Since the products can be too large take modulo 109 +7. ",
        "link": "product-of-all"
    },
    {
        "title": "Chips Factory",
        "topic": "Arrays",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">A chips factory is packing chips in packets.<br/>The packets of chips are represented as an array A.<br/>Find the packet of chips which are empty (A<sub>i</sub> = 0) and move them to the end of the array.<br/>Return the resultant array.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>0 &lt;= A<sub>i</sub> &lt;= 10<sup>9</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer array.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = [0, 1, 2, 3]\n</pre>\n<p>Input 2:</p>\n<pre>A = [1, 0, 0, 0]\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>[1, 2, 3, 0]\n</pre>\n<p>Output 2:</p>\n<pre>[1, 0, 0, 0]\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>The only empty packet is at index 1 so we move it last of the array.</pre>\n<p>Explanation 2:</p>\n<pre>The  packets are already in required arrangement.</pre></div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "A chips factory is packing chips in packets. The packets of chips are represented as an array A. Find the packet of chips which are empty (Ai = 0) and move them to the end of the array. Return the resultant array. ",
        "link": "chips-factory"
    },
    {
        "title": "Greater than All",
        "topic": "Arrays",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer array <strong>A</strong>.<br/>Find the count of elements whose value is <strong>greater than all of its previous elements</strong>.<br/><br/>Note: Since there are no elements before first element so it should be considered in our answer.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>1 &lt;= A<sub>i</sub> &lt;= 10<sup>9</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = [1, 2, 3, 4]\n</pre>\n<p>Input 2:</p>\n<pre>A = [1, 1, 2, 2]\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>4\n</pre>\n<p>Output 2:</p>\n<pre>2\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>All elements are greater than all of its prior elements.</pre>\n<p>Explanation 2:</p>\n<pre>Index 1 will be considerd in answer.\nAlso Elements at index 3 is greater than all of it's previous elements.</pre></div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "Given an integer array A. Find the count of elements whose value is greater than all of its previous elements. Note: Since there are no elements before first element so it should be considered in our answer. ",
        "link": "greater-than-all"
    },
    {
        "title": "Pythagorean Triplets",
        "topic": "Arrays",
        "companies": ["Wipro"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">A Pythagorean triplet is a set of three integers <strong>a, b and c</strong> such that <strong>a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup></strong>.<br/>Find the number of pythagorean triplets such that all the elements of the triplet are less than or equal to <strong>A</strong>.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>3</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 5\n</pre>\n<p>Input 2:</p>\n<pre>A = 13\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>1</pre>\n<p>Output 2:</p>\n<pre>3</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>Then only triplet is {3, 4, 5}</pre>\n<p>Explanation 2:</p>\n<pre>The triplets are {3, 4, 5}, {6, 8, 10}, {5, 12, 13}.\n</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "A Pythagorean triplet is a set of three integers a, b and c such that a2 + b2 = c2. Find the number of pythagorean triplets such that all the elements of the triplet are less than or equal to A. ",
        "link": "pythagorean-triplets"
    },
    {
        "title": "Diagonal Flip",
        "topic": "Arrays",
        "companies": ["Cognizant", "IBM"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a square <strong>binary matrix </strong>of drimensions <strong>N\u00d7N</strong>.<br/><strong>Flip the matrix diagonally</strong> and return the matrix.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= N &lt;= 1000<br/>A[i][j] ={0, 1}</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a 2D integer array.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a 2D integer array.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 4\nB = [[1, 0],\n     [0, 1]]\n</pre>\n<p>Input 2:</p>\n<pre>A = [[1, 0],\n     [1, 0]]\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>[[1, 0],\n [0, 1]]</pre>\n<p>Output 2:</p>\n<pre>[[1, 1],\n [0, 0]]\n </pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>We will swap the values at positions (1, 2) and (2, 1).\n</pre>\n<p>Explanation 2:</p>\n<pre>We will swap the values at positions (1, 2) and (2, 1).\n</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given a square binary matrix of drimensions N\u00d7N. Flip the matrix diagonally and return the matrix. ",
        "link": "diagonal-flip"
    },
    {
        "title": "Positive Negative",
        "topic": "Arrays",
        "companies": ["SAP"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer array <strong>A</strong>.<br/>Find the number of positive and negative integers in it an return them in an array.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>-10<sup>9</sup> &lt;= A<sub>i</sub> &lt;= 10<sup>9</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer array of length two, first value should be count of positive integers and other count of negative integers.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = [1, 2, 3]\n</pre>\n<p>Input 2:</p>\n<pre>A = [1, 0, -1]\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>[3, 0]</pre>\n<p>Output 2:</p>\n<pre>[1, 1]</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>Positive values are [1, 2, 3].\nThere are no negative values.\n</pre>\n<p>Explanation 2:</p>\n<pre>Only positive value is [1].\nOnly negative value is [-1].\n</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given an integer array A. Find the number of positive and negative integers in it an return them in an array. ",
        "link": "positive-negative"
    },
    {
        "title": "Total Moves For Bishop!",
        "topic": "Math",
        "companies": ["Goldman Sachs"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given the position of a Bishop <strong>(A, B)</strong> on an <code>8 * 8</code> chessboard.</p>\n<p>Your task is to count the <strong>total number of squares</strong> that can be visited by the Bishop in one move.</p>\n<p>The position of the Bishop is denoted using row and column number of the chessboard.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A, B &lt;= 8</p>\n</div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer <strong>A</strong> denoting the row number of the bishop.</p>\n<p>Second argument is an integer <strong>B</strong> denoting the column number of the bishop.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the <strong>total number of squares</strong> that can be visited by the Bishop in one move.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = 4\n B = 4\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n 13\n</pre></div><br/><br/></p>\n\n</div>",
        "statement": "Given the position of a Bishop (A, B) on an 8 * 8 chessboard. Your task is to count the total number of squares that can be visited by the Bishop in one move. The position of the Bishop is denoted using row and column number of the chessboard. ",
        "link": "total-moves-for-bishop!"
    },
    {
        "title": "Distribute in Circle!",
        "topic": "Math",
        "companies": ["Goldman Sachs"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p><strong>A</strong> items are to be delivered in a circle of size <strong>B</strong>.</p>\n<p>Find the position where the <strong>A<sup>th</sup></strong> item will be delivered if we start from a given position <strong>C</strong>.</p>\n<p><strong>NOTE:</strong> Items are distributed at adjacent positions starting from <strong>C</strong>.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A, B, C &lt;= 10<sup>8</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer <strong>A</strong>.</p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p>Third argument is an integer <strong>C</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the position where the <strong>A<sup>th</sup></strong> item will be delivered if we start from a given position <strong>C</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = 2\n B = 5\n C = 1\n</pre>\n<p>Input 2:</p>\n<pre>\n A = 8\n B = 5\n C = 2\n</pre>\n</div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n 2\n</pre>\n<p>Output 2:</p>\n<pre>\n 4\n</pre>\n</div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n The first item will be given to 1st position. Second (or last) item will be delivered to 2nd position\n</pre>\n<p>Explanation 2:</p>\n<pre>\n The last item will be delivered to 4th position</pre></div></p>\n<p>\n</p></div>",
        "statement": "A items are to be delivered in a circle of size B. Find the position where the Ath item will be delivered if we start from a given position C. NOTE: Items are distributed at adjacent positions starting from C. ",
        "link": "distribute-in-circle!"
    },
    {
        "title": "Sum of pairwise Hamming Distance",
        "topic": "Math",
        "companies": ["Google"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Hamming distance between two non-negative integers is defined as the number of positions at which the corresponding bits are different.</p>\n<p>Given an array <strong>A</strong> of N non-negative integers, find the sum of hamming distances of all pairs of integers in the array. Return the answer modulo 1000000007.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 200000</p>\n<p>1 &lt;= A[i] &lt;= 10<sup>9</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is array A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return one integer, the answer to the problem.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [1]\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> A = [2, 4, 6]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> 0\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 8\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> No pairs are formed.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> We return, f(2, 2) + f(2, 4) + f(2, 6) + f(4, 2) + f(4, 4) + f(4, 6) + f(6, 2) + f(6, 4) + f(6, 6) = 8\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Hamming distance between two non-negative integers is defined as the number of positions at which the corresponding bits are different. Given an array A of N non-negative integers, find the sum of hamming distances of all pairs of integers in the array.  Return the answer modulo 1000000007. ",
        "link": "sum-of-pairwise-hamming-distance"
    },
    {
        "title": "Is Rectangle?",
        "topic": "Math",
        "companies": ["Booking.com"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given four positive integers <strong>A, B, C, D</strong>, determine if there\u2019s a rectangle such that the lengths of its sides are A, B, C and D (in any order).</p><p></p><p></p>\n<p>If any such rectangle exist return <strong>1</strong> else return 0.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A, B, C, D &lt;= 100</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an interger <strong>A</strong>.</p><p></p><p></p>\n<p>Second argument is an interger <strong>B</strong>.</p>\n<p>Third argument is an interger <strong>C</strong>.</p>\n<p>Fourth argument is an interger <strong>D</strong>.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>If any such rectangle exist whose sides are A, B, C, D in any orde then return <strong>1</strong> else return 0.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = 1\n B = 1\n C = 2\n D = 2\n</pre>\n<p>Input 2:</p>\n<pre> A = 1\n B = 2\n C = 3\n D = 4\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> <img src=\"https://imgur.com/zCpGphV.jpeg\"/>\n The rectangle drawn above is one of the rectangles that can be formed by side length of 1, 1, 2, 2 so we will return 1.\n</pre>\n<p>Explanation 2:</p>\n<pre> No such rectangle exist whose sides are 1, 2, 3, 4. So, we will return 0.\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given four positive integers A, B, C, D, determine if there\u2019s a rectangle such that the lengths of its sides are A, B, C and D (in any order). If any such rectangle exist return 1 else return 0. ",
        "link": "is-rectangle?"
    },
    {
        "title": "Step by Step",
        "topic": "Math",
        "companies": ["toppr"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a <strong>target A</strong> on an infinite number line, i.e. <strong>-infinity to +infinity</strong>.<br/>\nYou are currently at position <strong>0</strong> and you need to reach the target by moving according to the below rule:</p>\n<li>In <strong>i<sup>th</sup></strong> move you can take <strong>i</strong> steps forward or backward.</li><p></p>\n<p>Find the <strong>minimum</strong> number of moves required to reach the target.</p>\n<p></p></div><br><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>-10<sup>9</sup> &lt;= A &lt;= 10<sup>9</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the minimum moves to reach target.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> 3</pre>\n<p>Input 2:</p>\n<pre> 2</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 2</pre>\n<p>Output 2:</p>\n<pre> 3</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> On the first move we step from 0 to 1.\n On the second step we step from 1 to 3.</pre>\n<p>Explanation 2:</p>\n<pre> On the first move we step from 0 to 1.\n On the second move we step  from 1 to -1.\n On the third move we step from -1 to 2.</pre>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given a target A on an infinite number line, i. e.  -infinity to +infinity. You are currently at position 0 and you need to reach the target by moving according to the below rule:In ith move you can take i steps forward or backward. Find the minimum number of moves required to reach the target. ",
        "link": "step-by-step"
    },
    {
        "title": "Excel Column Number",
        "topic": "Math",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a column title <strong>A</strong> as appears in an Excel sheet, return its corresponding column number.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 100</p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is string A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> \"A\"\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> \"AB\"\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 28\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre> A -&gt; 1\n</pre>\n<p>Explanation 2:</p>\n<pre>A  -&gt; 1\nB -&gt; 2\nC -&gt; 3\n...\nZ -&gt; 26\nAA -&gt; 27\nAB -&gt; 28 \n</pre></div><br/><br/></p>\n\n</div>",
        "statement": "Given a column title A as appears in an Excel sheet, return its corresponding column number. ",
        "link": "excel-column-number"
    },
    {
        "title": "Excel Column Title",
        "topic": "Math",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a positive integer <strong>A</strong>, return its corresponding column title as appear in an Excel sheet.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A &lt;= 1000000000</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is integer A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a string, the answer to the problem.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 1\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> A = 28\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> \"A\"\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> \"AB\"\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> 1 -&gt; A\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>1 -&gt; A\n2 -&gt; B\n3 -&gt; C\n...\n26 -&gt; Z\n27 -&gt; AA\n28 -&gt; AB \n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a positive integer A, return its corresponding column title as appear in an Excel sheet. ",
        "link": "excel-column-title"
    },
    {
        "title": "Palindrome Integer",
        "topic": "Math",
        "companies": ["HCL"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Determine whether an integer is a palindrome. Do this without extra space.</p><p></p>\n<p>A palindrome integer is an integer x for which reverse(x) = x where reverse(x) is x with its digit reversed. Negative numbers are not palindromic.\n</p>\n<p></p>\n<p><strong>Example</strong> :</p>\n<pre><code>Input : 12121\nOutput : 1</code></pre></div></p>\n<p>Input : 123\nOutput : 0\n\n<p></p>\n<p></p></p></div>",
        "statement": "Determine whether an integer is a palindrome.  Do this without extra space. A palindrome integer is an integer x for which reverse(x) = x where reverse(x) is x with its digit reversed.  Negative numbers are not palindromic. Example :Input : 12121Output : 1",
        "link": "palindrome-integer"
    },
    {
        "title": "Reverse integer",
        "topic": "Math",
        "companies": ["HCL", "Bloomberg"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given an integer <strong>N</strong> and the task is to reverse the digits of the given integer. Return <strong>0</strong> if the result overflows and does not fit in a 32 bit signed integer<br/><br/>\nLook at the example for clarification.</p></div><br><br><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>N belongs to the Integer limits.</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input an Integer.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the reverse of the given integer.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> x = 123</pre>\n<p><br/>\nInput 2:</p>\n<pre> x = -123</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 321\n</pre>\n<p><br/>\nOuput 2:</p>\n<pre> -321</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre> If the given integer is negative like -123 the output is also negative -321.</pre></div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "You are given an integer N and the task is to reverse the digits of the given integer.  Return 0 if the result overflows and does not fit in a 32 bit signed integerLook at the example for clarification. ",
        "link": "reverse-integer"
    },
    {
        "title": "Next Smallest Palindrome!",
        "topic": "Math",
        "companies": ["Google", "grofers"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a numeric string <strong>A</strong> representing a large number you need to find the <strong>next smallest palindrome</strong> greater than this number.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 100</p><p></p>\n<p>A doesn't start with zeroes and always contain digits from 0-9.</p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a numeric string denoting the <strong>next smallest palindrome</strong> greater than A.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = \"23545\"\n</pre>\n<p>Input 2:</p>\n<pre> A = \"999\"\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> \"23632\"\n</pre>\n<p>Output 2:</p>\n<pre> \"1001\"\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a numeric string A representing a large number you need to find the next smallest palindrome greater than this number. ",
        "link": "next-smallest-palindrome!"
    },
    {
        "title": "Find Nth Fibonacci",
        "topic": "Math",
        "companies": ["Facebook", "Deloitte"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer <strong>A</strong> you need to find the <strong>A<sup>th</sup></strong> fibonacci number modulo <strong>10<sup>9</sup> + 7</strong>.</p>\n<p>The first fibonacci number F<sub>1</sub> = 1</p>\n<p>The first fibonacci number F<sub>2</sub> = 1</p>\n<p>The n<sup>th</sup> fibonacci number F<sub>n</sub> = F<sub>n-1</sub> + F<sub>n-2</sub> (n &gt; 2)</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A &lt;= 10<sup>9</sup>.</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting <strong>A<sup>th</sup></strong> fibonacci number modulo <strong>10<sup>9</sup> + 7</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = 4\n</pre>\n<p>Input 2:</p>\n<pre>\n A = 3\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n 3\n</pre>\n<p>Output 2:</p>\n<pre>\n 2\n</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n F<sub>3</sub> = F<sub>2</sub> + F<sub>1</sub> = 1 + 1 = 2\n F<sub>4</sub> = F<sub>3</sub> + F<sub>2</sub> = 2 + 1 = 3\n</pre>\n<p>Explanation 2:</p>\n<pre>\n F<sub>3</sub> = F<sub>2</sub> + F<sub>1</sub> = 1 + 1 = 2\n</pre></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer A you need to find the Ath fibonacci number modulo 109 + 7. The first fibonacci number F1 = 1The first fibonacci number F2 = 1The nth fibonacci number Fn = Fn-1 + Fn-2 (n > 2)",
        "link": "find-nth-fibonacci"
    },
    {
        "title": "Trailing Zeros in Factorial",
        "topic": "Math",
        "companies": ["Microsoft", "Jabong", "Zillow"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer <strong>A</strong>, return the number of trailing zeroes in A!.</p><p></p>\n<p><strong>Note</strong>: Your solution should be in logarithmic time complexity.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>0 &lt;= A &lt;= 10000000</p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argumment is integer A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer, the answer to the problem.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 4\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> A = 5\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 0\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 4! = 24\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 5! = 120\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer A, return the number of trailing zeroes in A!. Note: Your solution should be in logarithmic time complexity. ",
        "link": "trailing-zeros-in-factorial"
    },
    {
        "title": "Largest Coprime Divisor",
        "topic": "Math",
        "companies": [],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">You are given two positive numbers\u00a0A\u00a0and\u00a0B. You need to find the maximum valued integer\u00a0X\u00a0such that:<br/><br/><strong>X</strong>\u00a0divides\u00a0A\u00a0i.e.\u00a0<strong>A\u00a0%\u00a0X\u00a0=\u00a00</strong><br/><strong>X</strong>\u00a0and\u00a0<strong>B</strong>\u00a0are co-prime i.e. <strong>gcd(X,\u00a0B) =\u00a01</strong><br/>For example,<br/><br/>A = 30<br/>B = 12<br/>We return<br/>X = 5</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1&lt;=A,B&lt;=1e9</div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is A.<br/>Second argument is B.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Find the maximum valued integer X which satisfies the above properties.</div><br/><br/></p>\n\n</div>",
        "statement": "You are given two positive numbersAandB.  You need to find the maximum valued integerXsuch that:XdividesAi. e. A%X=0XandBare co-prime i. e.  gcd(X,B) =1For example,A = 30B = 12We returnX = 5",
        "link": "largest-coprime-divisor"
    },
    {
        "title": "Next Similar Number",
        "topic": "Math",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a number <strong>A</strong> in a form of string.</p><p></p><p></p>\n<p>You have to find the smallest number that has same set of digits as A and is greater than A.</p>\n<p>If A is the greatest possible number with its set of digits, then return -1.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= A &lt;= 10<sup>100000</sup></p><p></p><p></p>\n<p> A doesn't contain leading zeroes.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an numeric string denoting the number <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a string denoting the smallest number greater than A with same set of digits , if A is the largest possible then return -1.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = \"218765\"\n</pre>\n<p>Input 2:</p>\n<pre> A = \"4321\"\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> \"251678\"\n</pre>\n<p>Output 2:</p>\n<pre> \"-1\"\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> The smallest number greater then 218765 with same set of digits is 251678.\n</pre>\n<p>Explanation 2:</p>\n<pre> The given number is the largest possible number with given set of digits so we will return -1.\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a number A in a form of string. You have to find the smallest number that has same set of digits as A and is greater than A. If A is the greatest possible number with its set of digits, then return -1. ",
        "link": "next-similar-number"
    },
    {
        "title": "Numbers of length N and value less than K",
        "topic": "Math",
        "companies": [],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a set of digits (A) in sorted order, find how many numbers of length B are possible whose value is less than number C.<p></p>\n<p><strong>NOTE: All numbers can only have digits from the given set. </strong> <br/></p>\n<p><strong>Examples:</strong></p>\n<pre><code>Input:\n  0 1 5<br/>\n  1<br/>\n  2<br/>\nOutput:<br/>\n  2 (0 and 1 are possible)  </code></pre></div></p>\n<p>Input:\n  0 1 2 5<br/>\n  2<br/>\n  21<br/>\nOutput:\n  5 (10, 11, 12, 15, 20 are possible)\n\n<p><strong>Constraints:</strong></p>\n<pre><code>1 &lt;= B &lt;= 9, 0 &lt;= C &lt;= 1e9 &amp; 0 &lt;= A[i] &lt;= 9\n</code></pre>\n<p></p></p></div>",
        "statement": "Given a set of digits (A) in sorted order, find how many numbers of length B are possible whose value is less than number C. NOTE: All numbers can only have digits from the given set.   Examples:Input:  0 1 5  1  2Output:  2 (0 and 1 are possible)  ",
        "link": "numbers-of-length-n-and-value-less-than-k"
    },
    {
        "title": "City Tour",
        "topic": "Math",
        "companies": [],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>There are <strong>A</strong> cities numbered from <strong>1</strong> to <strong>A</strong>. You have already visited <strong>M</strong> cities, the indices of which are given in an array <strong>B</strong> of <strong>M</strong> integers.</p></div></p>\n<p>If a city with index <strong>i</strong> is visited, you can visit either the city with index <strong>i-1</strong> (<strong>i</strong> &gt;= 2) or the city with index <strong>i+1</strong> (<strong>i</strong> &lt; <strong>A</strong>) if they are not already visited.\nEg: if <strong>N</strong> = 5 and array <strong>M</strong> consists of [3, 4], then in the first level of moves, you can either visit 2 or 5.</p>\n<p>You keep visiting cities in this fashion until all the cities are not visited.\nFind the number of ways in which you can visit all the cities modulo <strong>10^9+7</strong>.</p>\n<p><strong>Input Format</strong>\n<code>\nThe 1st argument given is an integer A, i.e total number of cities.\nThe 2nd argument given is an integer array B, where B[i] denotes ith city you already visited.\n</code></p>\n<p><strong>Output Format</strong>\n<code>\nReturn an Integer X % (1e9 + 7), number of ways in which you can visit all the cities.\n</code>\n<strong>Constraints</strong>\n<code>\n1 &lt;= A &lt;= 1000\n1 &lt;= M &lt;= A\n1 &lt;= B[i] &lt;= A\n</code></p>\n<p><strong>For Example</strong> <br/></p>\n<p><strong>Input:</strong>\n<code>\nA = 5\nB = [2, 5]\n</code>\n<strong>Output:</strong>\n<code>\n6\n</code>\n<strong>Explanation:</strong>\n<code>\nAll possible ways to visit remaining cities are :\n1. 1 -&gt; 3 -&gt; 4\n2. 1 -&gt; 4 -&gt; 3\n3. 3 -&gt; 1 -&gt; 4\n4. 3 -&gt; 4 -&gt; 1\n5. 4 -&gt; 1 -&gt; 3\n6. 4 -&gt; 3 -&gt; 1\n</code></p></div>",
        "statement": "There are A cities numbered from 1 to A.  You have already visited M cities, the indices of which are given in an array B of M integers. ",
        "link": "city-tour"
    },
    {
        "title": "K-th Permutation",
        "topic": "Math",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong></p>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px;\">\n<p>You are given an integer <strong>A</strong> which represents the length of a permutation.<br/> A permutation is an array of length A where all the elements occur exactly once and in any order.<br/> For example, [3, 4, 1, 2], [1, 2, 3] are examples of valid permutations while [1, 2, 2], [2] are not.</p>\n<p>You are also given an integer <strong>B</strong>.<br/> If all the permutation of length A are sorted lexicographically, return the B<sup>th</sup> permutation.</p>\n</div>\n<p><br/><br/><strong>Problem Constraints</strong></p>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px;\">1 &lt;= A &lt;= 10<sup>5</sup><br/> 1 &lt;= B &lt;= min(10<sup>18</sup>, A!), where A! denotes the factorial of A.</div>\n<p><br/><br/><strong>Input Format</strong></p>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px;\">The first argument is the integer A.<br/> The second argument is the long integer B.</div>\n<p><br/><br/><strong>Output Format</strong></p>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px;\">Return an array denoting the B<sup>th</sup> permutation of length A.</div>\n<p><br/><br/><strong>Example Input</strong></p>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px;\">Input 1:\r\n<p>\u00a0</p>\n<p>\u00a0</p>\n<pre><code>A = 3\r\nB = 3\r\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = 1\r\nB = 1\r\n</code></pre>\n<p>\u00a0</p>\n<p>\u00a0</p>\n</div>\n<p><br/><br/><strong>Example Output</strong></p>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px;\">Output 1:\r\n<p>\u00a0</p>\n<p>\u00a0</p>\n<pre><code>[2, 1, 3]\r\n</code></pre>\n<p>Output 2:</p>\n<pre><code>[1]\r\n</code></pre>\n<p>\u00a0</p>\n<p>\u00a0</p>\n</div>\n<p><br/><br/><strong>Example Explanation</strong></p>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px;\">Explanation 1:\r\n<p>\u00a0</p>\n<p>\u00a0</p>\n<pre>All the permutations of length 3 sorted in lexicographical order are:\r\n[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].\r\nTherefore, the third permutation is [2, 1, 3].\r\n</pre>\n<p>Explanation 2:</p>\n<pre><code>There is only one possible permutation -&gt; [1].\r\n</code></pre>\n<p>\u00a0</p>\n<p>\u00a0</p>\n</div>\n<p><br/><br/></p>\n\n</div>",
        "statement": "You are given an integer A which represents the length of a permutation.  A permutation is an array of length A where all the elements occur exactly once and in any order.  For example, [3, 4, 1, 2], [1, 2, 3] are examples of valid permutations while [1, 2, 2], [2] are not. You are also given an integer B.  If all the permutation of length A are sorted lexicographically, return the Bth permutation. ",
        "link": "k-th-permutation"
    },
    {
        "title": "Divisible by 60",
        "topic": "Math",
        "companies": ["Flipkart"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a large number represent in the form of an integer array <strong>A</strong>, where each element is a digit.</p>\n<p>You have to find whether there exists any permutation of the array <strong>A</strong> such that the number becomes divisible by 60.</p>\n<p>Return 1 if it exists, 0 otherwise.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>\n0 &lt;= A<sub>i</sub> &lt;= 9\n</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is an integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer '1' if there exists a permutation, '0' otherwise.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = [0, 6]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = [2, 3]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>1\n</code></pre>\n<p>Output 2:</p>\n<pre><code>0\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>We can rearrange the digits to form 60, which is divisible by 60.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>There are only two possible permutations: [23, 32].\nBoth of them are not divisible by 60.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given a large number represent in the form of an integer array A, where each element is a digit. You have to find whether there exists any permutation of the array A such that the number becomes divisible by 60. Return 1 if it exists, 0 otherwise. ",
        "link": "divisible-by-60"
    },
    {
        "title": "Powerful Divisors",
        "topic": "Math",
        "companies": ["lenskart"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given an integer array <strong>A</strong> of length <strong>N</strong>.<br/>\nFor every integer <strong>X</strong> in the array, you have to find out the number of integers <strong>Y</strong>, \nsuch that <strong>1 &lt;= Y &lt;= X</strong>, and the number of divisors of Y is a power of 2.</p>\n<p>For example, 6 has the following divisors - [1, 2, 3, 6]. This is equal to 4, which is a power of 2.<br/>\nOn the other hand, 9 has the following divisors [1, 3, 9] which is 3, which is not a power of 2.</p>\n<p>Return an array containing the answer for every X in the given array.</p></div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= N &lt;= 10<sup>5</sup><br/>\n1 &lt;= A<sub>max</sub> &lt;= 10<sup>6</sup><br/>\nSum of A<sub>max</sub> over all test cases will not exceed 5 * 10<sup>6</sup></div><br><br><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an array containing the answer for every X in the given array.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = [1, 4]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = [5, 10]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>[1, 3]\n</code></pre>\n<p>Output 2:</p>\n<pre><code>[4, 8]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>The numbers 1, 2, 3 have the required number of divisors.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>Only 4 and 9 are the numbers less than or equal to 10 which do not have the required number of divisors.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "You are given an integer array A of length N. For every integer X in the array, you have to find out the number of integers Y, such that 1 <= Y <= X, and the number of divisors of Y is a power of 2. For example, 6 has the following divisors - [1, 2, 3, 6].  This is equal to 4, which is a power of 2. On the other hand, 9 has the following divisors [1, 3, 9] which is 3, which is not a power of 2. Return an array containing the answer for every X in the given array. ",
        "link": "powerful-divisors"
    },
    {
        "title": "Addition without Summation",
        "topic": "Math",
        "companies": ["Adobe"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given two numbers <strong>A</strong> and <strong>B</strong>.</p>\n<p>You have to add them without using arithmetic operators and return their sum.</p>\n</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A, B &lt;= 10<sup>9</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the integer A.\nThe second argument is the integer B.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting their sum.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = 3\nB = 10\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = 6\nB = 1\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>13\n</code></pre>\n<p>Output 2:</p>\n<pre><code>7\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>3 + 10 = 13</code></pre>\n<p>Explanation 2:</p>\n<pre><code>6 + 1 = 7.\nNote, you have to add without using arithmetic operators.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "You are given two numbers A and B. You have to add them without using arithmetic operators and return their sum. ",
        "link": "addition-without-summation"
    },
    {
        "title": "Highest Score",
        "topic": "Math",
        "companies": ["Goldman Sachs"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given a 2D string array <strong>A</strong> of dimensions <strong>N x 2</strong>,<br/>\nwhere each row consists of two strings: first is the name of the student, second is their marks.</p>\n<p>You have to find the maximum average mark. If it is a floating point, round it down to the nearest integer less than or equal to the number.</p></div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= N &lt;= 10<sup>5</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is a 2D string array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer which is the highest average mark.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = [[\"Bob\", \"80\"], [\"Bob\", \"90\"], [\"Alice\", \"90\"]]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = [[\"Bob\", \"80\"], [\"Bob\", \"90\"], [\"Alice\", \"90\"], [\"Alice\", \"10\"]]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>90\n</code></pre>\n<p>Output 2:</p>\n<pre><code>85\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>Alice has the highest average with 90 marks.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>Bob has the highest average with 85 marks.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "You are given a 2D string array A of dimensions N x 2,where each row consists of two strings: first is the name of the student, second is their marks. You have to find the maximum average mark.  If it is a floating point, round it down to the nearest integer less than or equal to the number. ",
        "link": "highest-score"
    },
    {
        "title": "Sum of 7's Multiple",
        "topic": "Math",
        "companies": ["Accenture"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a range [A, B], find sum of integers divisible by 7 in this range.</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= B &lt;= 10<sup>9</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is an integer A.<br/>Second argument is an integer B.</div><br><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 1\nB = 7\n</pre>\nInput 2:\n<pre>A = 99\nB = 115\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>7\n</pre>\nOutput 2:\n<pre>217\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>Integers divisible by 7 in given range are {7}.\n</pre>\nExplanation 2:\n<pre>Integers divisible by 7 in given range are {105, 112}.\n</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given a range [A, B], find sum of integers divisible by 7 in this range. ",
        "link": "sum-of-7's-multiple"
    },
    {
        "title": "Find Last Digit",
        "topic": "Math",
        "companies": ["Accenture"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Find last digit of the number A<sup>B</sup>.<br/>A and B are large numbers given as strings.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>1 &lt;= |B| &lt;= 10<sup>5</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is a string A.<br/>First argument is a string B.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 2\nB = 10\n</pre>\nInput 2:\n<pre>A = 11\nB = 11\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>4\n</pre>\nOutput 2:\n<pre>1\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>2<sup>10</sup> = 1024, hence last digit is 4.\n</pre>\nExplanation 2:\n<pre>11<sup>11</sup> = 285311670611, hence last digit is 1.\n</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Find last digit of the number AB. A and B are large numbers given as strings. ",
        "link": "find-last-digit"
    },
    {
        "title": "Last digit K count",
        "topic": "Math",
        "companies": ["Accenture"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Find the number of integers in range <strong>[A, B]</strong> with last digit <strong>C</strong>.</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= B &lt;= 10<sup>9</sup><br/>0 &lt;= C &lt;= 9</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given three integers A, B and C.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 11, B = 111, C = 1\n</pre>\n<p>Input 2:</p>\n<pre>A = 1, B = 9, C = 0\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>11\n</pre>\n<p>Output 2:</p>\n<pre>0\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>The integers are 11, 21, 31, 41, 51, 61, 71, 81, 91, 101, 111\n</pre>\n<p>Explanation 2:</p>\n<pre>There are no integers in the range with last digit 0.\n</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Find the number of integers in range [A, B] with last digit C. ",
        "link": "last-digit-k-count"
    },
    {
        "title": "Digital Root",
        "topic": "Math",
        "companies": ["Accenture"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer <strong>A</strong>.<br/>Find the <strong>digital root of A</strong>.<br/>Digital root is the <strong>repeated sum of digits</strong> of untill there is only one digit left.</div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>9</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 99\n</pre>\n<p>Input 2:</p>\n<pre>A = 100\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>9\n</pre>\n<p>Output 2:</p>\n<pre>1\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>99 -&gt; 9+9 = 18 -&gt; 1+8 = 9</pre>\n<p>Explanation 2:</p>\n<pre>100 -&gt; 1+0+0 = 1</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given an integer A. Find the digital root of A. Digital root is the repeated sum of digits of untill there is only one digit left. ",
        "link": "digital-root"
    },
    {
        "title": "Number of Sundays",
        "topic": "Math",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given the start day of the month A and number of days in the month B, find number of sundays in the month.</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">A = {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"}<br/>1 &lt;= B &lt;= 10<sup>9</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is an string A.<br/>Second argument is an integer B.</div><br><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = \"Sunday\"\nB = 1\n</pre>\n<p>Input 2:</p>\n<pre>A = \"Monday\"\nB = 14\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>1\n</pre>\n<p>Output 2:</p>\n<pre>2\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>The only day in the month is sunday.</pre>\n<p>Explanation 2:</p>\n<pre>The 7th and 14th day of the month will be sunday</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given the start day of the month A and number of days in the month B, find number of sundays in the month. ",
        "link": "number-of-sundays"
    },
    {
        "title": "Product of Digits",
        "topic": "Math",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A.<br/>Find the product of all of it's digits.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">0 &lt;= A &lt;= 10<sup>9</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 111\n</pre>\n<p>Input 2:</p>\n<pre>A = 123\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>1\n</pre>\n<p>Output 2:</p>\n<pre>6\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>111 -&gt; 1\u00d71\u00d71 = 1</pre>\n<p>Explanation 2:</p>\n<pre>123 -&gt; 1\u00d72\u00d73 = 6</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given an integer A. Find the product of all of it's digits. ",
        "link": "product-of-digits"
    },
    {
        "title": "Round Table",
        "topic": "Math",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">There is a party at Ram's house, he will be inviting <strong>A</strong> friends to his party.<br/>There is round table at his house which has <strong>A+1 seats</strong>.<br/>Among all those friends Shyam is Ram's best friend and Ram wants to sit with him.<br/>Find the number of ways to sit such that Ram and Shayam will sit together.<br/>Since this number can be very large take modulo <strong>10<sup>9</sup> + 7</strong>.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>5</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 1\n</pre>\n<p>Input 2:</p>\n<pre>A = 2\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>2\n</pre>\n<p>Output 2:</p>\n<pre>4\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>Let the two people be\n1 -&gt; Ram\n2 -&gt; Shyam\nThen the possible arrangements are {1, 2}, {2, 1}</pre>\n<p>Explanation 2:</p>\n<pre>Let the three people be\n1 -&gt; Ram\n2 -&gt; Shyam\n3 -&gt; Third friend\nThen the possible arrangements are {1, 2, 3}, {3, 1, 2}, {2, 1, 3}, {3, 2, 1}</pre></div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "There is a party at Ram's house, he will be inviting A friends to his party. There is round table at his house which has A+1 seats. Among all those friends Shyam is Ram's best friend and Ram wants to sit with him. Find the number of ways to sit such that Ram and Shayam will sit together. Since this number can be very large take modulo 109 + 7. ",
        "link": "round-table"
    },
    {
        "title": "Odd Even Rule",
        "topic": "Math",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Due to pollution Delhi government has applied odd even rule in Delhi.<br/>Traffic police on guard is recording the registration number of vehicles passing through his area and storing the last digit of the number in an array <strong>A</strong>.<br/>You are given the array <strong>A</strong> and date of the day <strong>B</strong>. Also fine for breaking the rule is <strong>C</strong> Rs.<br/>Find the total fine in Rs collected by the traffic police.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 105<br/>1 &lt;= B &lt;= 31<br/>1 &lt;= C &lt;= 1000</div><br><br><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First arguement is an integer array A.<br/>Second argument is an integer B.<br/>Third argument is an integer C.</div><br><br><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = [1, 2, 3]\nB = 31\nC = 100\n</pre>\n<p>Input 2:</p>\n<pre>A = [0, 1, 1]\nB = 2\nC = 51\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>100\n</pre>\n<p>Output 2:</p>\n<pre>102\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>Vehicle 2 is not following the rule so only he will be fined.</pre>\n<p>Explanation 2:</p>\n<pre>Vehicle 2 and 3 are not following the rule so both of them will be fined.</pre></div><br/><br/></br></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "Due to pollution Delhi government has applied odd even rule in Delhi. Traffic police on guard is recording the registration number of vehicles passing through his area and storing the last digit of the number in an array A. You are given the array A and date of the day B.  Also fine for breaking the rule is C Rs. Find the total fine in Rs collected by the traffic police. ",
        "link": "odd-even-rule"
    },
    {
        "title": "Armstrong Number",
        "topic": "Math",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A, check if it is an Armstrong number of not.<br/>An Armstrong number is a number that is the sum of its own digits each raised to the power of the number of digits.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>9</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 371\n</pre>\n<p>Input 2:</p>\n<pre>A = 123\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>1</pre>\n<p>Output 2:</p>\n<pre>0</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>3\u00d73\u00d73 + 7\u00d77\u00d77 + 1\u00d71\u00d71 = 371</pre>\n<p>Explanation 2:</p>\n<pre>1\u00d71\u00d71 + 2\u00d72\u00d72 + 3\u00d73\u00d73 != 123</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given an integer A, check if it is an Armstrong number of not. An Armstrong number is a number that is the sum of its own digits each raised to the power of the number of digits. ",
        "link": "armstrong-number"
    },
    {
        "title": "Leap Year",
        "topic": "Math",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer <strong>A</strong>, which represents a year.<br/>Check if it is a <strong>Leap year</strong> or not.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>9</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 2020\n</pre>\n<p>Input 2:</p>\n<pre>A = 2021\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>1</pre>\n<p>Output 2:</p>\n<pre>0</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>Year 2020 is leap year</pre>\n<p>Explanation 2:</p>\n<pre>Year 2021 is not a leap year</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given an integer A, which represents a year. Check if it is a Leap year or not. ",
        "link": "leap-year"
    },
    {
        "title": "Lowest Common Multiple (LCM)",
        "topic": "Math",
        "companies": ["Cognizant"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Find Lowest Common Multiple of given two integers.</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>9</sup><br/>1 &lt;= B &lt;= 10<sup>9</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is an integer A.<br/>Second argument is an integer B.</div><br><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 6\nB = 4\n</pre>\n<p>Input 2:</p>\n<pre>A = 1\nB = 11\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>12</pre>\n<p>Output 2:</p>\n<pre>11</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>12 is the smallest integer which is divisible by 4 and 6 both.</pre>\n<p>Explanation 2:</p>\n<pre>11 is the smallest integer which is divisible by 1 and 11 both.\n</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Find Lowest Common Multiple of given two integers. ",
        "link": "lowest-common-multiple-(lcm)"
    },
    {
        "title": "Which Season?",
        "topic": "Math",
        "companies": ["Cognizant"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A which represents a month.<br/>Find the season according to the month.<br/>\n<ul>\n<li>Spring \u2013 March to May</li>\n<li>Summer \u2013 June to August</li>\n<li>Autumn \u2013 September to November</li>\n<li>Winter \u2013 December to February</li>\n</ul>\nIf the month is out of the range 1 to 12 output should be \u201cInvalid\u201d.</div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 100</div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a string.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 6\n</pre>\n<p>Input 2:</p>\n<pre>A = 13\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>\"Summer\"</pre>\n<p>Output 2:</p>\n<pre>\"Invalid\"</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>6th month is june, in june there is \"Summer\".</pre>\n<p>Explanation 2:</p>\n<pre>13th month doesn't exist so \"Invalid\".\n</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given an integer A which represents a month. Find the season according to the month. Spring \u2013 March to MaySummer \u2013 June to AugustAutumn \u2013 September to NovemberWinter \u2013 December to FebruaryIf the month is out of the range 1 to 12 output should be \u201cInvalid\u201d. ",
        "link": "which-season?"
    },
    {
        "title": "Socks Pair",
        "topic": "Math",
        "companies": ["Wipro"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer array A of integers.<br/>Every element in the array repersent a colour of a sock, find how many pair of socks with matching colours there are.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>1 &lt;= A<sub>i</sub> &lt;= |A|</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = [1, 2, 3]\n</pre>\n<p>Input 2:</p>\n<pre>A = [2, 2, 2, 2]\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>0</pre>\n<p>Output 2:</p>\n<pre>2</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>No pair of socks can be formed.</pre>\n<p>Explanation 2:</p>\n<pre>Two pairs of socks can be formed.\n</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given an integer array A of integers. Every element in the array repersent a colour of a sock, find how many pair of socks with matching colours there are. ",
        "link": "socks-pair"
    },
    {
        "title": "Two Stores",
        "topic": "Math",
        "companies": ["Wipro"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">You want buy <strong>A</strong> candies, there are two candy strores in your town.<br/>The stores sell candies in packets, first store sells <strong>B candies for C rupees</strong> and the other store sells <strong>D candies for E rupees</strong>.<br/>Find minimum cost to <strong>buy exactly A candies</strong> if you can buy any amout of packets from both the stores.<br/>If it is not possible to do so return <strong>-1</strong>.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>5</sup><br/>\n1 &lt;= B, C, D, E &lt;= 10<sup>4</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given five input arguments A, B, C, D, E all of them are integers.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 5\nB = 3\nC = 3\nD = 3\nE = 2\n</pre>\n<p>Input 2:</p>\n<pre>A = 7\nB = 1\nC = 1\nD = 3\nE = 2\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>-1</pre>\n<p>Output 2:</p>\n<pre>5</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>There no way to buy exactly 5 candies from stores.\n</pre>\n<p>Explanation 2:</p>\n<pre>We buy two packets from second store and 1 packet from first store.\n1<em>1 + 2</em>3 = 7\n1<em>1 + 2</em>2 = 5\n</pre></div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "You want buy A candies, there are two candy strores in your town. The stores sell candies in packets, first store sells B candies for C rupees and the other store sells D candies for E rupees. Find minimum cost to buy exactly A candies if you can buy any amout of packets from both the stores. If it is not possible to do so return -1. ",
        "link": "two-stores"
    },
    {
        "title": "Search in Bitonic Array!",
        "topic": "Binary Search",
        "companies": ["Phonepe"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a bitonic sequence <strong>A</strong> of <strong>N</strong> distinct elements, write a program to find a given element <strong>B</strong> in the bitonic sequence in <strong>O(logN)</strong> time.</p><p></p><p></p><p></p>\n<p><strong>NOTE:</strong></p>\n<p></p>\n<p></p>\n<p></p><li>A Bitonic Sequence is a sequence of numbers which is first strictly increasing then after a point strictly decreasing.</li></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>3 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p>\n<p>1 &lt;= A[i], B &lt;= 10<sup>8</sup></p>\n<p>Given array always contain a bitonic point.</p>\n<p>Array A always contain distinct elements.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong> denoting the bitonic sequence.</p><p></p><p></p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the position (0 index based) of the element <strong>B</strong> in the array <strong>A</strong> if <strong>B</strong> doesn't exist in <strong>A</strong> return <strong>-1</strong>.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [3, 9, 10, 20, 17, 5, 1]\n B = 20\n</pre>\n<p>Input 2:</p>\n<pre> A = [5, 6, 7, 8, 9, 10, 3, 2, 1]\n B = 30\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 3\n</pre>\n<p>Output 2:</p>\n<pre> -1\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> B = 20 present in A at index 3\n</pre>\n<p>Explanation 2:</p>\n<pre> B = 30 is not present in A\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a bitonic sequence A of N distinct elements, write a program to find a given element B in the bitonic sequence in O(logN) time. NOTE:A Bitonic Sequence is a sequence of numbers which is first strictly increasing then after a point strictly decreasing. ",
        "link": "search-in-bitonic-array!"
    },
    {
        "title": "Smaller or equal elements",
        "topic": "Binary Search",
        "companies": [],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an sorted array <strong>A</strong> of size <strong>N</strong>. Find number of elements which are less than or equal to <strong>B</strong>.</p><p></p>\n<p><strong>NOTE:</strong> Expected Time Complexity O(log N)</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>6</sup></p><p></p><p></p>\n<p>1 &lt;= A[i], B &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First agument is an integer array A of size N.</p><p></p><p></p>\n<p>Second argument is an integer B.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the number of elements which are less than or equal to <strong>B</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = [1, 3, 4, 4, 6]\n B = 4</pre>\n<p>Input 2:</p>\n<pre> A = [1, 2, 5, 5]\n B = 3</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 4</pre>\n<p>Output 2:</p>\n<pre> 2</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> Elements (1, 3, 4, 4) are less than or equal to 4.</pre>\n<p>Explanation 2:</p>\n<pre> Elements (1, 2) are less than or equal to 3.</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an sorted array A of size N.  Find number of elements which are less than or equal to B. NOTE: Expected Time Complexity O(log N)",
        "link": "smaller-or-equal-elements"
    },
    {
        "title": "WoodCutting Made Easy!",
        "topic": "Binary Search",
        "companies": ["Flipkart"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>There is given an integer array <strong>A</strong> of size <strong>N</strong> denoting the heights of <strong>N</strong> trees.</p><p></p>\n<p>Lumberjack Ojas needs to chop down <strong>B</strong> metres of wood. It is an easy job for him since he has a nifty new woodcutting machine that can take down forests like wildfire. However, Ojas is only allowed to cut a single row of trees.</p>\n<p>Ojas's machine works as follows: Ojas sets a height parameter <strong>H</strong> (in metres), and the machine raises a giant sawblade to that height and cuts off all tree parts higher than <strong>H</strong> (of course, trees not higher than <strong>H</strong> meters remain intact). Ojas then takes the parts that were cut off. For example, if the tree row contains trees with heights of 20, 15, 10, and 17 metres, and Ojas raises his sawblade to 15 metres, the remaining tree heights after cutting will be 15, 15, 10, and 15 metres, respectively, while Ojas will take 5 metres off the first tree and 2 metres off the fourth tree (7 metres of wood in total).</p>\n<p>Ojas is <strong>ecologically</strong> minded, so he doesn't want to cut off more wood than necessary. That's why he wants to set his sawblade as high as possible. Help Ojas find the <strong>maximum integer height</strong> of the sawblade that still allows him to cut off <strong>at least B</strong> metres of wood.</p>\n<p><strong>NOTE:</strong></p>\n<p></p><li>The sum of all heights will exceed <strong>B</strong>, thus Ojas will always be able to obtain the required amount of wood.<p></p></li></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>6</sup></p><p></p>\n<p>1 &lt;= A[i] &lt;= 10<sup>6</sup></p>\n<p>1 &lt;= B &lt;= 2<em>10<sup>6</sup></em></p>\n<p></p></div><br/><br/><em>Input Format</em><em><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong> of size <strong>N</strong> denoting the heights of each tree(in metres).</p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p></div><br/><br/></em><em>Output Format</em><em><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting <strong>maximum integer height</strong> of the sawblade that still allows him to cut off <strong>at least B</strong> metres of wood.</p></div><br/><br/></em><em>Example Input</em><em><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [20, 15, 10, 17]\n B = 7\n</pre>\n<p>Input 2:</p>\n<pre> A = [4, 42, 40, 26, 46]\n B = 20\n</pre>\n<p></p></div><br/><br/></em><em>Example Output</em><em><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 15\n</pre>\n<p>Output 2:</p>\n<pre> 36\n</pre>\n<p></p></div><br/><br/></em><em>Example Explanation</em>*<br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> If you the height parameter to 15 then you can chop:\n  5 metres from first tree\n  0 metres from second tree\n  0 metres from third tree\n  2 metres from fourth tree\n  So in total you chopped 7 metres of wood.\n</pre>\n<p>Explanation 2:</p>\n<pre> If you the height parameter to 36 then you can chop:\n  0 metres from first tree\n  6 metres from second tree\n  4 metres from third tree\n  0 metres from fourth tree\n  10 metres from fifth tree\n  So in total you chopped 20 metres of wood.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "There is given an integer array A of size N denoting the heights of N trees. Lumberjack Ojas needs to chop down B metres of wood.  It is an easy job for him since he has a nifty new woodcutting machine that can take down forests like wildfire.  However, Ojas is only allowed to cut a single row of trees. Ojas's machine works as follows: Ojas sets a height parameter H (in metres), and the machine raises a giant sawblade to that height and cuts off all tree parts higher than H (of course, trees not higher than H meters remain intact).  Ojas then takes the parts that were cut off.  For example, if the tree row contains trees with heights of 20, 15, 10, and 17 metres, and Ojas raises his sawblade to 15 metres, the remaining tree heights after cutting will be 15, 15, 10, and 15 metres, respectively, while Ojas will take 5 metres off the first tree and 2 metres off the fourth tree (7 metres of wood in total). Ojas is ecologically minded, so he doesn't want to cut off more wood than necessary.  That's why he wants to set his sawblade as high as possible.  Help Ojas find the maximum integer height of the sawblade that still allows him to cut off at least B metres of wood. NOTE:The sum of all heights will exceed B, thus Ojas will always be able to obtain the required amount of wood. ",
        "link": "woodcutting-made-easy!"
    },
    {
        "title": "Sorted Insert Position",
        "topic": "Binary Search",
        "companies": ["Yahoo"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a sorted array <strong>A</strong> and a target value <strong>B</strong>, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p><p></p>\n<p>You may assume no duplicates in the array.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 100000</p><p></p>\n<p>1 &lt;= B &lt;= 10<sup>9</sup></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is array A.</p><p></p>\n<p>Second argument is integer B.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer, the answer to the problem.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [1, 3, 5, 6]\nB = 5\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> A = [1, 3, 5, 6]\nB = 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 2\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 5 is found at index 2.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 2 will be inserted ar index 1.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a sorted array A and a target value B, return the index if the target is found.  If not, return the index where it would be if it were inserted in order. You may assume no duplicates in the array. ",
        "link": "sorted-insert-position"
    },
    {
        "title": "Square Root of Integer",
        "topic": "Binary Search",
        "companies": ["Facebook", "Amazon", "Microsoft"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer <strong>A</strong>.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Compute and return the <strong>square root of A</strong>.</p>\n<p>If <strong>A</strong> is not a perfect square, return <strong>floor(sqrt(A)).</strong></p>\n<p><strong>DO NOT USE SQRT FUNCTION FROM STANDARD LIBRARY.</strong></p>\n<p><strong>NOTE: </strong>Do not use sort function from standard library. Users are expected to solve this in O(log(A)) time.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first and only argument given is the integer A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return floor(sqrt(A))</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 11</pre>\n<p>Input 2:</p>\n<pre> 9</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 3</pre>\n<p>Output 2:</p>\n<pre> 3</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> When A = 11 , square root of A = 3.316. It is not a perfect square so we return the floor which is 3.\n When A = 9 which is a perfect square of 3, so we return 3.</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer A. Compute and return the square root of A. If A is not a perfect square, return floor(sqrt(A)). DO NOT USE SQRT FUNCTION FROM STANDARD LIBRARY. NOTE: Do not use sort function from standard library.  Users are expected to solve this in O(log(A)) time. ",
        "link": "square-root-of-integer"
    },
    {
        "title": "Red Zone",
        "topic": "Binary Search",
        "companies": [],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>There are many people who believe that the earth is flat and NASA is a scam. They call themselves <strong>Flat Earthers</strong>. They were already worried that the 6 feet social distancing rule might push some people out of the earth.</p><p></p><p></p><p></p><p></p><p></p>\n<p>Now, they decided to think about a new issue. Since the earth is flat ( or so they think), let's imagine it as an infinite 2D grid. They have the coordinates of certain points which are <strong>orange zones</strong> and have some COVID-19 cases reported. Now each day the orange zones become more fatal. After <strong>d</strong> days, all the locations <strong>within a euclidean distance of d</strong> of a particular orange zone can be affected by this zone.</p>\n<p>They know <strong>N</strong> orange zones, each of whose coordinates are given by <strong>(A[i][0], A[i][1])</strong>. Now, a location is considered a <strong>red zone\u00a0</strong>if it is affected by at least <strong>B</strong> orange zones. You need to find the first day at which the first red zone is reported.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= B &lt;= N &lt;= 100</p><p></p><p></p><p></p><p></p><p></p>\n<p>0 &lt;= A[i][0], A[i][1] &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument contains a 2D array A of size N, denoting the coordinates of the orange zones.</p><p></p><p></p><p></p><p></p><p></p>\n<p>The second argument contains an integer B.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the first\u00a0day at which the first red zone is reported.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>\n  Input 1:\n</p><p></p><p></p><p></p><p></p>\n<pre>  A : \n  [\n    [8, 5]\n    [0, 4]\n    [3, 6]\n  ]\n  B : 3\n</pre>\n<p>Input 2:\n</p>\n<p></p>\n<pre>  A : \n  [\n    [2, 3]\n    [9, 4]\n    [10, 3]\n  ]\n  B : 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>\n  Output 1:\n</p><p></p><p></p><p></p><p></p>\n<pre>  5\n</pre>\n<p>Output 2:\n</p>\n<p></p>\n<pre>  1\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>\n  Explanation 1:\n</p><p></p><p></p><p></p><p></p>\n<pre>  One of the red zones will be (5, 4) and it is within a distance of 5 from all the orange zones.\n</pre>\n<p>Explanation 2:\n</p>\n<p></p>\n<pre>  One of the red zones will be (9, 3) and it is within a distance of 1 from 2 orange zones.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "There are many people who believe that the earth is flat and NASA is a scam.  They call themselves Flat Earthers.  They were already worried that the 6 feet social distancing rule might push some people out of the earth. Now, they decided to think about a new issue.  Since the earth is flat ( or so they think), let's imagine it as an infinite 2D grid.  They have the coordinates of certain points which are orange zones and have some COVID-19 cases reported.  Now each day the orange zones become more fatal.  After d days, all the locations within a euclidean distance of d of a particular orange zone can be affected by this zone. They know N orange zones, each of whose coordinates are given by (A[i][0], A[i][1]).  Now, a location is considered a red zoneif it is affected by at least B orange zones.  You need to find the first day at which the first red zone is reported. ",
        "link": "red-zone"
    },
    {
        "title": "Implement Power Function",
        "topic": "Binary Search",
        "companies": ["Google", "LinkedIn"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Implement <strong>pow(x, n) % d</strong>.<p></p><p></p>\n<p>In other words, given <strong>x</strong>, <strong>n</strong> and <strong>d</strong>,</p>\n<p><strong>find (x<sup>n</sup> % d)</strong></p>\n<p>Note that remainders on division cannot be negative. In other words, make sure the answer you return is non negative.</p>\n</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">-10<sup>9</sup> &lt;= x &lt;= 10<sup>9</sup><br/>\n0 &lt;= n &lt;= 10<sup>9</sup><br/>\n1 &lt;= d &lt;= 10<sup>9</sup></div><br><br><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">x = 2<br/>\nn = 3<br/>\nd = 3\n</div><br><br><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">2</div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">2<sup>3</sup> % 3 = 8 % 3 = 2.</div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "Implement pow(x, n) % d. In other words, given x, n and d,find (xn % d)Note that remainders on division cannot be negative.  In other words, make sure the answer you return is non negative. ",
        "link": "implement-power-function"
    },
    {
        "title": "Simple Queries",
        "topic": "Binary Search",
        "companies": [],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given an array <strong>A</strong> having N integers.</p><p></p>\n<p>You have to perform the following steps in a given order.</p>\n<p>1) generate all subarrays of A.</p>\n<p>2) take the maximum element from each subarray of A and insert it into a new array G.</p>\n<p>3) replace every element of G with the product of their divisors mod 1e9 + 7.</p>\n<p>4) sort G in descending order</p>\n<p>You now need to perform Q queries</p>\n<p>In each query, you are given an integer K, where you have to find the Kth element in G.</p>\n<p><strong>NOTE</strong> : Your solution will run on multiple test cases so do clear global variables after using them.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 1e5</p><p></p>\n<p>1 &lt;= A[i] &lt;= 1e5</p>\n<p>1 &lt;= Q &lt;= 1e5</p>\n<p>1 &lt;= k &lt;= (N * (N + 1))/2 </p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument given is an Array A, having N integers.</p><p></p>\n<p>The second argument given is an Array B, where B[i] is the ith query.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an Array X, where X[i] will have the answer for the ith query.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [1, 2, 4]\nB = [1, 2, 3, 4, 5, 6]\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> A = [1, 3]\nB = [1]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> [8, 8, 8, 2, 2, 1]\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> [3]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p></div></p>\n<h2><pre> subarrays of A    maximum element</pre></h2>\n<ol>\n<li>[1]                          1</li>\n<li>[1, 2]                       2</li>\n<li>[1, 2, 4]                    4</li>\n<li>[2]                          2</li>\n<li>[2, 4]                       4</li>\n<li>[4]                          4</li>\n</ol>\n<p>original\nG = [1, 2, 4, 2, 4, 4]</p>\n<p>after changing every element of G with product of their divisors\nG = [1, 2, 8, 2, 8, 8]</p>\n<p>after sorting G in descending order\nG = [8, 8, 8, 2, 2, 1]</p>\n<p>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> Just perform given query.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></p></div>",
        "statement": "You are given an array A having N integers. You have to perform the following steps in a given order. 1) generate all subarrays of A. 2) take the maximum element from each subarray of A and insert it into a new array G. 3) replace every element of G with the product of their divisors mod 1e9 + 7. 4) sort G in descending orderYou now need to perform Q queriesIn each query, you are given an integer K, where you have to find the Kth element in G. NOTE : Your solution will run on multiple test cases so do clear global variables after using them. ",
        "link": "simple-queries"
    },
    {
        "title": "Capacity To Ship Packages Within B Days",
        "topic": "Binary Search",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>A conveyor belt has packages that must be shipped from one port to another within <strong>B</strong> days.</p>\n<p>The i<sup>th</sup> package on the conveyor belt has a weight of <strong>A[i]</strong>. Each day, we load the ship with packages on the conveyor belt (in the order given by weights). We may not load more weight than the maximum weight capacity of the ship.</p>\n<p>Return the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within <strong>B</strong> days.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= B &lt;= |A| &lt;= 5 * 10<sup>5</sup><br/>\n1 &lt;= A[i] &lt;= 10<sup>5</sup></div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is array of integers A denoting the weights.</p>\n<p>Second argument is the integer B denoting the number of days. </p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return the least weight capacity of the ship.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p>\n<pre>A = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nB = 5\n</pre>\n<p>Input 2:</p>\n<pre>A = [3, 2, 2, 4, 1, 4]\nB = 3\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Ouput 1:<p></p>\n<pre>15\n</pre>\n<p>Ouput 2:</p>\n<pre>6\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p>\n<pre>A ship capacity of 15 is the minimum to ship all the packages in 5 days like this:\n1st day: 1, 2, 3, 4, 5\n2nd day: 6, 7\n3rd day: 8\n4th day: 9\n5th day: 10\nNote that the cargo must be shipped in the order given, so using a ship of capacity 14 and \nsplitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed.</pre>\n<p>Explanation 2:</p>\n<pre>A ship capacity of 6 is the minimum to ship all the packages in 3 days like this:\n1st day: 3, 2\n2nd day: 2, 4\n3rd day: 1, 4</pre>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "A conveyor belt has packages that must be shipped from one port to another within B days. The ith package on the conveyor belt has a weight of A[i].  Each day, we load the ship with packages on the conveyor belt (in the order given by weights).  We may not load more weight than the maximum weight capacity of the ship. Return the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within B days. ",
        "link": "capacity-to-ship-packages-within-b-days"
    },
    {
        "title": "Vowel and Consonant Substrings!",
        "topic": "Strings",
        "companies": ["DE Shaw"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> consisting of lowercase characters.</p><p></p><p></p><p></p>\n<p>You have to find the number of substrings in <strong>A</strong> which starts with <strong>vowel</strong> and end with <strong>consonants</strong> or vice-versa.</p>\n<p>Return the count of substring modulo <strong>10<sup>9</sup> + 7</strong>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p>\n<p>A consists only of lower-case characters.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a integer denoting the the number of substrings in <strong>A</strong> which starts with <strong>vowel</strong> and end with <strong>consonants</strong> or vice-versa with modulo <strong>10<sup>9</sup> + 7</strong>.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = \"aba\"\n</pre>\n<p>Input 2:</p>\n<pre> A = \"a\"\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 2\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> Substrings of S are : [a, ab, aba, b, ba, a]Out of these only 'ab' and 'ba' satisfy the condition for special Substring. So the answer is 2.\n</pre>\n<p>Explanation 2:</p>\n<pre> No possible substring that start with vowel and end with consonant or vice-versa.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A consisting of lowercase characters. You have to find the number of substrings in A which starts with vowel and end with consonants or vice-versa. Return the count of substring modulo 109 + 7. ",
        "link": "vowel-and-consonant-substrings!"
    },
    {
        "title": "Remove Consecutive Characters",
        "topic": "Strings",
        "companies": ["BrowserStack"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> and integer <strong>B</strong>, remove all consecutive same characters that have length exactly B.</p> </div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 100000</p><p></p>\n<p>1 &lt;= B &lt;= |A|</p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First Argument is string A.</p><p></p>\n<p>Second argument is integer B.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a string after doing the removals.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>A = \"aabcd\"\nB = 2\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>A = \"aabbccd\"\nB = 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> \"bcd\"\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> \"d\"\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> \"aa\" had length 2.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> \"aa\", \"bb\" and \"cc\" had length of 2.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A and integer B, remove all consecutive same characters that have length exactly B.  ",
        "link": "remove-consecutive-characters"
    },
    {
        "title": "Longest Common Prefix",
        "topic": "Strings",
        "companies": ["Google"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given the array of strings <strong>A</strong>, you need to find the longest string <strong>S</strong> which is the prefix of <strong>ALL</strong> the strings in the array.</p><p></p><p></p><p></p><p></p>\n<p>Longest common prefix for a pair of strings <strong>S1</strong> and <strong>S2</strong> is the longest string <strong>S</strong> which is the prefix of both <strong>S1</strong> and <strong>S2</strong>.</p>\n<p><strong>For Example:</strong> longest common prefix of <code>\"abcdefgh\"</code> and <code>\"abcefgh\"</code> is <code>\"abc\"</code>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The only argument given is an array of strings A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the longest common prefix of all strings in A.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre>A = [\"abcdefgh\", \"aefghijk\", \"abcefgh\"]</pre>\n<p>Input 2:</p>\n<pre>A = [\"abab\", \"ab\", \"abcd\"];</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre>\"a\"</pre>\n<p>Output 2:</p>\n<pre>\"ab\"</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre>Longest common prefix of all the strings is \"a\".</pre>\n<p>Explanation 2:</p>\n<pre>Longest common prefix of all the strings is \"ab\".</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given the array of strings A, you need to find the longest string S which is the prefix of ALL the strings in the array. Longest common prefix for a pair of strings S1 and S2 is the longest string S which is the prefix of both S1 and S2. For Example: longest common prefix of \"abcdefgh\" and \"abcefgh\" is \"abc\". ",
        "link": "longest-common-prefix"
    },
    {
        "title": "Count And Say",
        "topic": "Strings",
        "companies": ["Facebook", "Amazon", "Microsoft"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The count-and-say sequence is the sequence of integers beginning as follows:\n<code>\n1, 11, 21, 1211, 111221, ...\n</code>\n1 is read off as one 1 or 11. 11 is read off as two 1s or 21.</div></p>\n<p>21 is read off as one 2, then one 1 or 1211.</p>\n<p>Given an integer n, generate the nth sequence.</p>\n<p>Note: The sequence of integers will be represented as a string.</p>\n<p><strong>Example:</strong></p>\n<p>if n = 2, the sequence is 11.</p></div>",
        "statement": "The count-and-say sequence is the sequence of integers beginning as follows:1, 11, 21, 1211, 111221, . . . 1 is read off as one 1 or 11.  11 is read off as two 1s or 21. ",
        "link": "count-and-say"
    },
    {
        "title": "Stringoholics",
        "topic": "Strings",
        "companies": [],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given an array\u00a0<strong>A</strong>\u00a0consisting of strings made up of the letters 'a' and 'b' only.<br/>Each string goes through a number of operations, where:</p><p></p><p></p>\n<pre><code>1.  At time 1, you circularly rotate each string by 1 letter.\n2.  At time 2, you circularly rotate the new rotated strings by 2 letters.\n3.  At time 3, you circularly rotate the new rotated strings by 3 letters.\n4.  At time i, you circularly rotate the new rotated strings by i % length(string) letters.</code></pre></div></p>\n<p>Eg: String is \"abaa\"</p>\n<ol>\n<li> At time 1, string is \"baaa\", as 1 letter is circularly rotated to the back</li>\n<li> At time 2, string is \"aaba\", as 2 letters of the string \"baaa\" is circularly rotated to the back</li>\n<li> At time 3, string is \"aaab\", as 3 letters of the string \"aaba\" is circularly rotated to the back</li>\n<li> At time 4, string is again \"aaab\", as 4 letters of the string \"aaab\" is circularly rotated to the back</li>\n<li> At time 5, string is \"aaba\", as 1 letters of the string \"aaab\" is circularly rotated to the back\n\n<p>After some units of time, a string becomes equal to its original self.<br/>Once a string becomes equal to itself, it's letters start to rotate from the first letter again (<strong>process resets</strong>). So, if a string takes\u00a0<strong>t</strong>\u00a0time to get back to the original, at time t+1 one letter will be rotated and the string will be its original self at 2<strong>t</strong>\u00a0time.<br/>You have to find the minimum time, where maximum number of strings are equal to their original self.<br/>As this time can be very large, give the answer modulo <strong>10<sup>9</sup>+7</strong>.</p>\n<p><strong>Note:</strong>\u00a0Your solution will run on multiple test cases so do clear global variables after using them.</p>\n<p></p>\n<p></p></li></ol></div>",
        "statement": "You are given an arrayAconsisting of strings made up of the letters 'a' and 'b' only. Each string goes through a number of operations, where:1.   At time 1, you circularly rotate each string by 1 letter. 2.   At time 2, you circularly rotate the new rotated strings by 2 letters. 3.   At time 3, you circularly rotate the new rotated strings by 3 letters. 4.   At time i, you circularly rotate the new rotated strings by i % length(string) letters. ",
        "link": "stringoholics"
    },
    {
        "title": "Convert to Palindrome",
        "topic": "Strings",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> consisting only of lowercase characters, we need to check whether it is possible to make this string a <strong>palindrome</strong> after removing exactly one character from this.</p><p></p><p></p><p></p><p></p>\n<p>If it is possible then return <strong>1</strong> else return <strong>0</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>3 &lt;= |A| &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p>\n<p> A[i] is always a lowercase character.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return 1 if it is possible to convert <strong>A</strong> to palindrome by removing exactly one character else return 0.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = \"abcba\"\n</pre>\n<p>Input 2:</p>\n<pre> A = \"abecbea\"\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> We can remove character \u2018c\u2019 to make string palindrome\n</pre>\n<p>Explanation 2:</p>\n<pre> It is not possible to make this string palindrome just by removing one character \n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A consisting only of lowercase characters, we need to check whether it is possible to make this string a palindrome after removing exactly one character from this. If it is possible then return 1 else return 0. ",
        "link": "convert-to-palindrome"
    },
    {
        "title": "Minimum Appends for Palindrome!",
        "topic": "Strings",
        "companies": ["Facebook"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> consisting of lowercase characters.</p><p></p><p></p><p></p><p></p><p></p>\n<p>We need to tell minimum characters to be appended (insertion at end) to make the string <strong>A</strong> a palindrome.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>A consists only of lower-case characters.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a integer denoting the minimum characters to be appended (insertion at end) to make the string <strong>A</strong> a palindrome.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = \"abede\"\n</pre>\n<p>Input 2:</p>\n<pre> A = \"aabb\"\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 2\n</pre>\n<p>Output 2:</p>\n<pre> 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> We can make string palindrome as \"abedeba\" by adding ba at the end of the string.\n</pre>\n<p>Explanation 2:</p>\n<pre> We can make string palindrome as \"aabbaa\" by adding aa at the end of the string.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A consisting of lowercase characters. We need to tell minimum characters to be appended (insertion at end) to make the string A a palindrome. ",
        "link": "minimum-appends-for-palindrome!"
    },
    {
        "title": "Minimum Parantheses!",
        "topic": "Strings",
        "companies": ["Google"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> of parantheses  \u2018(\u2018 or \u2018)\u2019.</p><p></p><p></p><p></p>\n<p>The task is to find minimum number of parentheses \u2018(\u2018 or \u2018)\u2019 (at any positions) we must add to make the resulting parentheses string valid.</p>\n<p>An string is valid if:</p>\n<ul>\n<li>Open brackets must be closed by the corresponding closing bracket.</li>\n<li>Open brackets must be closed in the correct order.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 10<sup>5</sup></p><p></p><p></p><p></p>\n<p>A[i] = '(' or A[i] = ')'</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the <strong>minimum</strong>number of parentheses \u2018(\u2018 or \u2018)\u2019 (at any positions) we must add in <strong>A</strong> to make the resulting parentheses string valid.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = \"())\"\n</pre>\n<p>Input 2:</p>\n<pre> A = \"(((\"\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 3\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> One '(' is required at beginning.\n</pre>\n<p>Explanation 2:</p>\n<pre> Three ')' is required at end.\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A of parantheses  \u2018(\u2018 or \u2018)\u2019. The task is to find minimum number of parentheses \u2018(\u2018 or \u2018)\u2019 (at any positions) we must add to make the resulting parentheses string valid. An string is valid if:Open brackets must be closed by the corresponding closing bracket. Open brackets must be closed in the correct order. ",
        "link": "minimum-parantheses!"
    },
    {
        "title": "Longest Palindromic Substring",
        "topic": "Strings",
        "companies": ["Amazon", "Microsoft", "Groupon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string A of size N, find and return the <strong>longest palindromic substring</strong> in A.</p><p></p><p></p><p></p><p></p>\n<p>Substring of string A is <code>A[i...j]</code> where 0 &lt;= i &lt;= j &lt; len(A)</p>\n<p><strong>Palindrome string:</strong><br/>\nA string which reads the same backwards. More formally, A is palindrome if reverse(A) = A.</p>\n<p><strong>Incase of conflict</strong>, return the substring which occurs first ( with the least starting index).</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is a string A.</p> </div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a string denoting the longest palindromic substring of string A.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>A = \"aaaabaaa\"</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>\"aaabaaa\"</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>We can see that longest palindromic substring is of length 7 and the string is \"aaabaaa\".</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given a string A of size N, find and return the longest palindromic substring in A. Substring of string A is A[i. . . j] where 0 <= i <= j < len(A)Palindrome string:A string which reads the same backwards.  More formally, A is palindrome if reverse(A) = A. Incase of conflict, return the substring which occurs first ( with the least starting index). ",
        "link": "longest-palindromic-substring"
    },
    {
        "title": "Length of Last Word",
        "topic": "Strings",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>s</strong> consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string.</p><p></p>\n<p>If the last word does not exist, return <strong>0</strong>.</p>\n<p>Note: A word is defined as a character sequence consists of non-space characters only.</p>\n<p><strong>Example:</strong></p>\n<pre><code>Given s = \"Hello World\",</code></pre></div></p>\n<p>return 5 as length(\"World\") = 5.\n\n<p>Please make sure you try to solve this problem without using library functions. Make sure you only traverse the string once.</p></p></div>",
        "statement": "Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string. If the last word does not exist, return 0. Note: A word is defined as a character sequence consists of non-space characters only. Example:Given s = \"Hello World\",",
        "link": "length-of-last-word"
    },
    {
        "title": "Add Binary Strings",
        "topic": "Strings",
        "companies": ["Facebook", "Microsoft"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given two binary strings, return their sum (also a binary string).<p></p>\n<p><strong>Example:</strong></p>\n<pre><code>a = \"100\"</code></pre></div></p>\n<p>b = \"11\"\nReturn a + b = \"111\".\n\n<p></p></p></div>",
        "statement": "Given two binary strings, return their sum (also a binary string). Example:a = \"100\"",
        "link": "add-binary-strings"
    },
    {
        "title": "Justified Text",
        "topic": "Strings",
        "companies": ["LinkedIn", "Google", "Directi"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array of words and a length <strong>L</strong>, format the text such that each line has exactly <strong>L</strong> characters and is fully (left and right) justified. You should pack your words in a greedy approach; that is, pack as many words as you can in each line.</p><p></p><p></p>\n<p>Pad extra spaces ' ' when necessary so that each line has exactly <strong>L</strong> characters. Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right. For the last line of text, it should be left justified and no extra space is inserted between words.</p>\n<p>Your program should return a list of strings, where each string represents a single line.</p>\n<p><strong>Example:</strong></p>\n<pre><code>words: [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"]</code></pre></div></p>\n<p>L: 16.</p>\n<p>Return the formatted lines as:\n[\n   \"This    is    an\",\n   \"example  of text\",\n   \"justification.  \"\n]\n\n<p>Note: Each word is guaranteed not to exceed L in length. </p>\n<p></p></p></div>",
        "statement": "Given an array of words and a length L, format the text such that each line has exactly L characters and is fully (left and right) justified.  You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ' ' when necessary so that each line has exactly L characters.  Extra spaces between words should be distributed as evenly as possible.  If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.  For the last line of text, it should be left justified and no extra space is inserted between words. Your program should return a list of strings, where each string represents a single line. Example:words: [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification. \"]",
        "link": "justified-text"
    },
    {
        "title": "Bulls and Cows",
        "topic": "Strings",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> You are playing the Bulls and Cows game with your friend.</p>\n<p>You write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:</p>\n<pre>The number of \"bulls\", which are digits in the guess that are in the correct position.\nThe number of \"cows\", which are digits in the guess that are in your secret number but are located in the wrong position. \nSpecifically, the non-bull digits in the guess that could be rearranged such that they become bulls. </pre>\n<p>Given the secret number secret and your friend's guess guess, return the hint for your friend's guess.</p><p></p>\n<p>The hint should be formatted as \"xAyB\", where x is the number of bulls and y is the number of cows. Note that both secret and guess may contain duplicate digits.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>1 &lt;= secret.length, guess.length &lt;= 100000\nsecret.length == guess.length\nsecret and guess consist of digits only.\n</pre></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is string denoting secret string </p><p>\nSecond argument is string denoting guess string </p><p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return the hint for you friend's guess.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p>\n<pre>secret = \"1807\", guess = \"7810\"\n</pre>\n<p>Input 2:</p>\n<pre>secret = \"1123\", guess = \"0111\"\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Ouput 1:<p></p>\n<pre>\"1A3B\"\n</pre>\n<p>Ouput 2:</p>\n<pre>\"1A1B\"\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p>\n<pre>Bulls are connected with a '|':\n\"1807\"\n  |\n\"7810\"</pre>\n<p>Explanation 2:</p>\n<pre>Bulls are connected with a '|' \n\"1123\"        \"1123\"\n  |      or     |\n\"0111\"        \"0111\"\nNote that only one of the two unmatched 1s is counted as a cow since \nthe non-bull digits can only be rearranged to allow one 1 to be a bull.</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": " You are playing the Bulls and Cows game with your friend. You write down a secret number and ask your friend to guess what the number is.  When your friend makes a guess, you provide a hint with the following info:The number of \"bulls\", which are digits in the guess that are in the correct position. The number of \"cows\", which are digits in the guess that are in your secret number but are located in the wrong position.  Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.  Given the secret number secret and your friend's guess guess, return the hint for your friend's guess. The hint should be formatted as \"xAyB\", where x is the number of bulls and y is the number of cows.  Note that both secret and guess may contain duplicate digits. ",
        "link": "bulls-and-cows"
    },
    {
        "title": "Character Frequencies",
        "topic": "Strings",
        "companies": ["Cognizant"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a string <strong>A</strong> containing only lowercase characters.<br/>Find the frequencies of the characters in order of their occurrence.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a string A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an array of integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = \"interviewbit\"\n</pre>\n<p>Input 2:</p>\n<pre>A = \"scaler\"\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>[3, 1, 2, 2, 1, 1, 1, 1]</pre>\n<p>Output 2:</p>\n<pre>[1, 1, 1, 1, 1, 1]</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>Characters in their order of occurence and frequecies are {'i', 3}, {'n', 1}, {'t', 2}, {'e', 2}, {'r', 1}, {'v', 1}, {'w', 1}, {'b', 1}.</pre>\n<p>Explanation 2:</p>\n<pre>Characters in their order of occurence and frequecies are {'s', 1}, {'c', 1}, {'a', 1}, {'l', 1}, {'e', 1}, {'r', 1}.\n</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given a string A containing only lowercase characters. Find the frequencies of the characters in order of their occurrence. ",
        "link": "character-frequencies"
    },
    {
        "title": "Deserialize",
        "topic": "Strings",
        "companies": ["Flipkart"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given a string <strong>A</strong> which is a serialized string. You have to restore the original array of strings.<br/>\nThe string in the output array should only have lowercase english alphabets.</p>\n<p>Serialization: Scan each element in a string, calculate its length and append it with a string and a element separator or deliminator (the deliminator is ~). We append the length of the string so that we know the length of each element.</p>\n<p>For example, for a string 'interviewbit', its serialized version would be 'interviewbit12~'.</p></div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>6</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the string A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an array of strings which are deserialized.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = 'scaler6~academy7~'\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = 'interviewbit12~'\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>['scaler', 'academy']\n</code></pre>\n<p>Output 2:</p>\n<pre><code>['interviewbit']\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>Length of 'scaler' is 6 and academy is 7. So, the resulting string is scaler6~academy7~.\nWe hve to reverse the process.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>Explained in the description above.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "You are given a string A which is a serialized string.  You have to restore the original array of strings. The string in the output array should only have lowercase english alphabets. Serialization: Scan each element in a string, calculate its length and append it with a string and a element separator or deliminator (the deliminator is ~).  We append the length of the string so that we know the length of each element. For example, for a string 'interviewbit', its serialized version would be 'interviewbit12~'. ",
        "link": "deserialize"
    },
    {
        "title": "Frequency of Characters",
        "topic": "Strings",
        "companies": ["Accenture"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a string <strong>A</strong>, find the frequency of all the characters in it.</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>Ai = {Lowercase latin alphabets}</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a string A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer array of length 26.<br/>Array should contain frequency of characters in increasing order of characters.</div><br><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = \"abcdefghijklmnopqrstuvwxyz\"\n</pre>\n<p>Input 2:</p>\n<pre>A = \"interviewbit\"\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}\n</pre>\n<p>Output 2:</p>\n<pre>{0, 1, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0, 1, 1, 0, 0, 0}\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>Every charcater is present once in the string.\n</pre>\n<p>Explanation 2:</p>\n<pre>'b' is at indices 10.\n'e' is at indices 4, 8\n'i' is at indices 1, 7, 11\n'n' is at indices 2\n'r' is at indices 5\n't' is at indices 3, 12\n'v' is at indices 6\n'w' is at indices 9\nRest of the characters are not present in the string</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given a string A, find the frequency of all the characters in it. ",
        "link": "frequency-of-characters"
    },
    {
        "title": "Maximum Substring",
        "topic": "Strings",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a string <strong>A</strong> consisting of only characters 'a' and 'b'.<br/>Divide the string into substrings of length <strong>B</strong>.<br/>Find the subtring with maximum count of 'a' and return the count.<br/><br/>Note: If the length of the string is not a multiple of B and there are some characters left in the end consider them also as a substring.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup><br/>A<sub>i</sub> = {'a', 'b'}<br/>1 &lt;= B &lt;= 10<sup>5</sup></div><br><br><strong>Input Format</strong><br>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument A is a string.<br/>Second argument is an integer B.</div><br><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = \"baab\"\nB = 2\n</pre>\n<p>Input 2:</p>\n<pre>A = \"bba\"\nB = 2\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>1\n</pre>\n<p>Output 2:</p>\n<pre>1\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>The subtrings are \"ba\" and \"ab\".\nBoth have count of 'a' equal to 1.</pre>\n<p>Explanation 2:</p>\n<pre>The substrings are \"bb\" and \"a\".\n\"a\" has the highest count which is 1.</pre></div><br/><br/></br></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "Given a string A consisting of only characters 'a' and 'b'. Divide the string into substrings of length B. Find the subtring with maximum count of 'a' and return the count. Note: If the length of the string is not a multiple of B and there are some characters left in the end consider them also as a substring. ",
        "link": "maximum-substring"
    },
    {
        "title": "Palindromic Words",
        "topic": "Strings",
        "companies": ["LTI"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a sentence as a string <strong>A</strong>.<br/>Return the number of <strong>palindromic words</strong> in the sentence.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>5</sup><br/>A<sub>i</sub> = {Lowercase English letters and whitespaces}</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first and only argument is a string A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = \"the fastest racecar\"\n</pre>\n<p>Input 2:</p>\n<pre>A = \"wow mom\"\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>1</pre>\n<p>Output 2:</p>\n<pre>2</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>The words are \"hello\" and \"world\".\n12 + 34 = 46</pre>\n<p>Explanation 2:</p>\n<pre>The words are \"how\", \"are\" and \"you\".</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given a sentence as a string A. Return the number of palindromic words in the sentence. ",
        "link": "palindromic-words"
    },
    {
        "title": "Salutes",
        "topic": "Strings",
        "companies": ["clevertap"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>In a long hallway some soldiers are walking from left to right and some from right to left all at the same speed.<br/>\nEvery time while walking they cross through another soldier they salute and move ahead.<br/>\nGiven a string <strong>A</strong> of length <strong>N</strong> showing the soldiers' direction they are walking. \n<strong>'&lt;'</strong> denotes a soldier is walking from right to left, and <strong>'&gt;'</strong> denotes a soldier is walking from left to right. \nReturn the number of Salutes done.</p></div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= N &lt;= 10<sup>5</sup><br/>\nA = {'&lt;', '&gt;'}</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is a string A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting the number of salutes done.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = '&gt;&gt;&gt;&lt;&lt;&lt;'\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = '&lt;&gt;'\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>9\n</code></pre>\n<p>Output 2:</p>\n<pre><code>0\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>Soldier 1 will salute with 4, 5, 6. Same goes for soldier 2 and 3.\nHence, the total number of salutes is 9.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>There will be no salutes as no two soldiers will cross each other.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></p>\n\n</div>",
        "statement": "In a long hallway some soldiers are walking from left to right and some from right to left all at the same speed. Every time while walking they cross through another soldier they salute and move ahead. Given a string A of length N showing the soldiers' direction they are walking.  '<' denotes a soldier is walking from right to left, and '>' denotes a soldier is walking from left to right.  Return the number of Salutes done. ",
        "link": "salutes"
    },
    {
        "title": "Self Permutation",
        "topic": "Strings",
        "companies": ["Grab"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given two strings <strong>A</strong> and <strong>B</strong>.\nCheck whether there exists any permutation of both A and B such that they are equal.</p>\n<p>Return a single integer <strong>1</strong> if its exists, <strong>0</strong> otherwise.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A|, |B| &lt;= 10<sup>5</sup><br/>\nBoth strings contain only lowercase english alphabets.</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the string A.\nThe second argument is the string B.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer 1 if a permutation exists, 0 otherwise.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = 'scaler'\nB = 'relasc'\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = 'scaler'\nB = 'interviewbit'\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>1\n</code></pre>\n<p>Output 2:</p>\n<pre><code>0\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>We can rearrange the second string to 'scaler', hence, a permuation exists.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>The given length of the two strings itself is different. There is no possible permutation.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "You are given two strings A and B. Check whether there exists any permutation of both A and B such that they are equal. Return a single integer 1 if its exists, 0 otherwise. ",
        "link": "self-permutation"
    },
    {
        "title": "Serialize",
        "topic": "Strings",
        "companies": ["Flipkart"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given an array <strong>A</strong> of strings and we have to serialize it and return the serialized string.</p>\n<p><strong>Serialization</strong>: Scan each element in a string, calculate its length and append it with a string and a element separator or deliminator (the deliminator is <strong>~</strong>). We append the length of the string so that we know the length of each element.</p>\n<p>For example, for a string 'interviewbit', its serialized version would be 'interviewbit12~'.\n</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 1000<br/>\n1 &lt;= |A<sub>i</sub>| &lt;= 1000<br/>\nA<sub>i</sub> only contains lowercase english alphabets.\n</div><br><br><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument A is the string array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting the serialized string.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = ['scaler', 'academy']\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = ['interviewbit']\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>scaler6~academy7~\n</code></pre>\n<p>Output 2:</p>\n<pre><code>interviewbit12~\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>Length of 'scaler' is 6 and academy is 7. So, the resulting string is scaler6~academy7~.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>Explained in the description above.\n</code></pre>.\n<p></p>\n<p></p></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "You are given an array A of strings and we have to serialize it and return the serialized string. Serialization: Scan each element in a string, calculate its length and append it with a string and a element separator or deliminator (the deliminator is ~).  We append the length of the string so that we know the length of each element. For example, for a string 'interviewbit', its serialized version would be 'interviewbit12~'. ",
        "link": "serialize"
    },
    {
        "title": "String And Its Frequency",
        "topic": "Strings",
        "companies": ["clevertap"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> Given a string <strong>A</strong> with lowercase english alphabets and you have to return a string in which, with each character its frequency is written in adjacent.</p>\n</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is the string A with lowercase english alphabets.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a string in which each character frequency is written in adjacent.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p>\n<pre>abbhuabcfghh\n</pre>\n<p>Input 2:</p>\n<pre>a\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Ouput 1:<p></p>\n<pre>a2b3h3u1c1f1g1\n</pre>\n<p>Ouput 2:</p>\n<pre>a1\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p>\n<pre>\u2018a\u2019 occurs in the string a total of 2 times so we write a2 then \u2018b\u2019 occurs a total of 3 times so next we write b3 and so on</pre>\n<p>Explanation 2:</p>\n<pre>\u2018a\u2019 occurs in the string a total of 1 time only.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": " Given a string A with lowercase english alphabets and you have to return a string in which, with each character its frequency is written in adjacent. ",
        "link": "string-and-its-frequency"
    },
    {
        "title": "String Inversion",
        "topic": "Strings",
        "companies": ["Wipro"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a string <strong>A</strong>. Change the cases of all the characters.<br/>If the character is lowercase convert it to uppercase and if the character is uppercase convert it to lowercase.<br/><br/><strong>Note:</strong> All the characters in the string are latin uppercase or lowercase letters.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 10<sup>5</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a string A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a string.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 6 = \"InterviewBit\"\n</pre>\n<p>Input 2:</p>\n<pre>A = \"Scaler\"\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>\"iNTERVIEWbIT\"</pre>\n<p>Output 2:</p>\n<pre>\"sCALER\"</pre></div><br/><br/></br></br></br></p>\n\n</div>",
        "statement": "Given a string A.  Change the cases of all the characters. If the character is lowercase convert it to uppercase and if the character is uppercase convert it to lowercase. Note: All the characters in the string are latin uppercase or lowercase letters. ",
        "link": "string-inversion"
    },
    {
        "title": "Valid Password",
        "topic": "Strings",
        "companies": ["Cognizant", "IBM"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a password as a character array <strong>A</strong>.<br/>Check if it is valid or not.<br/>\n<ul>\n<li>Password should have at least one numerical digit(0-9).</li>\n<li>Password's length should be in between 8 to 15 characters.</li>\n<li>Password should have at least one lowercase letter(a-z).</li>\n<li>Password should have at least one uppercase letter(A-Z).</li>\n<li>Password should have at least one special character ( @, #, %, &amp;, !, $, *).</li>\n</ul></div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= |A| &lt;= 20</div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a character array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = ['S', 'c', 'a', 'l', 'e', 'r', '@', '1']\n</pre>\n<p>Input 2:</p>\n<pre>A = ['I', 'n', 't', 'e', 'r', 'v', 'i', 'e', 'w', 'B', 'i', 't']\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>1</pre>\n<p>Output 2:</p>\n<pre>0</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>All the characteristic required for password are present in given password.\n</pre>\n<p>Explanation 2:</p>\n<pre>The password given does not have any special character and also it does not have any numerical digit.\n</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given a password as a character array A. Check if it is valid or not. Password should have at least one numerical digit(0-9). Password's length should be in between 8 to 15 characters. Password should have at least one lowercase letter(a-z). Password should have at least one uppercase letter(A-Z). Password should have at least one special character ( @, #, %, &, !, $, *). ",
        "link": "valid-password"
    },
    {
        "title": "Number of 1 Bits",
        "topic": "Bit Manipulation",
        "companies": ["Adobe", "Yahoo", "Qualcomm"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Write a function that takes an integer and returns the number of 1 bits it has.</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">0 &lt;= A &lt;= 4294967295</div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First and only argument contains integer A</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer as the answer</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><b>Input1:</b><p></p><p></p><p></p>\n<pre><code>    11\n</code></pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><b>Output1:</b><p></p><p></p><p></p>\n<pre><code>3\n</code></pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><b>Explaination1:</b><p></p><p></p><p></p>\n<pre><code>11 is represented as 1101 in binary \n</code></pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Write a function that takes an integer and returns the number of 1 bits it has. ",
        "link": "number-of-1-bits"
    },
    {
        "title": "Trailing Zeroes",
        "topic": "Bit Manipulation",
        "companies": ["DE Shaw"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer <strong>A</strong>, count and return the number of trailing zeroes.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A &lt;= 10<sup>9</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the count of trailing zeroes.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 18</pre>\n<p>Input 2:</p>\n<pre> A = 8</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 1</pre>\n<p>Output 2:</p>\n<pre> 3</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 18 in binary is represented as: 10010, there is 1 trailing zero.</pre>\n<p>Explanation 2:</p>\n<pre> 8 in binary is represented as: 1000, there are 3 trailing zeroes.</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer A, count and return the number of trailing zeroes. ",
        "link": "trailing-zeroes"
    },
    {
        "title": "Reverse Bits",
        "topic": "Bit Manipulation",
        "companies": ["Nvidia", "HCL", "Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Reverse the bits of an <strong>32</strong> bit unsigned integer A.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>0 &lt;= A &lt;= 2<sup>32</sup></p>\n</div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument of input contains an integer A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single unsigned integer denoting the decimal value of reversed bits.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> 0</pre>\n<p>Input 2:</p>\n<pre> 3</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 0</pre>\n<p>Output 2:</p>\n<pre> 3221225472</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre>        00000000000000000000000000000000<br/>\n=&gt;      00000000000000000000000000000000\n</pre>\n<p>Explanation 2:</p></div></p>\n<pre>        00000000000000000000000000000011    \n=&gt;      11000000000000000000000000000000\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p><p></p></p></div>",
        "statement": "Reverse the bits of an 32 bit unsigned integer A. ",
        "link": "reverse-bits"
    },
    {
        "title": "Count Total Set Bits",
        "topic": "Bit Manipulation",
        "companies": ["Amazon"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a positive integer <strong>A</strong>, the task is to count the total number of set bits in the binary representation of all the numbers from <strong>1</strong> to <strong>A</strong>.</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Return the count modulo <strong>10<sup>9</sup> + 7</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A &lt;= 10<sup>9</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the ( Total number of set bits in the binary representation of all the numbers from <strong>1</strong> to <strong>A</strong> )modulo <strong>10<sup>9</sup> + 7</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 3\n</pre>\n<p>Input 2:</p>\n<pre> A = 1\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 4\n</pre>\n<p>Output 2:</p>\n<pre> 1\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> DECIMAL    BINARY  SET BIT COUNT\n    1          01        1\n    2          10        1\n    3          11        2\n 1 + 1 + 2 = 4 \n Answer = 4 % 1000000007 = 4\n</pre>\n<p>Explanation 2:</p>\n<pre> A = 1\n  DECIMAL    BINARY  SET BIT COUNT\n    1          01        1\n Answer = 1 % 1000000007 = 1\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a positive integer A, the task is to count the total number of set bits in the binary representation of all the numbers from 1 to A. Return the count modulo 109 + 7. ",
        "link": "count-total-set-bits"
    },
    {
        "title": "Palindromic Binary Representation",
        "topic": "Bit Manipulation",
        "companies": ["Amazon"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer <strong>A</strong> find the <strong>A<sup>th</sup></strong> number whose binary representation is a palindrome.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li> Consider the 1<sup>st</sup> number whose binary representation is palindrome as 1, instead of 0</li>\n<li> Do not consider the leading zeros, while considering the binary representation.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= A &lt;= 2<em>10<sup>4</sup></em></p></div><br/><br/><em>Input Format</em><em><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer <strong>A</strong>.</p></div><br/><br/></em><em>Output Format</em><em><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the <strong>A<sup>th</sup></strong> number whose binary representation is a palindrome.</p></div><br/><br/></em><em>Example Input</em><em><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 1\n</pre>\n<p>Input 1:</p>\n<pre> A = 9\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Output</em><em><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 27\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Explanation</em>*<br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 1<sup>st</sup> Number whose binary representation is palindrome is 1\n</pre>\n<p>Explanation 2</p>\n<pre> 9<sup>th</sup> Number whose binary representation is palindrome is 27 (11011)\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer A find the Ath number whose binary representation is a palindrome. NOTE: Consider the 1st number whose binary representation is palindrome as 1, instead of 0 Do not consider the leading zeros, while considering the binary representation. ",
        "link": "palindromic-binary-representation"
    },
    {
        "title": "XOR-ing the Subarrays!",
        "topic": "Bit Manipulation",
        "companies": ["Zenefits"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> of size <strong>N</strong>.</p>\n<p>You need to find the value obtained by <a href=\"https://en.wikipedia.org/wiki/Exclusive_or\">XOR</a>-ing the contiguous subarrays, followed by <a href=\"https://en.wikipedia.org/wiki/Exclusive_or\">XOR</a>-ing the values thus obtained. Determine and return this value.</p>\n<p>For example, if A = [3, 4, 5] :</p>\n<pre>\nSubarray    Operation   Result\n3       None            3\n4       None            4\n5       None            5\n3,4   3 XOR 4         7\n4,5   4 XOR 5         1\n3,4,5    3 XOR 4 XOR 5   2<br/>\n</pre>\n<p>Now we take the resultant values and XOR them together:</p>\n<p>3 \u2295 4 \u2295 5 \u2295 7 \u2295 1\u2295 2 = 6 we will return 6.</p></div></p>\n<p></p></div>",
        "statement": "Given an integer array A of size N. You need to find the value obtained by XOR-ing the contiguous subarrays, followed by XOR-ing the values thus obtained.  Determine and return this value. For example, if A = [3, 4, 5] :Subarray    Operation   Result3       None            34       None            45       None            53,4   3 XOR 4         74,5   4 XOR 5         13,4,5    3 XOR 4 XOR 5   2Now we take the resultant values and XOR them together:3 \u2295 4 \u2295 5 \u2295 7 \u2295 1\u2295 2 = 6 we will return 6. ",
        "link": "xor-ing-the-subarrays!"
    },
    {
        "title": "Single Number",
        "topic": "Bit Manipulation",
        "companies": ["Amazon", "sharechat", "toppr", "Uber Technologies Inc", "Twitter"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array of integers <strong>A</strong>, every element appears twice except for one. Find that single one.<br/><br/>\n<strong>NOTE:</strong> Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p></div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<ul>\n<li><p>1 &lt;= <strong>|A|</strong> &lt;= 2000000</p></li>\n<li><p>0 &lt;= A[i] &lt;= INTMAX\n</p></li></ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument of input contains an integer array A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the single element.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [1, 2, 2, 3, 1]</pre>\n<p>Input 2:</p>\n<pre> A = [1, 2, 2]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 3</pre>\n<p>Output 2:</p>\n<pre> 1</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>3 occurs once.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>1 occurs once.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given an array of integers A, every element appears twice except for one.  Find that single one. NOTE: Your algorithm should have a linear runtime complexity.  Could you implement it without using extra memory?",
        "link": "single-number"
    },
    {
        "title": "Bit Flipping",
        "topic": "Bit Manipulation",
        "companies": ["TCS"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer <strong>A</strong>.<br/>Write binary representation of the integer without leading zeros.<br/>Flip all bits then return the integer value of the binary number formed.<br/>Flipping means <strong>0 -&gt; 1</strong> and <strong>1 -&gt; 0</strong>.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>9</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 7\n</pre>\n<p>Input 2:</p>\n<pre>A = 5\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>0\n</pre>\n<p>Output 2:</p>\n<pre>2\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>7 -&gt; 111 -&gt; 000 -&gt;0</pre>\n<p>Explanation 2:</p>\n<pre>5 -&gt; 101 -&gt; 010 -&gt;3</pre></div><br/><br/></br></br></br></p>\n\n</div>",
        "statement": "Given an integer A. Write binary representation of the integer without leading zeros. Flip all bits then return the integer value of the binary number formed. Flipping means 0 -> 1 and 1 -> 0. ",
        "link": "bit-flipping"
    },
    {
        "title": "Swap Bits",
        "topic": "Bit Manipulation",
        "companies": ["HCL"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer <strong>A</strong>.<br/>Swap the <strong>B<sub>th</sub></strong> and <strong>C<sub>th</sub></strong> bit from right in binary representation of <strong>A</strong>.<br/>Return the integer formed.</div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt; 2<sup>30</sup><br/>1 &lt;= B, C &lt;= 30</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is an integer A.<br/>Second argument is an integer B.<br/>Third argument is an integer C.</div><br><br><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 9\nB = 1\nC = 2\n</pre>\n<p>Input 2:</p>\n<pre>A = 1\nB = 1\nC = 3\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>10</pre>\n<p>Output 2:</p>\n<pre>4</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>5 -&gt; 101\nSwapping 1st and 2nd bit from right gives 110.\n</pre>\n<p>Explanation 2:</p>\n<pre>1 -&gt; 001\nSwapping 1st and 3rd bit from right gives 100.\n</pre></div><br/><br/></br></br></br></br></br></p>\n\n</div>",
        "statement": "Given an integer A. Swap the Bth and Cth bit from right in binary representation of A. Return the integer formed. ",
        "link": "swap-bits"
    },
    {
        "title": "Pair With Given Difference",
        "topic": "Two Pointers",
        "companies": ["Amazon", "Flipkart"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an one-dimensional unsorted array <strong>A</strong> containing <strong>N</strong> integers.</p><p></p>\n<p>You are also given an integer <strong>B</strong>, find if there exists a pair of elements in the array whose difference is <strong>B</strong>.</p>\n<p>Return <strong>1</strong> if any such pair exists else return <strong>0</strong>.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><ul>\n<li> 1 &lt;= N &lt;= 10<sup>5</sup></li>\n<li> -10<sup>3</sup> &lt;= A[i] &lt;= 10<sup>3</sup></li>\n<li> -10<sup>5</sup> &lt;= B &lt;= 10<sup>5</sup></li>\n</ul></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong> of size <strong>N</strong>.</p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return <strong>1</strong> if any such pair exists else return <strong>0</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [5, 10, 3, 2, 50, 80]\n B = 78\n</pre>\n<p>Input 2:</p>\n<pre> A = [-10, 20]\n B = 30\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 1\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> Pair (80, 2) gives a difference of 78.\n</pre>\n<p>Explanation 2:</p>\n<pre> Pair (20, -10) gives a difference of 30 i.e 20 - (-10) =&gt; 20 + 10 =&gt; 30\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an one-dimensional unsorted array A containing N integers. You are also given an integer B, find if there exists a pair of elements in the array whose difference is B. Return 1 if any such pair exists else return 0. ",
        "link": "pair-with-given-difference"
    },
    {
        "title": "Maximum Ones After Modification",
        "topic": "Two Pointers",
        "companies": ["Amazon", "hotstar"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary array <strong>A</strong> and a number <strong>B</strong>, we need to find length of the longest <strong>subsegment</strong> of <strong>\u20181\u2019s</strong> possible by changing at most <strong>B</strong> <strong>\u20180\u2019s</strong>.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= N, B &lt;= 10<sup>5</sup></p><p></p>\n<p> A[i]=0 or A[i]=1</p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an binary array <strong>A</strong>.</p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the length of the longest <strong>subsegment</strong> of <strong>\u20181\u2019s</strong> possible by changing at most <strong>B</strong> <strong>\u20180\u2019s</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [1, 0, 0, 1, 1, 0, 1]\n B = 1\n</pre>\n<p>Input 2:</p>\n<pre> A = [1, 0, 0, 1, 0, 1, 0, 1, 0, 1]\n B = 2\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 4\n</pre>\n<p>Output 2:</p>\n<pre> 5\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> Here, we should only change 1 zero(0). Maximum possible length we can get is by changing the 3rd zero in the array,\n we get a[] = {1, 0, 0, 1, 1, 1, 1}\n</pre>\n<p>Explanation 2:</p>\n<pre> Here, we can change only 2 zeros. Maximum possible length we can get is by changing the 3rd and 4th (or) 4th and 5th zeros.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary array A and a number B, we need to find length of the longest subsegment of \u20181\u2019s possible by changing at most B \u20180\u2019s. ",
        "link": "maximum-ones-after-modification"
    },
    {
        "title": "Counting Subarrays!",
        "topic": "Two Pointers",
        "companies": ["uber"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array <strong>A</strong> of <strong>N</strong> non-negative numbers and you are also given non-negative number <strong>B</strong>.</p>\n<p>You need to find the <strong>number of subarrays in A having sum less than B</strong>. We may assume that there is no overflow.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>4</sup></p>\n<p>1 &lt;= A[i] &lt;= 100</p>\n<p>1 &lt;= B &lt;= 10<sup>8</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong>.</p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n</div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the <strong>number of subarrays in A having sum less than B</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = [2, 5, 6]\n B = 10\n</pre>\n<p>Input 2:</p>\n<pre>\n A = [1, 11, 2, 3, 15]\n B = 10\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n 4\n</pre>\n<p>Output 2:</p>\n<pre>\n 4\n</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n The subarrays with sum less than B are {2}, {5}, {6} and {2, 5},\n</pre>\n<p>Explanation 2:</p>\n<pre>\n The subarrays with sum less than B are {1}, {2}, {3} and {2, 3}\n</pre></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array A of N non-negative numbers and you are also given non-negative number B. You need to find the number of subarrays in A having sum less than B.  We may assume that there is no overflow. ",
        "link": "counting-subarrays!"
    },
    {
        "title": "Subarrays with distinct integers!",
        "topic": "Two Pointers",
        "companies": ["uber"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array <strong>A</strong> of positive integers,call a (contiguous,not necessarily distinct) subarray of <strong>A</strong> <code>good</code> if the number of different integers in that subarray is exactly <strong>B</strong>.</p><p></p>\n<p>(For example: [1, 2, 3, 1, 2] has 3 different integers 1, 2 and 3)</p>\n<p>Return the <strong>number of good subarrays</strong> of <strong>A</strong>.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 40000</p><p></p>\n<p>1 &lt;= A[i] &lt;= |A|</p>\n<p>1 &lt;= B &lt;= |A|</p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument given is the integer array <strong>A</strong>.</p><p></p>\n<p>The second argument given is an integer <strong>B</strong>.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the <strong>number of good subarrays</strong> of <strong>A</strong>.</p>\n</div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [1, 2, 1, 2, 3]\n B = 2\n</pre>\n<p>Input 2:</p>\n<pre> A = [1, 2, 1, 3, 4]\n B = 3\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 7\n</pre>\n<p>Output 2:</p>\n<pre> 3\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre>  Subarrays formed with exactly 2 different integers: [1, 2], [2, 1], [1, 2], [2, 3], [1, 2, 1], [2, 1, 2], [1, 2, 1, 2].\n</pre>\n<p>Explanation 2:</p>\n<pre>  Subarrays formed with exactly 3 different integers: [1, 2, 1, 3], [2, 1, 3], [1, 3, 4].\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array A of positive integers,call a (contiguous,not necessarily distinct) subarray of A good if the number of different integers in that subarray is exactly B. (For example: [1, 2, 3, 1, 2] has 3 different integers 1, 2 and 3)Return the number of good subarrays of A. ",
        "link": "subarrays-with-distinct-integers!"
    },
    {
        "title": "Intersection Of Sorted Arrays",
        "topic": "Two Pointers",
        "companies": ["Facebook", "Google"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Find the intersection of two sorted arrays. OR in other words, Given 2 sorted arrays, find all the elements which occur in both the arrays.</p><p></p>\n<p><strong>Example:</strong></p>\n<pre><code>Input:\n    A: [1 2 3 3 4 5 6]\n    B: [3 3 5]</code></pre></div></p>\n<p>Output: [3 3 5]</p>\n<p>Input:\n    A: [1 2 3 3 4 5 6]\n    B: [3 5]</p>\n<p>Output: [3 5]\n\n<p><strong>NOTE : For the purpose of this problem ( as also conveyed by the sample case ), assume that elements that appear more than once in both arrays should be included multiple times in the final output. </strong></p></p></div>",
        "statement": "Find the intersection of two sorted arrays.  OR in other words, Given 2 sorted arrays, find all the elements which occur in both the arrays. Example:Input:    A: [1 2 3 3 4 5 6]    B: [3 3 5]",
        "link": "intersection-of-sorted-arrays"
    },
    {
        "title": "Remove Duplicates from Sorted Array",
        "topic": "Two Pointers",
        "companies": ["United Healthgroup", "Amazon", "Google", "Microsoft", "Expedia"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a sorted array <strong>A</strong> consisting of duplicate elements.</p><p></p><p></p><p></p><p></p><p></p>\n<p> Your task is to remove all the duplicates and return a sorted array of distinct elements consisting of all distinct elements present in <strong>A</strong>.</p>\n<p>But, instead of returning an answer array, you have to <b>rearrange the given array in-place</b> such that it resembles what has been described above.\nHence, return a single integer, the index(1-based) till which the answer array would reside in the given array <b>A</b>.</p>\n<p><b>Note</b>: This integer is the same as the number of integers remaining inside <b>A</b> had we removed all the duplicates.\nLook at the example explanations for better understanding.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argurment containing the integer array A.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer, as per the problem given.</div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>A = [1, 1, 2]</pre>\n<p>Input 2:</p>\n<pre>A = [1, 2, 2, 3, 3]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>2</pre>\n<p>Output 2:</p>\n<p></p>\n<pre>3</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>Updated Array: [1, 2, X] after rearranging. Note that there could be any number in place of x since we dont need it.\nWe return 2 here.</pre>\n<p></p>\n<p>Explanation 2:</p>\n<pre>Updated Array: [1, 2, 3, X, X] after rearranging duplicates of 2 and 3.\nWe return 3 from here.</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a sorted array A consisting of duplicate elements.  Your task is to remove all the duplicates and return a sorted array of distinct elements consisting of all distinct elements present in A. But, instead of returning an answer array, you have to rearrange the given array in-place such that it resembles what has been described above. Hence, return a single integer, the index(1-based) till which the answer array would reside in the given array A. Note: This integer is the same as the number of integers remaining inside A had we removed all the duplicates. Look at the example explanations for better understanding. ",
        "link": "remove-duplicates-from-sorted-array"
    },
    {
        "title": "Palindrome Numbers",
        "topic": "Two Pointers",
        "companies": ["LTI"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given two integers <strong>A</strong> and <strong>B</strong> which represent an integer range <strong>[A, B]</strong>.<br/>Find the\u00a0<strong>maximum</strong> number of distinct <strong>palindromic integers</strong> we can take from the given range,<br/> such that the<strong> absolute difference</strong> between any <strong>two integers</strong> doesn't exceed <strong>C</strong>.</div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= B &lt;= 10<sup>5</sup><br/>1 &lt;= C &lt;= 10<sup>5</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is an integer A.<br/>The second argument is an integer B.<br/>The third argument is an integer C.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 80\nB = 110\nC = 10\n</pre>\n<p>Input 2:</p>\n<pre>A = 1\nB = 10\nC = 10\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>2</pre>\n<p>Output 2:</p>\n<pre>9</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>The plaindromic integers are 88, 99, 101.\nWe will pick 99, 101.</pre>\n<p>Explanation 2:</p>\n<pre>The plaindromic integers are 1, 2, 3, 4, 5, 6, 7, 8, 9.\nWe can pick all the palindrome integers.</pre></div><br/><br/></p>\n\n</div>",
        "statement": "Given two integers A and B which represent an integer range [A, B]. Find themaximum number of distinct palindromic integers we can take from the given range, such that the absolute difference between any two integers doesn't exceed C. ",
        "link": "palindrome-numbers"
    },
    {
        "title": "Sort Binary Linked List",
        "topic": "Linked Lists",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a Linked List <strong>A</strong> consisting of <strong>N</strong> nodes.</p><p></p><p></p><p></p>\n<p>The Linked List is binary i.e data values in the linked list nodes consist of only <strong>0's</strong> and <strong>1's</strong>.</p>\n<p>You need to sort the linked list and return the new linked list.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>Try to do it in constant space.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p>\n<p> A.val = 0 or A.val = 1</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is the head pointer of the linkedlist <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the head pointer of the new sorted linked list.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> 1 -&gt; 0 -&gt; 0 -&gt; 1\n</pre>\n<p>Input 2:</p>\n<pre> 0 -&gt; 0 -&gt; 1 -&gt; 1 -&gt; 0\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 0 -&gt; 0 -&gt; 1 -&gt; 1\n</pre>\n<p>Output 2:</p>\n<pre> 0 -&gt; 0 -&gt; 0 -&gt; 1 -&gt; 1\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> The sorted linked list looks like:\n  0 -&gt; 0 -&gt; 1 -&gt; 1\n</pre>\n<p>Explanation 2:</p>\n<pre> The sorted linked list looks like:\n  0 -&gt; 0 -&gt; 0 -&gt; 1 -&gt; 1\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a Linked List A consisting of N nodes. The Linked List is binary i. e data values in the linked list nodes consist of only 0's and 1's. You need to sort the linked list and return the new linked list. NOTE:Try to do it in constant space. ",
        "link": "sort-binary-linked-list"
    },
    {
        "title": "Even Reverse",
        "topic": "Linked Lists",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a linked list <strong>A</strong> , reverse the order of all nodes at even positions.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= Size of linked list &lt;= 100000</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is the head of the Linked-List A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the head of the new linked list.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>A = 1 -&gt; 2 -&gt; 3 -&gt; 4\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>A = 1 -&gt; 2 -&gt; 3\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 1 -&gt; 4 -&gt; 3 -&gt; 2\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 1 -&gt; 2 -&gt; 3\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>Nodes are positions 2 and 4 have been swapped.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>No swapping neccassary here.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a linked list A , reverse the order of all nodes at even positions. ",
        "link": "even-reverse"
    },
    {
        "title": "Kth Node From Middle",
        "topic": "Linked Lists",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a linked list <strong>A</strong> of length <strong>N</strong> and an integer <strong>B</strong>.</p><p></p><p></p><p></p>\n<p>You need to find the value of the <strong>B<sup>th</sup></strong> node from the middle towards the beginning of the Linked List <strong>A</strong>.</p>\n<p>If no such element exists, then return <strong>-1</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>Position of middle node is: (N/2)+1, where N is the total number of nodes in the list.</li>\n</ul>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><ul>\n<li>1 &lt;= N &lt;= 10<sup>5</sup></li>\n<li>1&lt;= Value in Each Link List Node &lt;= 10<sup>3</sup></li>\n<li>1 &lt;= B &lt;= 10<sup>5</sup></li>\n</ul></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is the head pointer of the linkedlist <strong>A</strong>.</p><p></p><p></p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the value of the <strong>B<sup>th</sup></strong> from the middle towards the head of the linked list <strong>A</strong>. If no such element exists, then return <strong>-1</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 3 -&gt; 4 -&gt; 7 -&gt; 5 -&gt; 6 -&gt; 1 6 -&gt; 15 -&gt; 61 -&gt; 16\n B = 3\n</pre>\n<p> Input 2:</p>\n<pre> A = 1 -&gt; 14 -&gt; 6 -&gt; 16 -&gt; 4 -&gt; 10\n B = 2\n</pre>\n<p> Input 3:</p>\n<pre> A = 1 -&gt; 14 -&gt; 6 -&gt; 16 -&gt; 4 -&gt; 10\n B = 10\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 4\n</pre>\n<p> Output 2:</p>\n<pre> 14\n</pre>\n<p> Output 3:</p>\n<pre> -1\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> The Middle of the linked list is the node with value 6.\n The 1<sup>st</sup> node from the middle of the linked list is the node with value 5.\n The 2<sup>nd</sup> node from the middle of the linked list is the node with value 7.\n The 3<sup>rd</sup> node from the middle of the linked list is the node with value 4.\n So we will output 4.\n</pre>\n<p>Explanation 2:</p>\n<pre> The Middle of the linked list is the node with value 16.\n The 1<sup>st</sup> node from the middle of the linked list is the node with value 6.\n The 2<sup>nd</sup> node from the middle of the linked list is the node with value 14.\n So we will output 14.\n</pre>\n<p>Explanation 3:</p>\n<pre> The Middle of the linked list is the node with value 16.\n There are only 3 nodes to the left of the middle node and we need to find the 10<sup>th</sup> node which doesn't exist so we will return -1.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a linked list A of length N and an integer B. You need to find the value of the Bth node from the middle towards the beginning of the Linked List A. If no such element exists, then return -1. NOTE:Position of middle node is: (N/2)+1, where N is the total number of nodes in the list. ",
        "link": "kth-node-from-middle"
    },
    {
        "title": "Reverse Alternate K Nodes",
        "topic": "Linked Lists",
        "companies": ["Amazon", "LeanApps"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a linked list <strong>A</strong> of length <strong>N</strong> and an integer <strong>B</strong>.</p><p></p><p></p><p></p><p></p><p></p>\n<p>You need to reverse every alternate <strong>B</strong> nodes in the linked list <strong>A</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><ul>\n<li>1 &lt;= N &lt;= 10<sup>5</sup></li>\n<li>1&lt;= Value in Each Link List Node &lt;= 10<sup>3</sup></li>\n<li>1 &lt;= B &lt;= N</li>\n<li> N is divisible by B</li>\n</ul></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is the head pointer of the linkedlist <strong>A</strong>.</p><p></p><p></p><p></p><p></p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the head pointer of the final linkedlist as described.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 3 -&gt; 4 -&gt; 7 -&gt; 5 -&gt; 6 -&gt; 6 -&gt; 15 -&gt; 61 -&gt; 16\n B = 3\n</pre>\n<p> Input 2:</p>\n<pre> A = 1 -&gt; 4 -&gt; 6 -&gt; 6 -&gt; 4 -&gt; 10\n B = 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 7 -&gt; 4 -&gt; 3 -&gt; 5 -&gt; 6 -&gt; 6 -&gt; 16 -&gt; 61 -&gt; 15\n</pre>\n<p>Output 2:</p>\n<pre> 4 -&gt; 1 -&gt; 6 -&gt; 6 -&gt; 10 -&gt; 4\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> The linked list contains 9 nodes and we need to reverse alternate 3 nodes.\n First sublist of length 3  is 3 -&gt; 4 -&gt; 7 so on reversing it we get 7 -&gt; 4 -&gt; 3.\n Second sublist of length 3 is 5 -&gt; 6 -&gt; 6 we don't need to reverse it.\n Third sublist of length 3 is 15 -&gt; 61 -&gt; 16 so on reversing it we get 16 -&gt; 61 -&gt; 15.\n</pre>\n<p>Explanation 2:</p>\n<pre> The linked list contains 6 nodes and we need to reverse alternate 2 nodes.\n First sublist of length 2 is 1 -&gt; 4 so on reversing it we get 4 -&gt; 1.\n Second sublist of length 2 is 6 -&gt; 6 we don't need to reverse it.\n Third sublist of length 2 is 4 -&gt; 10 so on reversing it we get 10 -&gt; 4.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a linked list A of length N and an integer B. You need to reverse every alternate B nodes in the linked list A. ",
        "link": "reverse-alternate-k-nodes"
    },
    {
        "title": "List Cycle",
        "topic": "Linked Lists",
        "companies": ["Amazon", "Microsoft", "NetApp"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a linked list, return the node where the cycle begins. If there is no cycle, return null.</p></div></p>\n<p>Try solving it using constant additional space.</p>\n<p><strong>Example:</strong>\n<pre>\nInput: </pre></p>\n<pre><code>              ______\n             |     |\n             \\/    |\n    1 -&gt; 2 -&gt; 3 -&gt; 4\n</code></pre>\n<p>Return the node corresponding to node 3. \n</p></div>",
        "statement": "Given a linked list, return the node where the cycle begins.  If there is no cycle, return null. ",
        "link": "list-cycle"
    },
    {
        "title": "Balanced Parantheses!",
        "topic": "Stacks And Queues",
        "companies": ["Amazon", "Google"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> consisting only of <strong>'('</strong> and <strong>')'</strong>.</p><p></p><p></p><p></p><p></p>\n<p>You need to find whether parantheses in <strong>A</strong> is balanced or not ,if it is balanced then return <strong>1</strong> else return <strong>0</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return <strong>1</strong> if parantheses in string are balanced else return <strong>0</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = \"(()())\"\n</pre>\n<p>Input 2:</p>\n<pre> A = \"(()\"\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> Given string is balanced so we return 1\n</pre>\n<p>Explanation 2:</p>\n<pre> Given string is not balanced so we return 0\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A consisting only of '(' and ')'. You need to find whether parantheses in A is balanced or not ,if it is balanced then return 1 else return 0. ",
        "link": "balanced-parantheses!"
    },
    {
        "title": "Redundant Braces",
        "topic": "Stacks And Queues",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> denoting an expression. It contains the following operators <code>'+', '-', '*', '/'</code>.</p><p></p><p></p><p></p><p></p>\n<p>Chech whether A has redundant braces or not.</p>\n<p><strong>NOTE:</strong> A will be always a valid expression.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The only argument given is string A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return 1 if A has redundant braces, else return 0.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = \"((a+b))\"</pre>\n<p>Input 2:</p>\n<pre> A = \"(a+(a+b))\"</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 1</pre>\n<p>Output 2:</p>\n<pre> 0</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> ((a+b)) has redundant braces so answer will be 1.</pre>\n<p>Explanation 2:</p>\n<pre> (a+(a+b)) doesn't have have any redundant braces so answer will be 0.</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A denoting an expression.  It contains the following operators '+', '-', '*', '/'. Chech whether A has redundant braces or not. NOTE: A will be always a valid expression. ",
        "link": "redundant-braces"
    },
    {
        "title": "MAXSPPROD",
        "topic": "Stacks And Queues",
        "companies": [],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given an array <strong>A</strong> containing <strong>N</strong> integers. The special product of each <strong>i<sup>th</sup></strong> integer in this array is defined as the product of the following:</p><p></p>\n<ol><li><strong>LeftSpecialValue:</strong> For an index <strong>i</strong>, it is defined as the index <strong>j</strong> such that <strong>A[j]&gt;A[i]</strong> and <strong>(i&gt;j)</strong>. If multiple <strong>A[j]'s</strong> are present in multiple positions, the LeftSpecialValue is the maximum value of <strong>j</strong>.</li>\n<li><strong>RightSpecialValue:</strong> For an index <strong>i</strong>, it is defined as the index <strong>j</strong> such that <strong>A[j]&gt;A[i]</strong> and <strong>(j&gt;i)</strong>. If multiple <strong>A[j]'s</strong> are present in multiple positions, the RightSpecialValue is the minimum value of <strong>j</strong>.</li></ol>\n<p>Write a program to find the maximum special product of any integer in the array.</p>\n<p><strong>NOTE: </strong> As the answer can be large, output your answer modulo 10<sup>9</sup> + 7.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup><br/> \n1 &lt;= A[i] &lt;= 10<sup>9</sup></p></div><br><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the maximum special product of any integer.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [1, 4, 3, 4]</pre>\n<p>Input 2:</p>\n<pre> A = [10, 7, 100]</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 3</pre>\n<p>Output 2:</p>\n<pre> 0</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> For A[2] = 3, LeftSpecialValue is 1 and RightSpecialValue is 3.\n So, the ans is 1*3 = 3.\n </pre>\n<p>Explanation 2:</p>\n<pre> There is not any integer having maximum special product &gt; 0. So, the ans is 0.</pre>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "You are given an array A containing N integers.  The special product of each ith integer in this array is defined as the product of the following:LeftSpecialValue: For an index i, it is defined as the index j such that A[j]>A[i] and (i>j).  If multiple A[j]'s are present in multiple positions, the LeftSpecialValue is the maximum value of j. RightSpecialValue: For an index i, it is defined as the index j such that A[j]>A[i] and (j>i).  If multiple A[j]'s are present in multiple positions, the RightSpecialValue is the minimum value of j. Write a program to find the maximum special product of any integer in the array. NOTE:  As the answer can be large, output your answer modulo 109 + 7. ",
        "link": "maxspprod"
    },
    {
        "title": "Largest Rectangle in Histogram",
        "topic": "Stacks And Queues",
        "companies": ["Google", "Facebook", "Amazon", "OLX Group"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array of integers <strong>A</strong> .</p><p></p><p></p><p></p><p></p><p></p>\n<p>A represents a histogram i.e A[i] denotes height of the ith histogram's bar. Width of each bar is 1.</p>\n<p>Find the area of the largest rectangle formed by the histogram.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 100000</p><p></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= A[i] &lt;= 1000000000</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The only argument given is the integer array A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the area of largest rectangle in the histogram.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [2, 1, 5, 6, 2, 3]\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> A = [2]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 10\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>The largest rectangle has area = 10 unit. Formed by A[3] to A[4].\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>Largest rectangle has area 2.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array of integers A . A represents a histogram i. e A[i] denotes height of the ith histogram's bar.  Width of each bar is 1. Find the area of the largest rectangle formed by the histogram. ",
        "link": "largest-rectangle-in-histogram"
    },
    {
        "title": "First non-repeating character in a stream of characters",
        "topic": "Stacks And Queues",
        "companies": ["Amazon", "Flipkart"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> denoting a stream of lowercase alphabets. You have to make new string <strong>B</strong>.</p><p></p><p></p>\n<p><strong>B</strong> is formed such that we have to find first non-repeating character each time a character is inserted to the stream and append it at the end to <strong>B</strong>. If no non-repeating character is found then append <strong>'#'</strong> at the end of <strong>B</strong>.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= length of the string &lt;= 100000</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The only argument given is string A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a string B after processing the stream of lowercase alphabets A.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = \"abadbc\"</pre>\n<p>Input 2:</p>\n<pre> A = \"abcabc\"</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> \"aabbdd\"</pre>\n<p>Output 2:</p>\n<pre> \"aaabc#\"</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre>    \"a\"      -   first non repeating character 'a'\n    \"ab\"     -   first non repeating character 'a'\n    \"aba\"    -   first non repeating character 'b'\n    \"abad\"   -   first non repeating character 'b'\n    \"abadb\"  -   first non repeating character 'd'\n    \"abadbc\" -   first non repeating character 'd'</pre>\n<p>Explanation 2:</p>\n<pre>    \"a\"      -   first non repeating character 'a'\n    \"ab\"     -   first non repeating character 'a'\n    \"abc\"    -   first non repeating character 'a'\n    \"abca\"   -   first non repeating character 'b'\n    \"abcab\"  -   first non repeating character 'c'\n    \"abcabc\" -   no non repeating character so '#'</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A denoting a stream of lowercase alphabets.  You have to make new string B. B is formed such that we have to find first non-repeating character each time a character is inserted to the stream and append it at the end to B.  If no non-repeating character is found then append '#' at the end of B. ",
        "link": "first-non-repeating-character-in-a-stream-of-characters"
    },
    {
        "title": "Evaluate Expression",
        "topic": "Stacks And Queues",
        "companies": ["Yahoo", "Google", "Facebook"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>An arithmetic expression is given by a charater array A of size N. Evaluate the value of an arithmetic expression in Reverse Polish Notation.</p><p></p><p></p><p></p>\n<p>Valid operators are +, -, *, /. Each character may be an integer or an operator.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The only argument given is character array A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the value of arithmetic expression formed using reverse Polish Notation.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>Input 1:\n    A =   [\"2\", \"1\", \"+\", \"3\", \"<em>\"]\n</em></pre><p></p><p></p><p></p>\n<pre>Input 2:\n    A = [\"4\", \"13\", \"5\", \"/\", \"+\"]\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><em>Example Output</em><em><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>Output 1:\n    9\n</pre><p></p><p></p><p></p>\n<pre>Output 2:\n    6\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Explanation</em>*<br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><pre>Explaination 1:\n    starting from backside:\n    * : () * ()\n    3 : () * (3)\n    + : (() + ()) * (3)\n    1 : (() + (1)) * (3)\n    2 : ((2) + (1)) * (3)\n    ((2) + (1)) * (3) = 9\n</pre><p></p><p></p><p></p>\n<pre>Explaination 2:\n    + : () + ()\n    / : () + (() / ())\n    5 : () + (() / (5))\n    13 : () + ((13) / (5))\n    4 : (4) + ((13) / (5))\n    (4) + ((13) / (5)) = 6\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "An arithmetic expression is given by a charater array A of size N.  Evaluate the value of an arithmetic expression in Reverse Polish Notation. Valid operators are +, -, *, /.  Each character may be an integer or an operator. ",
        "link": "evaluate-expression"
    },
    {
        "title": "Rain Water Trapped",
        "topic": "Stacks And Queues",
        "companies": ["Qualcomm", "Amazon", "Microsoft", "Goldman Sachs"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> of non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= <strong>|A|</strong> &lt;= 100000</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The only argument given is integer array A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the total water it is able to trap after raining.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]\n</pre>\n<p>Input 2:</p>\n<pre> A = [1, 2]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 6\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> <img src=\"https://imgur.com/BMA6YRo.jpeg\"/>\n In this case, 6 units of rain water (blue section) are being trapped.\n</pre>\n<p>Explanation 2:</p>\n<pre> No water is trapped.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A of non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining. ",
        "link": "rain-water-trapped"
    },
    {
        "title": "Hotel Service",
        "topic": "Stacks And Queues",
        "companies": ["NetApp"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are travelling to Neverland. After a long journey, you decided to take rest in a hotel for a night.<br/>\nYou have the map of Neverland in the form of 2D matrix <strong>A</strong> with dimensions <strong>N x M</strong>. <br/>\nThe rows are numbered from 1 to N, and the columns are numbered from 1 to M.<br/>\nYou can travel from one cell to any adjacent cell. Two cells are considered adjacent if they share a side.<br/>\nIn the map, there are only two digits, <strong>0</strong> and <strong>1</strong>, \nwhere <strong>1</strong> denotes a hotel in that cell, and <strong>0</strong> denotes an empty cell.</p></div></p>\n<p>You are also given another 2D array B with dimension <strong>Q x 2</strong>,<br/> \nwhere each row denotes a co-ordinate (X, Y) on the map (1 - indexed). \nFor each coordinate you have to find the distance to the nearest hotel.<br/>\nReturn an array denoting the answer to each coordinate in the array B.</p></div>",
        "statement": "You are travelling to Neverland.  After a long journey, you decided to take rest in a hotel for a night. You have the map of Neverland in the form of 2D matrix A with dimensions N x M.  The rows are numbered from 1 to N, and the columns are numbered from 1 to M. You can travel from one cell to any adjacent cell.  Two cells are considered adjacent if they share a side. In the map, there are only two digits, 0 and 1, where 1 denotes a hotel in that cell, and 0 denotes an empty cell. ",
        "link": "hotel-service"
    },
    {
        "title": "Maximal String",
        "topic": "Backtracking",
        "companies": ["Apple"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> and integer <strong>B</strong>, what is maximal lexicographical string that can be made from A if you do atmost B swaps.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 9</p><p></p><p></p>\n<p>A contains only digits from 0 to 9.</p>\n<p>1 &lt;= B &lt;= 5</p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is string A.</p><p></p><p></p>\n<p>Second argument is integer B.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a string, the naswer to the problem.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>A = \"254\"\nB = 1\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>A = \"254\"\nB = 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 524\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 542\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> Swap 2 and 5.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>Swap 2 and 5 then swap 4 and 2.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A and integer B, what is maximal lexicographical string that can be made from A if you do atmost B swaps. ",
        "link": "maximal-string"
    },
    {
        "title": "Combination Sum",
        "topic": "Backtracking",
        "companies": ["Facebook", "Amazon", "Adobe"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array of candidate numbers <strong>A</strong> and a target number <strong>B</strong>, find all unique combinations in A where the candidate numbers sums to B.</p>\n<p>The same repeated number may be chosen from A unlimited number of times.</p>\n<p><strong>Note</strong>:</p>\n<p>1) All numbers (including target) will be positive integers.</p>\n<p>2) Elements in a combination (a1, a2, \u2026 , ak) must be in non-descending order. (ie, a1 \u2264 a2 \u2264 \u2026 \u2264 ak).</p>\n<p>3) The combinations themselves must be sorted in ascending order.</p>\n<p>4) CombinationA &gt; CombinationB iff (a1 &gt; b1) OR (a1 = b1 AND a2 &gt; b2) OR ... (a1 = b1 AND a2 = b2 AND ... ai = bi AND ai+1 &gt; bi+1)</p>\n<p>5) The solution set must not contain duplicate combinations.</p>\n<p> </p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 20 </p><p></p><p></p><p></p>\n<p>1 &lt;= A[i] &lt;= 50</p>\n<p>1 &lt;= B &lt;= 500</p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument is an integer array A.</p>\n<p>The second argument is integer B.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> Return a vector of all combinations that sum up to B.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>A = [2, 3]\nB = 2\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>A = [2, 3, 6, 7]\nB = 7\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>[ [2] ]\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>[ [2, 2, 3] , [7] ]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>All possible combinations are listed.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>All possible combinations are listed.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array of candidate numbers A and a target number B, find all unique combinations in A where the candidate numbers sums to B. The same repeated number may be chosen from A unlimited number of times. Note:1) All numbers (including target) will be positive integers. 2) Elements in a combination (a1, a2, \u2026 , ak) must be in non-descending order.  (ie, a1 \u2264 a2 \u2264 \u2026 \u2264 ak). 3) The combinations themselves must be sorted in ascending order. 4) CombinationA > CombinationB iff (a1 > b1) OR (a1 = b1 AND a2 > b2) OR . . .  (a1 = b1 AND a2 = b2 AND . . .  ai = bi AND ai+1 > bi+1)5) The solution set must not contain duplicate combinations.  ",
        "link": "combination-sum"
    },
    {
        "title": "All Possible Combinations",
        "topic": "Backtracking",
        "companies": ["Soroco"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given a array of strings <strong>A</strong> of length <strong>N</strong>.<br/>\n</p><p>You have to return another string array which contains all possible special strings.<br/>\nA special string is defined as a string with length equal to N, <br/>\nand i<sup>th</sup> character of the string is equal to any character of the i<sup>th</sup> string in the array A.</p></div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= N &lt;= 5<br/>\n1 &lt;= |A<sub>i</sub>| &lt;= 8</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the string array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a string array consisting of all possible special strings.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = ['ab', 'cd']\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = ['aa', 'bb']\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>['ac', 'ad', 'bc', 'bd']\n</code></pre>\n<p>Output 2:</p>\n<pre><code>['ab', 'ab', 'ab', 'ab']\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>Since, the first character has to be from the 1st string 'ab' and the 2nd from 'cd'.\nThese are the all possible 4 combinations.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>Note we can have duplicate strings, you have to add all of them.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "You are given a array of strings A of length N. You have to return another string array which contains all possible special strings. A special string is defined as a string with length equal to N, and ith character of the string is equal to any character of the ith string in the array A. ",
        "link": "all-possible-combinations"
    },
    {
        "title": "Longest Subarray Length ",
        "topic": "Hashing",
        "companies": ["DE Shaw"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> of size <strong>N</strong> containing <strong>0's</strong> and <strong>1's</strong> only.</p>\n<p>\u00a0</p>\n<p>\u00a0</p>\n<p>\u00a0</p>\n<p>\u00a0</p>\n<p>You need to find the length of the <strong>longest</strong> subarray having count of <strong>1\u2019s</strong>\u00a0<strong>one more</strong> than count of <strong>0\u2019s</strong>.</p>\n<p>\u00a0</p>\n<p>\u00a0</p>\n<p>Note: In the subarray count of <strong>1's</strong> should be <strong>one more than</strong> the count of <strong>0's</strong>.</p>\n<p>\u00a0</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A of size N.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the longest length of the subarray.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = [0, 1, 1, 0, 0, 1]</pre>\n<p>Input 2:</p>\n<pre> A = [1, 0, 0, 1, 0]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 5</pre>\n<p>Output 2:</p>\n<pre> 1</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> Subarray of length 5, index 1 to 5 i.e <a href=\"0-indexed\">1, 1, 0, 0, 1</a>. Count of 1 = 3, Count of 0 = 2.</pre>\n<p>Explanation 2:</p>\n<pre> Subarray of length 1 will be only subarray that follow the above condition.</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A of size N containing 0's and 1's only. You need to find the length of the longest subarray having count of 1\u2019sone more than count of 0\u2019s. Note: In the subarray count of 1's should be one more than the count of 0's. ",
        "link": "longest-subarray-length-"
    },
    {
        "title": "First Repeating element",
        "topic": "Hashing",
        "companies": ["DE Shaw"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> of size <strong>N</strong>, find the first repeating element in it.</p><p></p><p></p><p></p><p></p>\n<p>We need to find the element that occurs <strong>more than once</strong> and whose index of first occurrence is <strong>smallest</strong>.</p>\n<p>If there is no repeating element, return -1.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= A[i] &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A of size N.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the first repeating element.</p>\n</div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = [10, 5, 3, 4, 3, 5, 6]</pre>\n<p>Input 2:</p>\n<pre> A = [6, 10, 5, 4, 9, 120]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 5</pre>\n<p>Output 2:</p>\n<pre> -1</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> 5 is the first element that repeats</pre>\n<p>Explanation 2:</p>\n<pre> There is no repeating element, output -1</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A of size N, find the first repeating element in it. We need to find the element that occurs more than once and whose index of first occurrence is smallest. If there is no repeating element, return -1. ",
        "link": "first-repeating-element"
    },
    {
        "title": "2 Sum",
        "topic": "Hashing",
        "companies": ["Facebook", "Amazon", "Google"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array of integers, find two numbers such that they add up to a specific target number.</p></div></p>\n<p>The function <strong>twoSum</strong> should return indices of the two numbers such that they add up to the target, where <strong>index1</strong> &lt; <strong>index2</strong>. Please note that your returned answers (both <strong>index1</strong> and <strong>index2</strong> ) are not zero-based. Put both these numbers in order in an array and return the array from your function ( Looking at the function signature will make things clearer ). Note that, if no pair exists, return empty list.</p>\n<p>If multiple solutions exist, output the one where <strong>index2</strong> is minimum. If there are multiple solutions with the minimum <strong>index2</strong>, choose the one with minimum <strong>index1</strong> out of them.\n<code>\nInput: [2, 7, 11, 15], target=9\nOutput: index1 = 1, index2 = 2\n</code></p></div>",
        "statement": "Given an array of integers, find two numbers such that they add up to a specific target number. ",
        "link": "2-sum"
    },
    {
        "title": "Pairs With Given Xor",
        "topic": "Hashing",
        "companies": ["Flipkart"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an 1D integer array <strong>A</strong> containing <strong>N</strong> distinct integers.</p><p></p><p></p><p></p><p></p>\n<p>Find the number of unique pairs of integers in the array whose XOR is equal to <strong>B</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<ul><li>Pair (a, b) and (b, a) is considered to be same and should be counted once.</li></ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= A[i], B &lt;= 10<sup>7</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an 1D integer array <strong>A</strong>.</p><p></p><p></p><p></p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the number of unique pairs of integers in the array <strong>A</strong> whose XOR is equal to <strong>B</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = [5, 4, 10, 15, 7, 6]\n B = 5\n</pre>\n<p>Input 2:</p>\n<pre> A = [3, 6, 8, 10, 15, 50]\n B = 5\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> (10 ^ 15) = 5\n</pre>\n<p>Explanation 2:</p>\n<pre> (3 ^ 6) = 5 and (10 ^ 15) = 5 \n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an 1D integer array A containing N distinct integers. Find the number of unique pairs of integers in the array whose XOR is equal to B. NOTE:Pair (a, b) and (b, a) is considered to be same and should be counted once. ",
        "link": "pairs-with-given-xor"
    },
    {
        "title": "Check Palindrome!",
        "topic": "Hashing",
        "companies": ["deshaw"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong> consisting of lowercase characters.</p><p></p><p></p>\n<p>Check if characters of the given string can be rearranged to form a <strong>palindrome</strong>.</p>\n<p>Return 1 if it is possible to rearrange the characters of the string <strong>A</strong> such that it becomes a palindrome else return 0.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>A consists only of lower-case characters.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return 1 if it is possible to rearrange the characters of the string <strong>A</strong> such that it becomes a palindrome else return 0.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = \"abcde\"\n</pre>\n<p>Input 2:</p>\n<pre> A = \"abbaee\"\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 0\n</pre>\n<p>Output 2:</p>\n<pre> 1\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> No possible rearrangement to make the string palindrome.\n</pre>\n<p>Explanation 2:</p>\n<pre> Given string \"abbaee\" can be rearranged to \"aebbea\" to form a palindrome.\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A consisting of lowercase characters. Check if characters of the given string can be rearranged to form a palindrome. Return 1 if it is possible to rearrange the characters of the string A such that it becomes a palindrome else return 0. ",
        "link": "check-palindrome!"
    },
    {
        "title": "An Increment Problem",
        "topic": "Hashing",
        "companies": ["Bloomberg L.P", "Evie.ai", "Groupon", "Shopee"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a stream of numbers <strong>A</strong>. On arrival of each number, you need to increase its first occurence by 1 and include this in the stream.</p><p></p>\n<p>Return the final stream of numbers.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 100000</p><p></p>\n<p>1 &lt;= A[i] &lt;= 10000</p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is the array A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an array, the final stream of numbers.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>A = [1, 1]\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>A = [1, 2]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>[2, 1]\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>[1, 2]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> On arrival of the second element, the other element is increased by 1.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>No increases are to be done.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a stream of numbers A.  On arrival of each number, you need to increase its first occurence by 1 and include this in the stream. Return the final stream of numbers. ",
        "link": "an-increment-problem"
    },
    {
        "title": "Subarray with given XOR",
        "topic": "Hashing",
        "companies": ["dunzo"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array of integers <strong>A</strong> and an integer <strong>B</strong>.</p><p></p><p></p><p></p>\n<p>Find the total number of subarrays having bitwise XOR of all elements equals to B.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= length of the array &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>1 &lt;= A[i], B &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument given is the integer array A.<br/>\nThe second argument given is integer B.</p></div><br><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the total number of subarrays having bitwise XOR equals to B.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [4, 2, 2, 6, 4]\n B = 6</pre>\n<p>Input 2:</p>\n<pre> A = [5, 6, 7, 8, 9]\n B = 5</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 4</pre>\n<p>Output 2:</p>\n<pre> 2</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> The subarrays having XOR of their elements as 6 are:\n [4, 2], [4, 2, 2, 6, 4], [2, 2, 6], [6]</pre>\n<p>Explanation 2:</p>\n<pre> The subarrays having XOR of their elements as 5 are [5] and [5, 6, 7, 8, 9]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given an array of integers A and an integer B. Find the total number of subarrays having bitwise XOR of all elements equals to B. ",
        "link": "subarray-with-given-xor"
    },
    {
        "title": "Two out of Three",
        "topic": "Hashing",
        "companies": ["Booking.com"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given are Three arrays <strong>A</strong>, <strong>B</strong> and <strong>C</strong>.</p><p></p>\n<p>Return the sorted list of numbers that are present in atleast 2 out of the 3 arrays.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A|, |B|, |C| &lt;= 100000</p><p></p>\n<p>1 &lt;= A[i], B[i], C[i] &lt;= 100000</p>\n<p>A, B, C may or may not have pairwise distinct elements.</p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is the array A.</p><p></p>\n<p>First argument is the array B.</p>\n<p>First argument is the array C.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a sorted array of numbers.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>A = [1, 1, 2]\nB = [2, 3]\nC = [3]\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>A = [1, 2]\nB = [1, 3]\nC = [2, 3]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>[2, 3]\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>[1, 2, 3]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>1 is only present in A. 2 is present in A and B. 3 is present in B and C.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>All numbers are present in atleast 2 out of 3 lists.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given are Three arrays A, B and C. Return the sorted list of numbers that are present in atleast 2 out of the 3 arrays. ",
        "link": "two-out-of-three"
    },
    {
        "title": "Subarray with B odd numbers",
        "topic": "Hashing",
        "companies": ["dunzo"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array of integers <strong>A</strong> and an integer <strong>B</strong>.</p><p></p><p></p>\n<p>Find the total number of subarrays having exactly B odd numbers.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= length of the array &lt;= 10<sup>5</sup></p><p></p>\n<p>1 &lt;= A[i] &lt;= 10<sup>9</sup></p>\n<p>0 &lt;= B &lt;= A</p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument given is the integer array A.<br/>\nThe second argument given is integer B.</p></div><br><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the total number of subarrays having exactly B odd numbers.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [4, 3, 2, 3, 4]\n B = 2</pre>\n<p>Input 2:</p>\n<pre> A = [5, 6, 7, 8, 9]\n B = 3</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 4</pre>\n<p>Output 2:</p>\n<pre> 1</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> The subarrays having exactly B odd numbers are:\n [4, 3, 2, 3], [4, 3, 2, 3, 4], [3, 2, 3], [3, 2, 3, 4]</pre>\n<p>Explanation 2:</p>\n<pre> The subarrays having exactly B odd numbers is [5, 6, 7, 8, 9]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given an array of integers A and an integer B. Find the total number of subarrays having exactly B odd numbers. ",
        "link": "subarray-with-b-odd-numbers"
    },
    {
        "title": "Ways to form Max Heap",
        "topic": "Heaps And Maps",
        "companies": ["Directi"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p><strong>Max Heap</strong> is a special kind of <strong>complete binary tree</strong> in which for every node the value present in that node is greater than the value present in it\u2019s children nodes.</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Find the number of <strong>distinct Max Heap</strong> can be made from <strong>A distinct integers</strong>.</p>\n<p>In short, you have to ensure the following properties for the max heap :</p>\n<ul><li>Heap has to be a complete binary tree ( A complete binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.)</li>\n<li>Every node is greater than all its children.</li></ul>\n<p><strong>NOTE: </strong> If you want to know more about Heaps, please visit this <a href=\"https://en.wikipedia.org/wiki/Heap_%28data_structure%29\">link</a>. Return your answer <strong>modulo 10<sup>9</sup> + 7</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A &lt;= 100</p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the number of distinct Max Heap.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 4</pre>\n<p>Input 2:</p>\n<pre> A = 10</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 3</pre>\n<p>Output 2:</p>\n<pre> 3360</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> Let us take 1, 2, 3, 4 as our 4 distinct integers\n Following are the 3 possible max heaps from these 4 numbers :\n      4           4                     4\n    /  \\         / \\                   / \\ \n   3    2   ,   2   3      and        3   1\n  /            /                     /<br/>\n 1            1                     2\n</pre>\n<p>Explanation 2:</p>\n<pre> Number of distinct heaps possible with 10 distinct integers = 3360.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br><br/></br></p>\n\n</div>",
        "statement": "Max Heap is a special kind of complete binary tree in which for every node the value present in that node is greater than the value present in it\u2019s children nodes. Find the number of distinct Max Heap can be made from A distinct integers. In short, you have to ensure the following properties for the max heap :Heap has to be a complete binary tree ( A complete binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible. )Every node is greater than all its children. NOTE:  If you want to know more about Heaps, please visit this link.  Return your answer modulo 109 + 7. ",
        "link": "ways-to-form-max-heap"
    },
    {
        "title": "N max pair combinations",
        "topic": "Heaps And Maps",
        "companies": ["Liv.ai"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given two integers arrays <strong>A</strong> and <strong>B</strong> of size <strong>N</strong> each.</p><p></p>\n<p>Find the <strong>maximum N elements</strong> from the sum combinations (A<sub>i</sub> + B<sub>j</sub>) formed from elements in array A and B.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 2 * 10<sup>5</sup></p><p></p>\n<p>-1000 &lt;= A[i], B[i] &lt;= 1000</p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array A.<br/>\nSecond argument is an integer array B.</p> </div><br><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an intger array denoting the N maximum element in descending order.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [1, 4, 2, 3]\n B = [2, 5, 1, 6]</pre>\n<p>Input 2:</p>\n<pre> A = [2, 4, 1, 1]\n B = [-2, -3, 2, 4]</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> [10, 9, 9, 8]</pre>\n<p>Output 2:</p>\n<pre> [8, 6, 6, 5]</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> 4 maximum elements are 10(6+4), 9(6+3), 9(5+4), 8(6+2).</pre>\n<p>Explanation 2:</p>\n<pre> 4 maximum elements are 8(4+4), 6(4+2), 6(4+2), 5(4+1).</pre>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given two integers arrays A and B of size N each. Find the maximum N elements from the sum combinations (Ai + Bj) formed from elements in array A and B. ",
        "link": "n-max-pair-combinations"
    },
    {
        "title": "K Largest Elements",
        "topic": "Heaps And Maps",
        "companies": ["Amazon", "Delhivery", "Flipkart"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an 1D integer array <strong>A</strong> of size <strong>N</strong> you have to find and return the <strong>B</strong> largest elements of the array <strong>A</strong>.</p><p></p><p></p><p></p><p></p><p></p>\n<p><strong>NOTE:</strong></p>\n<ul><li>Return the largest  <strong>B</strong> elements in any order you like.</li></ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= B &lt;= N</p>\n<p>1 &lt;= A[i] &lt;= 10<sup>3</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an 1D integer array <strong>A</strong></p><p></p><p></p><p></p><p></p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a 1D array of size <strong>B</strong> denoting the <strong>B</strong> largest elements.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [11, 3, 4]\n B = 2\n</pre>\n<p>Input 2:</p>\n<pre> A = [11, 3, 4, 6]\n B = 3\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> [11, 4]\n</pre>\n<p>Output 2:</p>\n<pre> [4, 6, 11]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> The two largest elements of A are 11 and 4\n</pre>\n<p>Explanation 2:</p>\n<pre> The three largest elements of A are 11, 4 and 6\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an 1D integer array A of size N you have to find and return the B largest elements of the array A. NOTE:Return the largest  B elements in any order you like. ",
        "link": "k-largest-elements"
    },
    {
        "title": "Profit Maximisation",
        "topic": "Heaps And Maps",
        "companies": ["Buyhatke"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> Given an array <strong>A</strong> , representing seats in each row of a stadium. You need to sell tickets to <strong>B</strong> people.</p><p></p><p></p><p></p>\n<p>Each seat costs equal to the number of vacant seats in the row it belongs to. The task is to maximize the profit by selling the tickets to B people.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 100000</p><p></p><p></p><p></p>\n<p>1 &lt;= B &lt;= 1000000</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is the array A.</p><p></p><p></p><p></p>\n<p>Second argument is integer B.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return one integer, the answer to the problem.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>A = [2, 3]\nB = 3\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>A = [1, 4]\nB = 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>7\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>7\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> First you serve the seat with number = 3. Then with 2 and then with 2. hence answer = 3 + 2 + 2 = 7.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> You give both tickets from the row with 4 seats. 4 + 3 = 7.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": " Given an array A , representing seats in each row of a stadium.  You need to sell tickets to B people. Each seat costs equal to the number of vacant seats in the row it belongs to.  The task is to maximize the profit by selling the tickets to B people. ",
        "link": "profit-maximisation"
    },
    {
        "title": "Merge K sorted arrays!",
        "topic": "Heaps And Maps",
        "companies": ["trakinvest"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given <strong>K</strong> sorted integer arrays in a form of 2D integer matrix <strong>A</strong> of size <code>K X N</code>.</p>\n<p>You need to merge them into a single array and return it.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= K, N &lt;= 10<sup>3</sup></p>\n<p>0 &lt;= A[i][j] &lt;= 10<sup>8</sup></p>\n<p>A[i][j] &lt;= A[i][j+1]</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an 2D integer matrix <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a integer array denoting the merged array you get after merging all the arrays in <strong>A</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = [  [1, 2, 3]\n        [2, 4, 6]\n        [0, 9, 10]\n     ]\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n [0, 1, 2, 2, 3, 4, 6, 9, 10]\n</pre>\n</div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n You need to merge [1, 2, 3] , [2, 4, 6] and [0, 9, 10]  into a single array\n so the merged array will look like [0, 1, 2, 2, 3, 4, 6, 9, 10]\n</pre>\n</div><br/><br/></p>\n\n</div>",
        "statement": "You are given K sorted integer arrays in a form of 2D integer matrix A of size K X N. You need to merge them into a single array and return it. ",
        "link": "merge-k-sorted-arrays!"
    },
    {
        "title": "Magician and Chocolates",
        "topic": "Heaps And Maps",
        "companies": [],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given <strong>N</strong> bags, each bag contains <strong>B<sub>i</sub></strong> chocolates. There is a kid and a magician. In one unit of time, kid chooses a random bag <strong>i</strong>, eats <strong>B<sub>i</sub></strong> chocolates, then the magician fills the <strong>ith</strong> bag with <strong>floor(B<sub>i</sub>/2)</strong> chocolates.</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Find the maximum number of chocolates that kid can eat in <strong>A</strong> units of time.</p>\n<p><strong>NOTE:</strong> </p>\n<ol><li>floor() function returns the largest integer less than or equal to a given number.</li>\n<li>Return your answer modulo <strong>10<sup>9</sup>+7</strong></li></ol>\n</div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer A.<br/>\nSecond argument is an integer array B of size N.</p></div><br><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the maximum number of chocolates that kid can eat in A units of time.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 3\n B = [6, 5]</pre>\n<p>Input 2:</p>\n<pre> A = 5\n b = [2, 4, 6, 8, 10]</pre>\n</div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 14</pre>\n<p>Output 2:</p>\n<pre> 33</pre>\n</div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> At t = 1 kid eats 6 chocolates from bag 0, and the bag gets filled by 3 chocolates. \n At t = 2 kid eats 5 chocolates from bag 1, and the bag gets filled by 2 chocolates. \n At t = 3 kid eats 3 chocolates from bag 0, and the bag gets filled by 1 chocolate. \n so, total number of chocolates eaten are 6 + 5 + 3 = 14</pre>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given N bags, each bag contains Bi chocolates.  There is a kid and a magician.  In one unit of time, kid chooses a random bag i, eats Bi chocolates, then the magician fills the ith bag with floor(Bi/2) chocolates. Find the maximum number of chocolates that kid can eat in A units of time. NOTE: floor() function returns the largest integer less than or equal to a given number. Return your answer modulo 109+7",
        "link": "magician-and-chocolates"
    },
    {
        "title": "Maximum Sum Combinations",
        "topic": "Heaps And Maps",
        "companies": ["Amazon", "Liv.ai"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given two equally sized 1-D arrays <strong>A, B</strong> containing <strong>N</strong> integers each.</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>A <strong>sum combination</strong> is made by adding one element from array <strong>A</strong> and another element of array <strong>B</strong>.</p>\n<p>Return the <strong>maximum C valid sum combinations</strong> from all the possible sum combinations.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p> 1 &lt;= A[i] &lt;= 10<sup>3</sup></p>\n<p> 1 &lt;= C &lt;= N</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an one-dimensional integer array <strong>A</strong> of size <strong>N</strong>.</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Second argument is an one-dimensional integer array <strong>B</strong> of size <strong>N</strong>.</p>\n<p>Third argument is an integer <strong>C</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a one-dimensional integer array of size <strong>C</strong> denoting the top C maximum sum combinations.</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p><strong>NOTE:</strong></p>\n<p>The returned array must be sorted in non-increasing order.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [3, 2]\n B = [1, 4]\n C = 2\n</pre>\n<p>Input 2:</p>\n<pre> A = [1, 4, 2, 3]\n B = [2, 5, 1, 6]\n C = 4\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> [7, 6]\n</pre>\n<p>Output 1:</p>\n<pre> [10, 9, 9, 8]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 7     (A : 3) + (B : 4)\n 6     (A : 2) + (B : 4)\n</pre>\n<p>Explanation 2:</p>\n<pre> 10   (A : 4) + (B : 6)\n 9   (A : 4) + (B : 5)\n 9   (A : 3) + (B : 6)\n 8   (A : 3) + (B : 5)\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given two equally sized 1-D arrays A, B containing N integers each. A sum combination is made by adding one element from array A and another element of array B. Return the maximum C valid sum combinations from all the possible sum combinations. ",
        "link": "maximum-sum-combinations"
    },
    {
        "title": "Distinct Numbers in Window",
        "topic": "Heaps And Maps",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given an array of <strong>N</strong> integers, <strong>A<sub>1</sub>, A<sub>2</sub> ,..., A<sub>N</sub></strong> and an integer <strong>B</strong>. Return the of count of distinct numbers in all windows of size <strong>B</strong>.\n</p><p></p><p></p><p></p>\n<p>Formally, return an array of size <strong>N-B+1</strong> where <strong>i'th</strong> element in this array contains number of distinct elements in sequence <strong>A<sub>i</sub>, A<sub>i+1</sub> ,..., A<sub>i+B-1</sub>.</strong></p>\n<p><strong>NOTE: </strong> if <strong>B</strong> &gt; <strong>N</strong>, return an empty array.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array A<br/>\nSecond argument is an integer B.</p></div><br><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer array.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [1, 2, 1, 3, 4, 3]\n B = 3</pre>\n<p>Input 2:</p>\n<pre> A = [1, 1, 2, 2]\n B = 1</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> [2, 3, 3, 2]</pre>\n<p>Output 2:</p>\n<pre> [1, 1, 1, 1]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> A=[1, 2, 1, 3, 4, 3] and B = 3\n All windows of size B are\n [1, 2, 1]\n [2, 1, 3]\n [1, 3, 4]\n [3, 4, 3]\n So, we return an array [2, 3, 3, 2].</pre>\n<p>Explanation 2:</p>\n<pre> Window size is 1, so the output array is [1, 1, 1, 1].</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "You are given an array of N integers, A1, A2 ,. . . , AN and an integer B.  Return the of count of distinct numbers in all windows of size B. Formally, return an array of size N-B+1 where i'th element in this array contains number of distinct elements in sequence Ai, Ai+1 ,. . . , Ai+B-1. NOTE:  if B > N, return an empty array. ",
        "link": "distinct-numbers-in-window"
    },
    {
        "title": "Valid BST from Preorder",
        "topic": "Tree Data Structure",
        "companies": ["Unbxd Inc."],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given a preorder traversal <strong>A</strong>, of a Binary Search Tree.</p>\n<p>Find if it is a valid preorder traversal of a BST.</p>\n<p><strong>Note:</strong> Binary Search Tree by definition has distinct keys and <strong>duplicates in binary search tree are not allowed</strong>.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A[i] &lt;= 10<sup>6</sup></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= |A| &lt;= 10<sup>5</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array <strong>A</strong> denoting the pre-order traversal.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer:</p>\n<li> 0 : Impossible preorder traversal of a BST</li>\n<li> 1 : Possible preorder traversal of a BST</li></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre>A = [7, 7, 10, 10, 9, 5, 2, 8]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 0</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "You are given a preorder traversal A, of a Binary Search Tree. Find if it is a valid preorder traversal of a BST. Note: Binary Search Tree by definition has distinct keys and duplicates in binary search tree are not allowed. ",
        "link": "valid-bst-from-preorder"
    },
    {
        "title": "2-Sum Binary Tree",
        "topic": "Tree Data Structure",
        "companies": ["Amazon"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary search tree <strong>A</strong>, where each node contains a positive integer, and an integer <strong>B</strong>, you have to find whether or not there exist two different nodes X and Y such that X.value + Y.value = B.</p><p></p>\n<p>Return 1 to denote that two such nodes exist. Return 0, otherwise.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= size of tree &lt;= 100000</p><p></p>\n<p>1 &lt;= B &lt;= 10<sup>9</sup></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is the head of the tree A.</p><p></p>\n<p>Second argument is the integer B.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return 1 if such a pair can be found, 0 otherwise.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>         10\n         / \\\n        9   20</pre></div></p>\n<p>B = 19\n\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> \n          10\n         / \\\n        9   20</pre></p>\n<p>B = 40\n\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></p></div>",
        "statement": "Given a binary search tree A, where each node contains a positive integer, and an integer B, you have to find whether or not there exist two different nodes X and Y such that X. value + Y. value = B. Return 1 to denote that two such nodes exist.  Return 0, otherwise. ",
        "link": "2-sum-binary-tree"
    },
    {
        "title": "Xor Between Two Arrays!",
        "topic": "Tree Data Structure",
        "companies": ["Liv.ai"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given two integer array <strong>A</strong> and <strong>B</strong>, you have to pick one element from each array such that their <strong>xor</strong> is <strong>maximum</strong>.</p><p></p>\n<p>Return this <strong>maximum xor</strong> value.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A|, |B| &lt;= 10<sup>5</sup></p><p></p>\n<p>1 &lt;= A[i], B[i] &lt;= 10<sup>9</sup></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong>.</p><p></p>\n<p>Second argument is an integer array <strong>B</strong>.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the maximum xor value as described in the question.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [1, 2, 3]\n B = [4, 1, 2]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 7\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> Pick A[2] and B[0] because their xor value is maximum. 3 ^ 4 = 7\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given two integer array A and B, you have to pick one element from each array such that their xor is maximum. Return this maximum xor value. ",
        "link": "xor-between-two-arrays!"
    },
    {
        "title": "Hotel Reviews",
        "topic": "Tree Data Structure",
        "companies": ["Booking.com", "Fab"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a set of reviews provided by the customers for different hotels and a string containing <strong>Good Words</strong>, you need to sort the reviews in descending order according to their <strong>Goodness Value</strong> (Higher goodness value first). We define the <strong>Goodness Value</strong> of a string as the number of <strong>Good Words</strong> in that string.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p><strong>NOTE: </strong>Sorting should be stable. If review <strong>i</strong> and review <strong>j</strong> have the same <strong>Goodness Value</strong> then their original order would be preserved.</p>\n<p><code>You are expected to use Trie in an Interview for such problems</code></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p></p><ol><li>1 &lt;= No.of reviews &lt;= 200</li>\n<li>1 &lt;= No. of words in a review &lt;= 1000</li>\n<li>1 &lt;= Length of an individual review &lt;= 10,000</li>\n<li>1 &lt;= Number of Good Words &lt;= 10,000</li>\n<li>1 &lt;= Length of an individual Good Word &lt;= 4</li>\n<li>All the alphabets are lower case (a - z)</li></ol><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is a string A containing \"Good Words\" separated by \"_\" character</p><p></p><p></p><p></p>\n<p>Second argument is a vector B of strings containing Hotel Reviews. Review strings are also separated by \"_\" character.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a vector of integers which contain the original indexes of the reviews in the sorted order of reviews.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = \"cool<em>ice</em>wifi\"\n B = [\"water<em>is</em>cool\", \"cold<em>ice</em>drink\", \"cool<em>wifi</em>speed\"]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> [2, 0, 1]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> sorted reviews are [\"cool<em>wifi</em>speed\", \"water<em>is</em>cool\", \"cold<em>ice</em>drink\"]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a set of reviews provided by the customers for different hotels and a string containing Good Words, you need to sort the reviews in descending order according to their Goodness Value (Higher goodness value first).  We define the Goodness Value of a string as the number of Good Words in that string. NOTE: Sorting should be stable.  If review i and review j have the same Goodness Value then their original order would be preserved. You are expected to use Trie in an Interview for such problems",
        "link": "hotel-reviews"
    },
    {
        "title": "Path to Given Node",
        "topic": "Tree Data Structure",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a Binary Tree <strong>A</strong> containing <strong>N</strong> nodes.</p><p></p><p></p><p></p>\n<p>You need to find the path from <strong>Root</strong> to a given node <strong>B</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>No two nodes in the tree have same data values.</li>\n<li>You can assume that <strong>B</strong> is present in the tree <strong>A</strong> and a path always exists.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= N &lt;= 10<sup>5</sup> </p><p></p><p></p><p></p>\n<p> 1 &lt;= Data Values of Each Node &lt;= N</p>\n<p> 1 &lt;= B &lt;= N</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First Argument represents pointer to the root of binary tree <strong>A</strong>.</p><p></p><p></p><p></p><p></p>\n<p>Second Argument is an integer <strong>B</strong> denoting the node number.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an one-dimensional array denoting the path from <strong>Root</strong> to the node <strong>B</strong> in order.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A =<br/>\n           1\n         /   \\\n        2     3\n       / \\   / \\\n      4   5 6   7 </pre></div></p>\n<p>B = 5\n\n<p>Input 2:</p>\n<pre> A = \n            1\n          /   \\\n         2     3\n        / \\ .   \\\n       4   5 .   6</pre></p>\n<p>B = 1<br/>\n\n<p></p>\n<p></p>\n<p></p>\n<p></p></p></div>",
        "statement": "Given a Binary Tree A containing N nodes. You need to find the path from Root to a given node B. NOTE:No two nodes in the tree have same data values. You can assume that B is present in the tree A and a path always exists. ",
        "link": "path-to-given-node"
    },
    {
        "title": "Remove Half Nodes",
        "topic": "Tree Data Structure",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree <strong>A</strong> with <strong>N</strong> nodes.</p><p></p><p></p>\n<p>You have to remove all the half nodes and return the final binary tree.</p>\n<p><strong>NOTE:</strong></p>\n<ul><li>Half nodes are nodes which have only one child.</li>\n<li>Leaves should not be touched as they have both children as NULL.</li>\n</ul>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= N &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an pointer to the root of binary tree <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a pointer to the root of the new binary tree.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>           1\n         /   \\\n        2     3\n       / \n      4<br/>\n</pre>\n<p>Input 2:</p>\n<pre>            1\n          /   \\\n         2     3\n        / \\     \\\n       4   5     6\n</pre>\n<p></p>\n<p></p></div><br><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>           1\n         /   \\\n        4     3\n</pre>\n<p>Output 2:</p>\n<pre>            1\n          /   \\\n         2     6\n        / \\<br/>\n       4   5<br/>\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br><br><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> The only half node present in the tree is 2 so we will remove this node.\n</pre>\n<p>Explanation 2:</p>\n<pre> The only half node present in the tree is 3 so we will remove this node.\n</pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></p>\n\n</div>",
        "statement": "Given a binary tree A with N nodes. You have to remove all the half nodes and return the final binary tree. NOTE:Half nodes are nodes which have only one child. Leaves should not be touched as they have both children as NULL. ",
        "link": "remove-half-nodes"
    },
    {
        "title": "Nodes at Distance K",
        "topic": "Tree Data Structure",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given the root of a binary tree <strong>A</strong>, the value of a target node <strong>B</strong>, and an integer <strong>C</strong>, return an array of the values of all nodes that have a distance <strong>C</strong> from the target node.<br/><br/>You can return the answer in any order.</div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 \u2264 N \u2264 10<sup>5</sup> (N is the number of nodes in the binary tree)<br/>1 \u2264 A<sub>i</sub> \u2264 N (A<sub>i</sub> denotes the values of the nodes in the tree)<br/>All the values in the nodes are unique.<br/>1 \u2264 C \u2264 10<sup>4</sup></div><br><br><strong>Input Format</strong><br>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the root node of the binary tree A.<br/>The second argument is an integer B denoting the label of the target node.<br/>The third argument is an integer C denoting the distance.</div><br><br><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an array of integers denoting the nodes which are at a distance C from the node B.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A =     1\n       / \\\n      2   3\n     / \\\n    4   5</code></pre></div></br></br></br></br></br></br></br></p>\n<p>B = 2\nC = 1\n\n<p>Input 2:</p>\n<pre><code>A =     1\n       / \\\n      2   3\n     / \\\n    4   5</code></pre></p>\n<p>B = 2\nC = 2\n\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></p></div>",
        "statement": "Given the root of a binary tree A, the value of a target node B, and an integer C, return an array of the values of all nodes that have a distance C from the target node. You can return the answer in any order. ",
        "link": "nodes-at-distance-k"
    },
    {
        "title": "Maximum Edge Removal",
        "topic": "Tree Data Structure",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an undirected tree with an <strong>even</strong> number of nodes. Consider each connection between a parent and child node to be an edge.</p><p></p><p></p>\n<p>You need to remove <strong>maximum</strong> number of these edges, such that the disconnected subtrees that remain each have an <strong>even</strong> number of nodes.</p>\n<p>Return the <strong>maximum</strong> number of edges you can remove.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= A &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>1 &lt;= B[i][0], B[i][1] &lt;= A</p>\n<p>Integer A will be even.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer A denoting the number of nodes in the tree.</p><p></p><p></p>\n<p>Second argument is a 2D array B of size (A-1) * 2, denoting the edge between nodes B[i][0] and B[i][1].</p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer, denoting the maximum number of edges you can remove.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = 6\n B = [\n       [1, 2]\n       [1, 3]\n       [1, 4]\n       [3, 5]\n       [4, 6]\n     ]</pre>\n<p>Input 2:</p>\n<pre> A = 2\n B = [\n       [1, 2]\n     ]</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 2</pre>\n<p>Output 2:</p>\n<pre> 0</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre>      1\n    / | \\\n   2  3  4\n      |   \\\n      5    6\n Maximum number of edges we can remove is 2, i.e (1, 3) and (1, 4)</pre>\n<p>Explanation 2:</p>\n<pre> We can't remove any edges.</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an undirected tree with an even number of nodes.  Consider each connection between a parent and child node to be an edge. You need to remove maximum number of these edges, such that the disconnected subtrees that remain each have an even number of nodes. Return the maximum number of edges you can remove. ",
        "link": "maximum-edge-removal"
    },
    {
        "title": "Merge two Binary Tree",
        "topic": "Tree Data Structure",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given two Binary Trees <strong>A</strong> and <strong>B</strong>, you need to <strong>merge</strong> them in a single binary tree.</p><p></p>\n<p>The merge rule is that if two nodes overlap, then sum of node values is the new value of the merged node.</p>\n<p>Otherwise, the non-null node will be used as the node of new tree.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= Number of Nodes in A , B &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an pointer to the root of binary tree <strong>A</strong>.</p><p></p>\n<p>Second argument is an pointer to the root of binary tree <strong>B</strong>.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a pointer to the root of new binary tree.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A =   2<br/>\n      / \\<br/>\n     1   4<br/>\n    /<br/>\n   5</pre></div></p>\n<p>B =   3\n      / \\\n      6  1\n      \\   \\\n       2   7\n\n<p>Input 2:</p>\n<pre> A =   12<br/>\n      / \\<br/>\n     11  14            </pre></p>\n<p>B =   3\n      / \\\n      6  1\n\n<p></p></p></div>",
        "statement": "Given two Binary Trees A and B, you need to merge them in a single binary tree. The merge rule is that if two nodes overlap, then sum of node values is the new value of the merged node. Otherwise, the non-null node will be used as the node of new tree. ",
        "link": "merge-two-binary-tree"
    },
    {
        "title": "Symmetric Binary Tree",
        "topic": "Tree Data Structure",
        "companies": ["Amazon", "Zomato"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= number of nodes &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is the root node of the binary tree.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return 0 / 1 ( 0 for false, 1 for true ).</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre>    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3</pre>\n<p>Input 2:</p>\n<pre>    1\n   / \\\n  2   2\n   \\   \\\n   3    3</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 1</pre>\n<p>Output 2:</p>\n<pre> 0</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> The above binary tree is symmetric. </pre>\n<p>Explanation 2:</p>\n<pre>The above binary tree is not symmetric.</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center). ",
        "link": "symmetric-binary-tree"
    },
    {
        "title": "Vertical Order traversal of Binary Tree",
        "topic": "Tree Data Structure",
        "companies": ["Amazon", "Grab", "infoworks", "Microsoft"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree <strong>A</strong> consisting of <strong>N</strong> nodes, return a 2-D array denoting the vertical order traversal of <strong>A</strong>.</p><p></p><p></p><p></p><p></p>\n<p>Go through the example and image for more details.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>If 2 or more Tree Nodes shares the same vertical level then the one with earlier occurence in the level-order traversal of tree comes first in the output.</li>\n<li>Row 1 of the output array will be the nodes on leftmost vertical line similarly last row of the output array will be the nodes on the rightmost vertical line.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>0 &lt;= N &lt;= 10<sup>4</sup></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an pointer to root of the binary tree <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a 2D array denoting the vertical order traversal of <strong>A</strong>.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre>      6\n    /   \\\n   3     7\n  / \\     \\\n 2   5     9\n</pre>\n<p>Input 2:</p>\n<pre>           1\n         /   \\\n        2     3\n       / \\\n      4   5\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> [\n    [2],\n    [3],\n    [6, 5],\n    [7],\n    [9]\n ]\n</pre>\n<p>Output 2:</p>\n<pre> [\n    [4],\n    [2],\n    [1, 5],\n    [3]\n ]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> <img height=\"50%\" src=\"https://imgur.com/FIsIzTK.jpeg\" width=\"50%\"/>\n Nodes on Vertical Line 1: 2\n Nodes on Vertical Line 2: 3\n Nodes on Vertical Line 3: 6, 5\n    As 6 and 5 are on the same vertical level but as 6 comes first in the level-order traversal of the tree so we will output 6 before 5.\n Nodes on Vertical Line 4: 7\n Nodes on Vertical Line 5: 9\n</pre>\n<p>Explanation 2:</p>\n<pre> Nodes on Vertical Line 1: 4\n Nodes on Vertical Line 2: 2\n Nodes on Vertical Line 3: 1, 5\n Nodes on Vertical Line 4: 3\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary tree A consisting of N nodes, return a 2-D array denoting the vertical order traversal of A. Go through the example and image for more details. NOTE:If 2 or more Tree Nodes shares the same vertical level then the one with earlier occurence in the level-order traversal of tree comes first in the output. Row 1 of the output array will be the nodes on leftmost vertical line similarly last row of the output array will be the nodes on the rightmost vertical line. ",
        "link": "vertical-order-traversal-of-binary-tree"
    },
    {
        "title": "Diagonal Traversal  ",
        "topic": "Tree Data Structure",
        "companies": ["Amazon", "DE Shaw"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Consider lines of slope -1 passing between nodes.</p><p></p><p></p><p></p><p></p><p></p>\n<p>Given a Binary Tree <strong>A</strong> containing <strong>N</strong> nodes, return all diagonal elements in a binary tree belonging to same line.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>See Sample Explanation for better understanding.</li>\n<li>Order does matter in the output.</li>\n<li>To get the same order as in the output traverse the tree same as we do in pre-order traversal.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 0 &lt;= N &lt;= 10<sup>5</sup> </p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only Argument represents the root of binary tree <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a 1D array denoting the diagonal traversal of the tree.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre>            1\n          /   \\\n         4      2\n        / \\      \\\n       8   5      3\n          / \\    /\n         9   7  6\n</pre>\n<p>Input 2:</p>\n<pre>             11\n          /     \\\n         20      12\n        / \\       \\\n       1   15      13\n          /  \\     /\n         2    17  16\n          \\   /\n          22 34\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> [1, 2, 3, 4, 5, 7, 6, 8, 9]\n</pre>\n<p>Output 2:</p>\n<pre> [11, 12, 13, 20, 15, 17, 16, 1, 2, 22, 34]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> <img height=\"30%\" src=\"https://i.imgur.com/TssjQtS.jpeg\" width=\"40%\"/>\n 1) Diagonal 1 contains [1, 2, 3]\n 2) Diagonal 2 contains [4, 5, 7, 6]\n 3) Diagonal 3 contains [8, 9]</pre></div></p>\n<p><strong>NOTE:</strong>\nThe order in the output matters like for Example:\n6 and 7 belong to same diagonal i.e diagonal 2 but as 7 comes before 6 in pre-order traversal so 7 will be added to answer array first.</p>\n<p>So concantenate all the array as return it as a single one.\n Final output: [1, 2, 3, 4, 5, 7, 6, 8, 9]\n\n<p>Explanation 2:</p>\n<pre> <img height=\"30%\" src=\"https://i.imgur.com/bTL4IOH.jpeg\" width=\"40%\"/>\n 1) Diagonal 1 contains [11, 12, 13]\n 2) Diagonal 2 contains [20, 15, 17, 16]\n 3) Diagonal 2 contains [1, 2, 22, 34]</pre></p>\n<p>So concantenate all the array as return it as a single one.\n Final output: [11, 12, 13, 20, 15, 17, 16, 1, 2, 22, 34]</p>\n<p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></p></div>",
        "statement": "Consider lines of slope -1 passing between nodes. Given a Binary Tree A containing N nodes, return all diagonal elements in a binary tree belonging to same line. NOTE:See Sample Explanation for better understanding. Order does matter in the output. To get the same order as in the output traverse the tree same as we do in pre-order traversal. ",
        "link": "diagonal-traversal--"
    },
    {
        "title": "Inorder Traversal",
        "topic": "Tree Data Structure",
        "companies": ["Amazon", "Microsoft", "grofers"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree, return the inorder traversal of its nodes values.</p><p></p><p></p><p></p>\n<p><strong>NOTE:</strong> Using recursion is not allowed.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= number of nodes &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is root node of the binary tree, A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer array denoting the inorder traversal of the given binary tree.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre>   1\n    \\\n     2\n    /\n   3</pre>\n<p>Input 2:</p>\n<pre>   1\n  / \\\n 6   2\n    /\n   3</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> [1, 3, 2]</pre>\n<p>Output 2:</p>\n<pre> [6, 1, 3, 2]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> The Inorder Traversal of the given tree is [1, 3, 2].</pre>\n<p>Explanation 2:</p>\n<pre> The Inorder Traversal of the given tree is [6, 1, 3, 2].</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary tree, return the inorder traversal of its nodes values. NOTE: Using recursion is not allowed. ",
        "link": "inorder-traversal"
    },
    {
        "title": "Postorder Traversal",
        "topic": "Tree Data Structure",
        "companies": ["Amazon", "Microsoft", "juspay"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree, return the Postorder traversal of its nodes values.</p><p></p><p></p><p></p><p></p>\n<p><strong>NOTE:</strong> Using recursion is not allowed.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= number of nodes &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is root node of the binary tree, A.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer array denoting the Postorder traversal of the given binary tree.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre>   1\n    \\\n     2\n    /\n   3</pre>\n<p>Input 2:</p>\n<pre>   1\n  / \\\n 6   2\n    /\n   3</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> [3, 2, 1]</pre>\n<p>Output 2:</p>\n<pre> [6, 3, 2, 1]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> The Preoder Traversal of the given tree is [3, 2, 1].</pre>\n<p>Explanation 2:</p>\n<pre> The Preoder Traversal of the given tree is [6, 3, 2, 1].</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary tree, return the Postorder traversal of its nodes values. NOTE: Using recursion is not allowed. ",
        "link": "postorder-traversal"
    },
    {
        "title": "Right view of Binary tree",
        "topic": "Tree Data Structure",
        "companies": ["DE Shaw", "ThoughtWorks"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree <strong>A</strong> of integers. Return an array of integers representing the <strong>right view</strong> of the Binary tree.</p><p></p>\n<p><strong>Right view of a Binary Tree:</strong> is a set of nodes visible when the tree is visited from Right side.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= Number of nodes in binary tree &lt;= 10<sup>5</sup></p><p></p>\n<p>0 &lt;= node values &lt;= 10<sup>9</sup> </p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an pointer to the root of binary tree <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer array denoting the right view of the binary tree <strong>A</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre>        1\n      /   \\\n     2    3\n    / \\  / \\\n   4   5 6  7\n  /\n 8 \n</pre>\n<p>Input 2:</p>\n<pre>    1\n   /  \\\n  2    3\n   \\\n    4\n     \\\n      5\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> [1, 3, 7, 8]\n</pre>\n<p>Output 2:</p>\n<pre> [1, 3, 4, 5]\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary tree A of integers.  Return an array of integers representing the right view of the Binary tree. Right view of a Binary Tree: is a set of nodes visible when the tree is visited from Right side. ",
        "link": "right-view-of-binary-tree"
    },
    {
        "title": "Cousins in Binary Tree",
        "topic": "Tree Data Structure",
        "companies": ["Amazon", "DE Shaw"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a Binary Tree <strong>A</strong> consisting of <strong>N</strong> nodes.</p><p></p><p></p><p></p>\n<p>You need to find all the cousins of node <strong>B</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>Siblings should not be considered as cousins.</li>\n<li>Try to do it in single traversal.</li>\n<li>You can assume that Node <strong>B</strong> is there in the tree <strong>A</strong>.</li>\n<li>Order doesn't matter in the output.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= N &lt;= 10<sup>5</sup> </p><p></p><p></p><p></p>\n<p> 1 &lt;= B &lt;= N</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First Argument represents the root of binary tree <strong>A</strong>.</p><p></p><p></p><p></p>\n<p>Second Argument is an integer <strong>B</strong> denoting the node number.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer array denoting the cousins of node <strong>B</strong>.</p><p></p><p></p><p></p>\n<p><strong>NOTE:</strong> Order doesn't matter.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A =<br/>\n           1\n         /   \\\n        2     3\n       / \\   / \\\n      4   5 6   7 </pre></div></p>\n<p>B = 5\n\n<p>Input 2:</p>\n<pre> A = \n            1\n          /   \\\n         2     3\n        / \\ .   \\\n       4   5 .   6</pre></p>\n<p>B = 1<br/>\n\n<p></p>\n<p></p>\n<p></p></p></div>",
        "statement": "Given a Binary Tree A consisting of N nodes. You need to find all the cousins of node B. NOTE:Siblings should not be considered as cousins. Try to do it in single traversal. You can assume that Node B is there in the tree A. Order doesn't matter in the output. ",
        "link": "cousins-in-binary-tree"
    },
    {
        "title": "Reverse Level Order",
        "topic": "Tree Data Structure",
        "companies": ["DE Shaw"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree, return the <strong>reverse level order traversal</strong> of its nodes values. (i.e, from left to right and from last level to starting level).</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= number of nodes &lt;= 5 * 10<sup>5</sup></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= node value &lt;= 10<sup>5</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is a pointer to the root node of the Binary Tree, A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer array denoting the reverse level order traversal from left to right.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n<p>Input 2:</p>\n<pre>   1\n  / \\\n 6   2\n    /\n   3</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> [15, 7, 9, 20, 3] </pre>\n<p>Output 2:</p>\n<pre> [3, 6, 2, 1]</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> Nodes as level 3 : [15, 7]\n Nodes at level 2: [9, 20]\n Nodes at level 1: [3]\n Reverse level order traversal will be: [15, 7, 9, 20, 3]</pre>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p><p></p><p></p>\n<pre> Nodes as level 3 : [3]\n Nodes at level 2: [6, 2]\n Nodes at level 1: [1]\n Reverse level order traversal will be: [3, 6, 2, 1]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary tree, return the reverse level order traversal of its nodes values.  (i. e, from left to right and from last level to starting level). ",
        "link": "reverse-level-order"
    },
    {
        "title": "Burn a Tree",
        "topic": "Tree Data Structure",
        "companies": ["Hippocabs", "Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree denoted by root node <strong>A</strong> and a leaf node <strong>B</strong> from this tree.</p><p></p><p></p>\n<p> It is known that all nodes connected to a given node <strong>(left child, right child and parent)</strong> get burned in 1 second. Then all the nodes which are connected through one intermediate get burned in 2 seconds, and so on.</p>\n<p>You need to find the <strong>minimum time</strong> required to burn the complete binary tree.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= number of nodes &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>1 &lt;= node value, B &lt;= 10<sup>5</sup></p>\n<p>node value will be distinct</p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is a root node of the binary tree, A.</p><p></p><p></p>\n<p>Second argument is an integer B denoting the node value of leaf node.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the minimum time required to burn the complete binary tree.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> Tree :      1 \n            / \\ \n           2   3 \n          /   / \\\n         4   5   6\n B = 4</pre>\n<p>Input 2:</p>\n<pre> Tree :      1\n            / \\\n           2   3\n          /     \\\n         4       5 \n B = 5 </pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 4</pre>\n<p>Output 2:</p>\n<pre> 4</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> After 1 sec: Node 4 and 2 will be burnt. \n After 2 sec: Node 4, 2, 1 will be burnt.\n After 3 sec: Node 4, 2, 1, 3 will be burnt.\n After 4 sec: Node 4, 2, 1, 3, 5, 6(whole tree) will be burnt.\n </pre>\n<p>Explanation 2:</p>\n<pre> After 1 sec: Node 5 and 3 will be burnt. \n After 2 sec: Node 5, 3, 1 will be burnt.\n After 3 sec: Node 5, 3, 1, 2 will be burnt.\n After 4 sec: Node 5, 3, 1, 2, 4(whole tree) will be burnt.\n </pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary tree denoted by root node A and a leaf node B from this tree.  It is known that all nodes connected to a given node (left child, right child and parent) get burned in 1 second.  Then all the nodes which are connected through one intermediate get burned in 2 seconds, and so on. You need to find the minimum time required to burn the complete binary tree. ",
        "link": "burn-a-tree"
    },
    {
        "title": "Invert the Binary Tree",
        "topic": "Tree Data Structure",
        "companies": ["Google"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree <strong>A</strong>, invert the binary tree and return it. </p><p></p><p></p>\n<p> Inverting refers to making left child as the right child and vice versa.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= size of tree &lt;= 100000</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is the head of the tree A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the head of the inverted tree.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> \n     1\n   /   \\\n  2     3\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> \n     1\n   /   \\\n  2     3\n / \\   / \\\n4   5 6   7\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> \n     1\n   /   \\\n  3     2\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> \n     1\n   /   \\\n  3     2\n / \\   / \\\n7   6 5   4\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>Tree has been inverted.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre>Tree has been inverted.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary tree A, invert the binary tree and return it.   Inverting refers to making left child as the right child and vice versa. ",
        "link": "invert-the-binary-tree"
    },
    {
        "title": "Vertical Sum of a Binary Tree",
        "topic": "Tree Data Structure",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given the root of a binary tree <strong>A</strong>.<br/>\nYou have to find the vertical sum of the tree.<br/>\nA vertical sum denotes an array of sum of the different verticals of a binary tree,<br/>\nwhere the leftmost vertical sum is the first element of the array and rightmost vertical is the last.<br/></p></div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= Number of nodes in the binary tree &lt;= 10<sup>5</sup><br/>\n1 &lt;= A<sub>i</sub> &lt;= 10<sup>3</sup></div><br><br><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the root of a binary tree A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an array denoting the vertical sum of the binary tree.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A =     1\n      /   \\\n     2     3\n    / \\   / \\\n   4   5 6   7\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A =     1\n       /\n      2\n     /\n    3\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>[4, 2, 12, 3, 7]\n</code></pre>\n<p>Output 2:</p>\n<pre><code>[3, 2, 1]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>The element 4 is present in the leftmost vertical. \nThe middle vertical consists of 3 elements 1, 5, 6.\nThe resultant array is [4, 2, 12, 3, 7].</code></pre>\n<p>Explanation 2:</p>\n<pre><code>The leftmost vertical is the element 3. The next verticals are 2 and 1.\nHence, the resultant array is [3, 2, 1].\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></br></br></p>\n\n</div>",
        "statement": "You are given the root of a binary tree A. You have to find the vertical sum of the tree. A vertical sum denotes an array of sum of the different verticals of a binary tree,where the leftmost vertical sum is the first element of the array and rightmost vertical is the last. ",
        "link": "vertical-sum-of-a-binary-tree"
    },
    {
        "title": "Construct BST from Preorder",
        "topic": "Tree Data Structure",
        "companies": ["clevertap"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> with <strong>distinct</strong> elements, which represents the preorder traversal of a binary search tree,<br/> \nconstruct the tree and return its root.</p>\n<p>A binary search tree is a binary tree where for every node, any descendant of Node.left has a value strictly less than Node.val, and any descendant of Node.right has a value strictly greater than Node.val.</p></div></p>\n<p>A preorder traversal of a binary tree displays the value of the node first, then traverses Node.left, then traverses Node.right.</p></div>",
        "statement": "Given an integer array A with distinct elements, which represents the preorder traversal of a binary search tree, construct the tree and return its root. A binary search tree is a binary tree where for every node, any descendant of Node. left has a value strictly less than Node. val, and any descendant of Node. right has a value strictly greater than Node. val. ",
        "link": "construct-bst-from-preorder"
    },
    {
        "title": "Covered / Uncovered Nodes",
        "topic": "Tree Data Structure",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given the root of a binary tree <strong>A</strong>, you need to return the absolute difference between sum of all covered elements and the sum of all uncovered elements.</p>\n<p>In a binary tree, a node is called Uncovered if it appears either on left boundary or right boundary. Rest of the nodes are called covered.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= Number of nodes in the binary tree &lt;= 10<sup>5</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the root of the binary tree A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting the absolute difference of the sum of covered and uncovered nodes.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>    2\n   / \\\n  1   4\n /   / \\\n6  10   5\n</code></pre>\n<p>Input 2:</p>\n<pre><code>      1\n     /\n    2\n   /\n  3\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>8\n</code></pre>\n<p>Output 2:</p>\n<pre><code>6\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>The node with value 10 is the only covered node. All other nodes are uncovered.\nTherefore, the absolute difference is |(10) - (2 + 1 + 4 + 6 + 5)| = 8</code></pre>\n<p>Explanation 2:</p>\n<pre><code>All the given nodes are uncovered. Hence, the answer is sum of given nodes - 6.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "You are given the root of a binary tree A, you need to return the absolute difference between sum of all covered elements and the sum of all uncovered elements. In a binary tree, a node is called Uncovered if it appears either on left boundary or right boundary.  Rest of the nodes are called covered. ",
        "link": "covered-/-uncovered-nodes"
    },
    {
        "title": "Last Node in a Complete Binary Tree",
        "topic": "Tree Data Structure",
        "companies": ["Flipkart"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given the root of a complete binary tree <strong>A</strong>.<br/>\nYou have to return the value of the rightmost node in the last level of the binary tree.</p>\n<p>Try to find a solution with a better time complexity than O(N).</p></div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= Number of nodes in the binary tree &lt;= 10<sup>5</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the root of a binary tree A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting the value of the rightmost node in the last level of the binary tree.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = \n    1\n   /\n  2\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = \n    1\n   / \\\n  2   3\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>2\n</code></pre>\n<p>Output 2:</p>\n<pre><code>3\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>There is only a single node in the last level of the binary tree.\nTherefore, the answer is 2.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>There a two nodes in the last level of the tree.\nThe rightmost nodes is 3.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "You are given the root of a complete binary tree A. You have to return the value of the rightmost node in the last level of the binary tree. Try to find a solution with a better time complexity than O(N). ",
        "link": "last-node-in-a-complete-binary-tree"
    },
    {
        "title": "Consecutive Parent - Child",
        "topic": "Tree Data Structure",
        "companies": ["Unravel Data"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given the root of a binary tree <strong>A</strong>.\nYou have to find out the number of parent - child relationship whose values are consecutive numbers.\n</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= Number of nodes in the tree &lt;= 10<sup>5</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the root of the binary tree A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting the number of consecutive parent - child relationships.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A =  2\n    / \\\n   1   3\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A =  5\n    / \\\n   1   3\n      / \\\n     1   4\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>2\n</code></pre>\n<p>Output 2:</p>\n<pre><code>1\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>(2, 1) and (2, 3) are the consecutive parent - child relationships.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>(3, 4) is the only consecutive parent - child relationship.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "You are given the root of a binary tree A. You have to find out the number of parent - child relationship whose values are consecutive numbers. ",
        "link": "consecutive-parent---child"
    },
    {
        "title": "Longest Common Subsequence",
        "topic": "Dynamic Programming",
        "companies": ["ajio"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given two strings <strong>A</strong> and <strong>B</strong>. Find the longest common <strong>sequence</strong> ( A sequence which does not need to be contiguous), which is common in both the strings.</p><p></p>\n<p>You need to return the length of such longest common subsequence.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A|, |B| &lt;= 1005</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an string <strong>A</strong>.</p><p></p>\n<p>Second argument is an string <strong>B</strong>.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the length of such longest common subsequence between string <strong>A</strong> and string <strong>B</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = \"abbcdgf\"\n B = \"bbadcgf\"\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 5\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> The longest common subsequence is \"bbcgf\", which has a length of 5\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given two strings A and B.  Find the longest common sequence ( A sequence which does not need to be contiguous), which is common in both the strings. You need to return the length of such longest common subsequence. ",
        "link": "longest-common-subsequence"
    },
    {
        "title": "Longest Palindromic Subsequence",
        "topic": "Dynamic Programming",
        "companies": ["LinkedIn", "BYJU'S"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong>, find the common <strong>palindromic sequence</strong> ( A sequence which does not need to be contiguous and is a pallindrome), which is common in itself.</p><p></p>\n<p>You need to return the length of <strong>longest palindromic subsequence</strong> in <strong>A</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<p></p><li>Your code will be run on multiple test cases (&lt;=10). Try to come up with an optimised solution.</li></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= |A| &lt;= 1005</p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a integer denoting the length of <strong>longest palindromic subsequence</strong> in <strong>A</strong>.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = \"bebeeed\"\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 4\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> The longest common pallindromic subsequence is \"eeee\", which has a length of 4\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A, find the common palindromic sequence ( A sequence which does not need to be contiguous and is a pallindrome), which is common in itself. You need to return the length of longest palindromic subsequence in A. NOTE:Your code will be run on multiple test cases (<=10).  Try to come up with an optimised solution. ",
        "link": "longest-palindromic-subsequence"
    },
    {
        "title": "Repeating Sub-Sequence",
        "topic": "Dynamic Programming",
        "companies": ["Google"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a string <strong>A</strong>, find length of the longest repeating sub-sequence such that the two subsequence don\u2019t have same string character at same position,</p>\n<p>i.e., any i\u2019th character in the two subsequences shouldn\u2019t have the same index in the original string.</p>\n<p><strong>NOTE:</strong> Sub-sequence length should be greater than or equal to 2.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= |A| &lt;= 100</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first and the only argument of input contains a string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer, 0 or 1:</p>\n<pre>\n    =&gt; 0 : False\n    =&gt; 1 : True\n</pre></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = \"abab\"\n</pre>\n<p>Input 2:</p>\n<pre>\n A = \"abba\"\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n 1\n</pre>\n<p>Output 2:</p>\n<pre>\n 0\n</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n \"ab\" is repeated.\n</pre>\n<p>Explanation 2:</p>\n<pre>\n There is no repeating subsequence.\n</pre></div><br/><br/></p>\n\n</div>",
        "statement": "Given a string A, find length of the longest repeating sub-sequence such that the two subsequence don\u2019t have same string character at same position,i. e. , any i\u2019th character in the two subsequences shouldn\u2019t have the same index in the original string. NOTE: Sub-sequence length should be greater than or equal to 2. ",
        "link": "repeating-sub-sequence"
    },
    {
        "title": "Length of Longest Subsequence",
        "topic": "Dynamic Programming",
        "companies": ["Microsoft", "Directi", "Flipkart", "infoworks"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an 1D integer array <strong>A</strong> of length <strong>N</strong>, find the length of longest subsequence which is first increasing then decreasing.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>0 &lt;= N &lt;= 3000</p><p></p>\n<p> -10<sup>7</sup> &lt;= A[i] &lt;= 10<sup>7</sup></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first and the only argument contains an integer array <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer representing the answer as described in the problem statement.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [1, 2, 1]\n</pre>\n<p>Input 2:</p>\n<pre> A = [1, 11, 2, 10, 4, 5, 2, 1]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 3\n</pre>\n<p>Output 2:</p>\n<pre> 6\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> [1, 2, 1] is the longest subsequence.\n</pre>\n<p>Explanation 2:</p>\n<pre> [1 2 10 4 2 1] is the longest subsequence.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an 1D integer array A of length N, find the length of longest subsequence which is first increasing then decreasing. ",
        "link": "length-of-longest-subsequence"
    },
    {
        "title": "Smallest sequence with given Primes",
        "topic": "Dynamic Programming",
        "companies": ["Booking.com", "Microsoft", "Directi"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given three prime numbers <strong>A, B</strong> and <strong>C</strong> and an integer <strong>D</strong>.</p><p></p><p></p><p></p>\n<p>You need to find the first(smallest) <strong>D</strong> integers which only have <strong>A, B, C</strong> or a combination of them as their prime factors.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer <strong>A</strong>.</p><p></p><p></p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p>Third argument is an integer <strong>C</strong>.</p>\n<p>Fourth argument is an integer <strong>D</strong>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an array of size <code>D</code> denoting the first smallest <strong>D</strong> integers which only have <strong>A, B, C</strong> or a combination of them as their prime factors.</p><p></p><p></p><p></p>\n<p><strong>NOTE:</strong> You need to return the array sorted in ascending order.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = 2\n B = 3\n C = 5\n D = 5\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> [2, 3, 4, 5, 6]\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> 4 = A * A i.e ( 2 * 2 ) \n 6 = A * B i.e ( 2 * 3 )\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given three prime numbers A, B and C and an integer D. You need to find the first(smallest) D integers which only have A, B, C or a combination of them as their prime factors. ",
        "link": "smallest-sequence-with-given-primes"
    },
    {
        "title": "Largest area of rectangle with permutations",
        "topic": "Dynamic Programming",
        "companies": ["Directi"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary grid <strong>A</strong> of size <code>N x M</code> consisting of 0's and 1's, find the <strong>area of the largest rectangle</strong> inside the grid such that all the cells inside the chosen rectangle should have 1 in them.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>You are allowed to permutate the columns matrix i.e. you can arrange each of the column in any order in the final grid.</p>\n<p>Please follow the sample input and explanation for more clarity.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an 2D binary array <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the <strong>area of the largest rectangle</strong> inside the grid such that all the cells inside the chosen rectangle should have 1 in them.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [  [1, 0, 1]\n        [0, 1 ,0]\n        [1, 0, 0]\n    ]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 2\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre>    1 0 1\n    0 1 0\n    1 0 0</pre></div></p>\n<p>At present we can see that max rectangle satisfying the criteria mentioned in the problem\n is of 1 * 1 = 1 area i.e either of the 4 cells which contain 1 in it.</p>\n<p>Now since we are allowed to permutate the columns of the given matrix, we can take column 1\n and column 3 and make them neighbours. One of the possible configuration of the grid can be:\n 1 1 0\n 0 0 1\n 1 0 0</p>\n<p>Now In this grid, first column is column 1, second column is column 3 and third column\n is column 2 from the original given grid.</p>\n<p>Now, we can see that if we calculate the max area rectangle, we get max area as 1 * 2 = 2\n which is bigger than the earlier case. Hence 2 will be the answer in this case.\n\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></p></div>",
        "statement": "Given a binary grid A of size N x M consisting of 0's and 1's, find the area of the largest rectangle inside the grid such that all the cells inside the chosen rectangle should have 1 in them. You are allowed to permutate the columns matrix i. e.  you can arrange each of the column in any order in the final grid. Please follow the sample input and explanation for more clarity. ",
        "link": "largest-area-of-rectangle-with-permutations"
    },
    {
        "title": "Tiling With Dominoes",
        "topic": "Dynamic Programming",
        "companies": ["Directi", "Uber Technologies Inc"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer <strong>A</strong> you have to find the <strong>number of ways</strong> to fill a <code>3 x A</code> board with <code>2 x 1</code> dominoes.</p><p></p><p></p><p></p><p></p><p></p>\n<p>Return the answer modulo <strong>10<sup>9</sup> + 7 </strong>.</p>\n<p><strong>NOTE:</strong></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><li>See the sample explanation for better understanding.</li><p></p><p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the <strong>number of ways</strong> to fill a <code>3 x A</code> board with <code>2 x 1</code> dominoes with modulo <strong>10<sup>9</sup> + 7</strong>.</p>\n</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> 2\n</pre>\n<p>Input 2:</p>\n<pre> 1\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> 3\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> Following are all the 3 possible ways to fill up a <strong>3 x 2</strong> board.\n <img src=\"https://imgur.com/sXSWpJx.jpeg\"/>\n</pre>\n<p>Explanation 2:</p>\n<pre> Not a even a single way exists to completely fill the grid of size <strong>3 x 1</strong>.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer A you have to find the number of ways to fill a 3 x A board with 2 x 1 dominoes. Return the answer modulo 109 + 7 . NOTE:See the sample explanation for better understanding. ",
        "link": "tiling-with-dominoes"
    },
    {
        "title": "Paint House!",
        "topic": "Dynamic Programming",
        "companies": ["LinkedIn"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>There are a row of <strong>N</strong> houses, each house can be painted with one of the three colors: <strong>red, blue or green.</strong></p>\n<p>The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.</p>\n<p>The cost of painting each house with a certain color is represented by a <code>N x 3</code> cost matrix <strong>A</strong>.</p>\n<p>For example, <strong>A[0][0]</strong> is the cost of painting house 0 with color red; <strong>A[1][2]</strong> is the cost of painting house 1 with color green, and so on.</p>\n<p>Find the <strong>minimum total cost</strong> to paint all houses.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p>\n<p>1 &lt;= A[i][j] &lt;= 10<sup>3</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an 2D integer matrix <strong>A</strong> of size <code>N x 3</code> denoting the cost to paint the houses.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the <strong>minimum total cost</strong> to paint all houses.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = [  [1, 2, 3]\n        [10, 11, 12]\n     ]\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n 12\n</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n Paint house 1 with red and house 2 with green i.e A[0][0] + A[1][1] = 1 + 11 = 12\n</pre></div><br/><br/></p>\n\n</div>",
        "statement": "There are a row of N houses, each house can be painted with one of the three colors: red, blue or green. The cost of painting each house with a certain color is different.  You have to paint all the houses such that no two adjacent houses have the same color. The cost of painting each house with a certain color is represented by a N x 3 cost matrix A. For example, A[0][0] is the cost of painting house 0 with color red; A[1][2] is the cost of painting house 1 with color green, and so on. Find the minimum total cost to paint all houses. ",
        "link": "paint-house!"
    },
    {
        "title": "Ways to Decode",
        "topic": "Dynamic Programming",
        "companies": ["Facebook", "Amazon", "NoBroker.com", "OLX Group"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>A message containing letters from A-Z is being encoded to numbers using the following mapping:</p><p></p>\n<pre> 'A' -&gt; 1\n 'B' -&gt; 2\n ...\n 'Z' -&gt; 26\n</pre>\n<p>Given an encoded message <strong>A</strong> containing digits, determine the total number of ways to decode it modulo <strong>10<sup>9</sup> + 7</strong>.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= |A| &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first and the only argument is a string <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the total number of ways to decode it modulo <strong>10<sup>9</sup> + 7</strong>.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = \"8\"\n</pre>\n<p>Input 2:</p>\n<pre> A = \"12\"\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 2\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> Given encoded message \"8\", it could be decoded as only \"H\" (8).\n The number of ways decoding \"8\" is 1.\n</pre>\n<p>Explanation 2:</p>\n<pre> Given encoded message \"12\", it could be decoded as \"AB\" (1, 2) or \"L\" (12).\n The number of ways decoding \"12\" is 2.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "A message containing letters from A-Z is being encoded to numbers using the following mapping: 'A' -> 1 'B' -> 2 . . .  'Z' -> 26Given an encoded message A containing digits, determine the total number of ways to decode it modulo 109 + 7. ",
        "link": "ways-to-decode"
    },
    {
        "title": "Tushar's Birthday Bombs",
        "topic": "Dynamic Programming",
        "companies": [],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>It\u2019s Tushar\u2019s birthday today and he has <strong>N</strong> friends.</p><p></p><p></p>\n<p>Friends are numbered <strong>[0, 1, 2, ...., N-1]</strong> and <strong>i<sup>th</sup></strong> friend have a positive strength <strong>B[i]</strong>.</p>\n<p>Today being his birthday, his friends have planned to give him birthday bombs (kicks).</p>\n<p>Tushar's friends know Tushar's pain bearing limit and would hit accordingly.</p>\n<p>If Tushar\u2019s resistance is denoted by <strong>A (&gt;=0)</strong> then find the lexicographically smallest order of friends to kick Tushar so that the cumulative kick strength (sum of the strengths of friends who kicks) doesn\u2019t exceed his resistance capacity and total no. of kicks hit are maximum.</p>\n<p>Also note that each friend can kick unlimited number of times (If a friend hits x times, his strength will be counted x times)</p>\n<p>Return the lexicographically smallest array of maximum length where the ith index represents the index of the friend who will hit.</p>\n<p><strong>NOTE:</strong></p>\n<p></p>\n<p></p><li> [a1, a2, ...., am] is lexicographically smaller than [b1, b2, .., bm]  if a1 &lt; b1 or (a1 = b1 and a2 &lt; b2) ... .</li>\n<li> Input cases are such that the length of the answer does not exceed 100000.</li></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 100</p><p></p><p></p>\n<p>1 &lt;= A &lt;= 15 * 10<sup>6</sup></p>\n<p>\n</p>\n<p></p><p>1 &lt;= B[i] &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument contains an integer, A of length N.</p><p></p>\n<p>The second argument contains an array of integers B.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an array of integer, as described in the problem statement.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = 12\n B = [3, 4]\n</pre>\n<p>Input 2:</p>\n<pre> A = 11\n B = [6, 8, 5, 4, 7]\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> [0, 0, 0, 0]\n</pre>\n<p>Output 2:</p>\n<pre> [0, 2]\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "It\u2019s Tushar\u2019s birthday today and he has N friends. Friends are numbered [0, 1, 2, . . . . , N-1] and ith friend have a positive strength B[i]. Today being his birthday, his friends have planned to give him birthday bombs (kicks). Tushar's friends know Tushar's pain bearing limit and would hit accordingly. If Tushar\u2019s resistance is denoted by A (>=0) then find the lexicographically smallest order of friends to kick Tushar so that the cumulative kick strength (sum of the strengths of friends who kicks) doesn\u2019t exceed his resistance capacity and total no.  of kicks hit are maximum. Also note that each friend can kick unlimited number of times (If a friend hits x times, his strength will be counted x times)Return the lexicographically smallest array of maximum length where the ith index represents the index of the friend who will hit. NOTE: [a1, a2, . . . . , am] is lexicographically smaller than [b1, b2, . . , bm]  if a1 < b1 or (a1 = b1 and a2 < b2) . . .  .  Input cases are such that the length of the answer does not exceed 100000. ",
        "link": "tushar's-birthday-bombs"
    },
    {
        "title": "Best Time to Buy and Sell Stock atmost B times ",
        "topic": "Dynamic Programming",
        "companies": ["Delhivery", "deshaw", "Goldman Sachs"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array of integers <strong>A</strong> of size <strong>N</strong> in which i<sup>th</sup> element is the price of the stock on day <strong>i</strong>.</p><p></p><p></p>\n<p>You can complete atmost <strong>B</strong> transactions.</p>\n<p>Find the <strong>maximum profit</strong> you can achieve.</p>\n<p><strong>NOTE:</strong> You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 500</p><p></p>\n<p>0 &lt;= A[i] &lt;= 10<sup>6</sup></p>\n<p>0 &lt;= B &lt;= 10<sup>9</sup></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The First argument given is the integer array <strong>A</strong>.</p><p></p>\n<p>The Second argument is integer <strong>B</strong>.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the <strong>maximum profit</strong> you can achieve by doing atmost <strong>B</strong> transactions.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [2, 4, 1]\n B = 2\n</pre>\n<p>Input 2:</p>\n<pre> A = [3, 2, 6, 5, 0, 3]\n B = 2\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 2\n</pre>\n<p>Output 2:</p>\n<pre> 7\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> Buy on day 1 (price = 2) and sell on day 2 (price = 4), \n Profit = 4 - 2 = 2\n</pre>\n<p>Explanation 2:</p>\n<pre> Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6 - 2 = 4.\n Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3 - 0 = 3.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array of integers A of size N in which ith element is the price of the stock on day i. You can complete atmost B transactions. Find the maximum profit you can achieve. NOTE: You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again). ",
        "link": "best-time-to-buy-and-sell-stock-atmost-b-times-"
    },
    {
        "title": "Coins in a Line",
        "topic": "Dynamic Programming",
        "companies": [],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>There are <strong>A</strong> coins (Assume A is even) in a line.</p>\n<p>Two players take turns to take a coin from one of the ends of the line until there are no more coins left.</p>\n<p>The player with the larger amount of money wins, Assume that you go first.</p>\n<p>Return the <strong>maximum amount</strong> of money you can win.</p>\n<p><strong>NOTE:</strong></p>\n<li> You can assume that opponent is clever and plays optimally.</li></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= length(A) &lt;= 500</p>\n<p>1 &lt;= A[i] &lt;= 10<sup>5</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first and the only argument of input contains an integer array <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer representing the maximum amount of money you can win.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = [1, 2, 3, 4]\n</pre>\n<p>Input 2:</p>\n<pre>\n A = [5, 4, 8, 10]\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n 6\n</pre>\n<p>Output 2:</p>\n<pre>\n 15\n</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n You      : Pick 4\n Opponent : Pick 3\n You      : Pick 2\n Opponent : Pick 1</pre></div></p>\n<p>Total money with you : 4 + 2 = 6\n\n<p>Explanation 2:</p>\n<pre>\n You      : Pick 10\n Opponent : Pick 8\n You      : Pick 5\n Opponent : Pick 4</pre></p>\n<p>Total money with you : 10 + 5 = 15\n</p></div>",
        "statement": "There are A coins (Assume A is even) in a line. Two players take turns to take a coin from one of the ends of the line until there are no more coins left. The player with the larger amount of money wins, Assume that you go first. Return the maximum amount of money you can win. NOTE: You can assume that opponent is clever and plays optimally. ",
        "link": "coins-in-a-line"
    },
    {
        "title": "Egg Drop Problem!",
        "topic": "Dynamic Programming",
        "companies": ["Liv.ai"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given <strong>A</strong> eggs, and you have access to a building with <strong>B</strong> floors from <strong>1</strong> to <strong>B</strong>.</p><p></p><p></p><p></p>\n<p>Each egg is identical in function, and if an egg breaks, you cannot drop it again.</p>\n<p>You know that there exists a floor <strong>C</strong> with <strong>0 &lt;= C &lt;= B </strong> such that any egg dropped at a floor higher than <strong>C</strong> will break, and any egg dropped at or below floor <strong>C</strong> will not break.</p>\n<p>Each move, you may take an egg (if you have an unbroken one) and drop it from any floor <strong>X</strong> (with <strong>1 &lt;= X &lt;= B</strong>). </p>\n<p>Your goal is to know with certainty what the value of <strong>C</strong> is.</p>\n<p>What is the minimum number of moves that you need to know with certainty what <strong>C</strong> is, regardless of the initial value of <strong>C</strong></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><ul>\n<li> 1 &lt;= A &lt;= 100</li>\n<li> 1 &lt;= B &lt;= 10<sup>4</sup></li>\n</ul></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First Argument is an integer <strong>A</strong> denoting number of eggs.</p><p></p><p></p><p></p>\n<p>Second Argument is an integer <strong>B</strong> denoting number of floors.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the Minimum number of moves.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = 1\n B = 2\n</pre>\n<p>Input 2:</p>\n<pre> A = 2\n B = 10\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 2\n</pre>\n<p>Output 2:</p>\n<pre> 4 \n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> Drop the egg from floor 1.  If it breaks, we know with certainty that F = 0.\n Otherwise, drop the egg from floor 2.  If it breaks, we know with certainty that F = 1.\n If it didn't break, then we know with certainty F = 2.\n Hence, we needed 2 moves in the worst case to know what F is with certainty.\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "You are given A eggs, and you have access to a building with B floors from 1 to B. Each egg is identical in function, and if an egg breaks, you cannot drop it again. You know that there exists a floor C with 0 <= C <= B  such that any egg dropped at a floor higher than C will break, and any egg dropped at or below floor C will not break. Each move, you may take an egg (if you have an unbroken one) and drop it from any floor X (with 1 <= X <= B).  Your goal is to know with certainty what the value of C is. What is the minimum number of moves that you need to know with certainty what C is, regardless of the initial value of C",
        "link": "egg-drop-problem!"
    },
    {
        "title": "Max edge queries!",
        "topic": "Dynamic Programming",
        "companies": ["Juspay Technologies"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a tree with <strong>N</strong> nodes numbered from <strong>1</strong> to <strong>N</strong>.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Each edge is bi-directional and has a certain weight assigned to it.</p>\n<p>You are given <strong>Q</strong> queries, in each query you are given two integers <strong>u</strong> and <strong>v</strong> and you are required to find the <strong>maximum weighted edge</strong> in a simple path from <strong>u</strong> to <strong>v</strong>.</p>\n<p>You have to return the weight of the edge for each queries.</p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= N, Q &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= u, v &lt;= N  and u != v<br/></p>\n<p>1 &lt;= weight of any edge &lt;= 10<sup>8</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is a 2-D array <strong>A</strong> of size <strong>(N-1) x 3</strong>  where  <strong>(A[i][0], A[i][1])</strong> denotes an edge of the tree from node <strong>A[i][0]</strong> to node <strong>A[i][1]</strong> with weight <strong>A[i][2]</strong>.</p>\n<p>Second argument is a 2-D array <strong>B</strong> of size <strong>Q x 2</strong> denoting the queries, <strong>B[i][0]</strong> denotes u and <strong>B[i][1]</strong> denotes v.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer array of size <strong>Q</strong> denoting the answer for each queries.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = [  [1, 2, 11]\n        [1, 3, 1]\n        [2, 4, 12]\n        [2, 5, 100]\n     ]\n B = [  [3, 5]\n        [2, 3]\n     ]\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n [100, 11]\n</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n Query 1: u  = 3 and v = 5 so edge (2 -&gt; 5) is the maximum weighted in the path from u to v so we will return the\n edge weight as the answer for this query.\n Query 2: u = 2 and  v= 3 so edge (2 -&gt; 1) is the maximum weighted in the path from u to v so we will return the\n edge weight as the answer for this query.\n</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given a tree with N nodes numbered from 1 to N. Each edge is bi-directional and has a certain weight assigned to it. You are given Q queries, in each query you are given two integers u and v and you are required to find the maximum weighted edge in a simple path from u to v. You have to return the weight of the edge for each queries. ",
        "link": "max-edge-queries!"
    },
    {
        "title": "Maximum Path in Triangle",
        "topic": "Dynamic Programming",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a 2D integer array <strong>A</strong> of size <code> N * N </code>  representing a triangle of numbers.</p><p></p>\n<p>Find the maximum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li> Adjacent cells to cell (i,j) are only (i+1,j) and (i+1,j+1)</li>\n<li> Row i contains i integer and n-i zeroes for all i in [1,n] where zeroes represents empty cells.<p></p>\n</li></ul>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 0 &lt;= N &lt;= 1000 </p><p></p>\n<p> 0 &lt;= A[i][j] &lt;= 1000 </p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an 2D integer array <strong>A</strong> of size <code>N * N</code>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the maximum path sum from top to bottom in the triangle.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [\n        [3, 0, 0, 0]\n        [7, 4, 0, 0]\n        [2, 4, 6, 0]\n        [8, 5, 9, 3]\n     ]\n</pre>\n<p>Input 2:</p>\n<pre> A = [\n        [8, 0, 0, 0]\n        [4, 4, 0, 0]\n        [2, 2, 6, 0]\n        [1, 1, 1, 1]\n     ]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 23\n</pre>\n<p>Output 2:</p>\n<pre> 19\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> Given triangle looks like:  3\n                             7 4\n                             2 4 6\n                             8 5 9 3\n        So max path is (3 + 7 + 4 + 9) = 23\n</pre>\n<p>Explanation 1:</p>\n<pre> Given triangle looks like:  8\n                             4 4\n                             2 2 6\n                             1 1 1 1\n        So max path is (8 + 4 + 6 + 1) = 19\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a 2D integer array A of size  N * N   representing a triangle of numbers. Find the maximum path sum from top to bottom.  Each step you may move to adjacent numbers on the row below. NOTE: Adjacent cells to cell (i,j) are only (i+1,j) and (i+1,j+1) Row i contains i integer and n-i zeroes for all i in [1,n] where zeroes represents empty cells. ",
        "link": "maximum-path-in-triangle"
    },
    {
        "title": "Maximum Size Square Sub-matrix",
        "topic": "Dynamic Programming",
        "companies": ["Flipkart", "sirion labs"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a 2D binary matrix <strong>A</strong> of size <code> N x M </code> find the area of <strong>maximum size square sub-matrix</strong> with all <strong>1's</strong>.</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N, M &lt;= 10<sup>3</sup></p><p></p><p></p>\n<p> A[i][j] = 1 or A[i][j] = 0</p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an 2D matrix <strong>A</strong> of size <code>N x M</code>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output the area of <strong>maximum size square sub-matrix</strong> in <strong>A</strong> with all <strong>1's</strong>.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = [<br/>\n        [0, 1, 1, 0, 1],<br/>\n        [1, 1, 0, 1, 0],<br/>\n        [0, 1, 1, 1, 0],<br/>\n        [1, 1, 1, 1, 0],<br/>\n        [1, 1, 1, 1, 1],<br/>\n        [0, 0, 0, 0, 0]\n     ]\n</pre>\n<p>Input 2:</p>\n<pre> A = [<br/>\n       [1, 1],\n       [1, 1]\n     ]\n</pre>\n<p></p>\n<p></p></div><br><br><strong>Example Output</strong><br>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 9\n</pre>\n<p>Output 2:</p>\n<pre> 4\n</pre>\n<p></p>\n<p></p></div><br><br><strong>Example Explanation</strong><br>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre>  Consider the below binary matrix.\n <img src=\"https://imgur.com/50NQxJm.jpeg\"/>\n The area of the square is 3 * 3 = 9\n</pre>\n<p>Explanation 2:</p>\n<pre> The given matrix is the largest size square possible so area will be 2 * 2 = 4\n</pre>\n<p></p>\n<p></p></div><br><br/></br></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "Given a 2D binary matrix A of size  N x M  find the area of maximum size square sub-matrix with all 1's. ",
        "link": "maximum-size-square-sub-matrix"
    },
    {
        "title": "Increasing Path in Matrix",
        "topic": "Dynamic Programming",
        "companies": ["Google"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a 2D integer matrix <strong>A</strong> of size <strong><code>N x M</code></strong>.</p>\n<p>\u00a0</p>\n<p>\u00a0</p>\n<p>From <strong>A[i][j]</strong> you can move to <strong>A[i+1][j]</strong>, if <strong>A[i+1][j]</strong> &gt; <strong>A[i][j]</strong>, or can move to <strong>A[i][j+1]</strong> if <strong>A[i][j+1]</strong> &gt; <strong>A[i][j]</strong>.</p>\n<p>The task is to find and output the longest path length possible if we start from the cell\u00a0<strong>(0, 0) </strong>and want to reach cell<strong>\u00a0(N - 1, M - 1)</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<p>\u00a0</p>\n<p>\u00a0</p>\n<ul>\n<li>If there doesn't exist a path return <strong>-1</strong>.</li>\n</ul></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N, M &lt;= 10<sup>3</sup></p><p></p>\n<p>1 &lt;= A[i][j] &lt;= 10<sup>8</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an 2D integer matrix <strong>A</strong> of size <code>N x M</code>.</p> </div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the length of longest path in the matrix if no such path exists return <strong>-1</strong>.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = [  [1, 2]\n        [3, 4]\n     ]\n</pre>\n<p>Input 2:</p>\n<pre> A = [  [1, 2, 3, 4]\n        [2, 2, 3, 4]\n        [3, 2, 3, 4]\n        [4, 5, 6, 7]\n     ]\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 3\n</pre>\n<p>Output 2:</p>\n<pre> 7\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> Longest path is either 1 2 4 or 1 3 4.\n</pre>\n<p>Explanation 2:</p>\n<pre> Longest path is 1 2 3 4 5 6 7.\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a 2D integer matrix A of size N x M. From A[i][j] you can move to A[i+1][j], if A[i+1][j] > A[i][j], or can move to A[i][j+1] if A[i][j+1] > A[i][j]. The task is to find and output the longest path length possible if we start from the cell(0, 0) and want to reach cell(N - 1, M - 1). NOTE:If there doesn't exist a path return -1. ",
        "link": "increasing-path-in-matrix"
    },
    {
        "title": "Minimum Difference Subsets!",
        "topic": "Dynamic Programming",
        "companies": ["tower research", "uber"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> containing <strong>N</strong> integers.</p>\n<p>You need to divide the array <strong>A</strong> into two subsets S1 and S2 such that the absolute difference between their sums is minimum.</p>\n<p>Find and return this <strong>minimum possible absolute difference</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<li>Subsets can contain elements from A in any order (not necessary to be contiguous).</li>\n<li>Each element of A should belong to any one subset S1 or S2, not both.</li>\n<li>It may be possible that one subset remains empty.</li></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 100</p>\n<p>1 &lt;= A[i] &lt;= 100</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the minimum possible difference among the sums of two subsets.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = [1, 6, 11, 5]\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n 1\n</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n Subset1 = {1, 5, 6}, sum of Subset1 = 12\n Subset2 = {11}, sum of Subset2 = 11<br/>\n</pre></div><br><br/></br></p>\n\n</div>",
        "statement": "Given an integer array A containing N integers. You need to divide the array A into two subsets S1 and S2 such that the absolute difference between their sums is minimum. Find and return this minimum possible absolute difference. NOTE:Subsets can contain elements from A in any order (not necessary to be contiguous). Each element of A should belong to any one subset S1 or S2, not both. It may be possible that one subset remains empty. ",
        "link": "minimum-difference-subsets!"
    },
    {
        "title": "Subset Sum Problem!",
        "topic": "Dynamic Programming",
        "companies": ["Zenefits"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong>  of size <strong>N</strong>.</p><p></p>\n<p>You are also given an integer <strong>B</strong>, you need to find whether their exist a subset in <strong>A</strong> whose sum equal <strong>B</strong>.</p>\n<p>If there exist a subset then return <strong>1</strong> else return <strong>0</strong>.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 100</p><p></p>\n<p>1 &lt;= A[i] &lt;= 100</p>\n<p>1 &lt;= B &lt;= 10<sup>5</sup></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong>.</p><p></p>\n<p>Second argument is an integer <strong>B</strong>.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return 1 if there exist a subset with sum <strong>B</strong> else return 0.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [3, 34, 4, 12, 5, 2]\n B = 9\n</pre>\n<p>Input 2:</p>\n<pre> A = [3, 34, 4, 12, 5, 2]\n B = 30\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> There is a subset (4, 5) with sum 9.\n</pre>\n<p>Explanation 2:</p>\n<pre> There is no subset that add up to 30.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A  of size N. You are also given an integer B, you need to find whether their exist a subset in A whose sum equal B. If there exist a subset then return 1 else return 0. ",
        "link": "subset-sum-problem!"
    },
    {
        "title": "Min Sum Path in Matrix",
        "topic": "Dynamic Programming",
        "companies": ["Amazon", "Flipkart", "goldmann sachs", "thought works"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a 2D integer array <strong>A</strong> of size <code>M x N</code>, you need to find a path from top left to bottom right which minimizes the sum of all numbers along its path.</p><p></p>\n<p><strong>NOTE:</strong> You can only move either down or right at any point in time. </p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an 2D integer array <strong>A</strong> of size <code>M x N</code>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the minimum sum of a path from cell (1, 1) to cell (M, N).</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [  [1, 3, 2]\n        [4, 3, 1]\n        [5, 6, 1]\n     ]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 8\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> The path is 1 -&gt; 3 -&gt; 2 -&gt; 1 -&gt; 1\n So ( 1 + 3 + 2 + 1 + 1) = 8\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a 2D integer array A of size M x N, you need to find a path from top left to bottom right which minimizes the sum of all numbers along its path. NOTE: You can only move either down or right at any point in time.  ",
        "link": "min-sum-path-in-matrix"
    },
    {
        "title": "Best Time to Buy and Sell Stocks I",
        "topic": "Dynamic Programming",
        "companies": ["Amazon", "Facebook"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Say you have an array, <strong>A</strong>, for which the <strong>i</strong><sup>th</sup> element is the price of a given stock on day <strong>i</strong>.<p></p><p></p><p></p>\n<p>If you were only permitted to complete at most one transaction (i.e, buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p>\n<p>Return the <strong>maximum</strong> possible profit.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>0 &lt;= len(A) &lt;= 7e5</p><p></p>\n<p>1 &lt;= A[i] &lt;= 1e7</p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first and the only argument is an array of integers, A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer, representing the maximum possible profit.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [1, 2]\n</pre>\n<p>Input 2:</p>\n<pre> A = [1, 4, 5, 2, 4]\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 4\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> Buy the stock on day 0, and sell it on day 1.\n</pre>\n<p>Explanation 2:</p>\n<pre> Buy the stock on day 0, and sell it on day 2.\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Say you have an array, A, for which the ith element is the price of a given stock on day i. If you were only permitted to complete at most one transaction (i. e, buy one and sell one share of the stock), design an algorithm to find the maximum profit. Return the maximum possible profit. ",
        "link": "best-time-to-buy-and-sell-stocks-i"
    },
    {
        "title": "Chain of Pairs",
        "topic": "Dynamic Programming",
        "companies": ["Amazon", "Directi"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a <code>N * 2</code> array <strong>A</strong> where <strong>(A[i][0], A[i][1])</strong> represents the <strong>i<sup>th</sup></strong> pair.</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>In every pair, the first number is always smaller than the second number.</p>\n<p>A pair (c, d) can follow another pair (a, b) if b &lt; c , similarly in this way a chain of pairs can be formed.</p>\n<p>Find the <strong>length of the longest chain subsequence</strong> which can be formed from a given set of pairs.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>3</sup></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= A[i][0] &lt; A[i][1] &lt;= 10<sup>4</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an 2D integer array <strong>A</strong> of size <code>N * 2</code> representing the <strong>N</strong> pairs.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the length of longest chain subsequence of pairs possible under given constraint.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [  [5, 24]\n        [39, 60]\n        [15, 28]\n        [27, 40]\n        [50, 90]\n     ]\n</pre>\n<p>Input 2:</p>\n<pre> \nA = [   [10, 20]\n        [1, 2]\n     ]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 3\n</pre>\n<p>Output 2:</p>\n<pre> 1\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> Longest chain that can be formed is of length 3, and the chain is [ [5, 24], [27, 40], [50, 90] ]\n</pre>\n<p>Explanation 2:</p>\n<pre> Longest chain that can be formed is of length 1, and the chain is [ [1, 2] ] or [ [10, 20] ]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a N * 2 array A where (A[i][0], A[i][1]) represents the ith pair. In every pair, the first number is always smaller than the second number. A pair (c, d) can follow another pair (a, b) if b < c , similarly in this way a chain of pairs can be formed. Find the length of the longest chain subsequence which can be formed from a given set of pairs. ",
        "link": "chain-of-pairs"
    },
    {
        "title": "Merge elements",
        "topic": "Dynamic Programming",
        "companies": ["DE Shaw"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> of size <strong>N</strong>. You have to merge all the elements of the array into one with the <strong>minimum possible cost</strong>.</p><p></p><p></p>\n<p>The rule for merging is as follows:</p>\n<p></p>\n<p></p><li> Choose any two adjacent elements of the array with values say <strong>X</strong> and <strong>Y</strong> and merge them into a single element with value <strong>(X + Y)</strong> paying a total cost of <strong>(X + Y)</strong>.</li><p></p><p></p>\n<p>Return the minimum possible cost of merging all elements.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 200</p><p></p><p></p>\n<p>1 &lt;= A[i] &lt;= 10<sup>3</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A of size N.</p>\n</div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the minimum cost of merging all elements.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = [1, 3, 7]</pre>\n<p>Input 2:</p>\n<pre> A = [1, 2, 3, 4]</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 15</pre>\n<p>Output 2:</p>\n<pre> 19</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> All possible ways of merging:\n a) {1, 3, 7} (cost = 0) -&gt; {4, 7} (cost = 4) -&gt; {11} (cost = 4+11 = 15)\n b) {1, 3, 7} (cost = 0) -&gt; {1, 10} (cost = 10) -&gt; {11} (cost = 10+11 = 21)\n Thus, ans = 15</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A of size N.  You have to merge all the elements of the array into one with the minimum possible cost. The rule for merging is as follows: Choose any two adjacent elements of the array with values say X and Y and merge them into a single element with value (X + Y) paying a total cost of (X + Y). Return the minimum possible cost of merging all elements. ",
        "link": "merge-elements"
    },
    {
        "title": "0-1 Knapsack",
        "topic": "Dynamic Programming",
        "companies": ["Amazon", "deshaw"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given two integer arrays <strong>A</strong> and <strong>B</strong> of size <strong>N</strong> each which represent <strong>values</strong> and <strong>weights</strong> associated with <strong>N</strong> items respectively.</p><p></p><p></p><p></p><p></p>\n<p>Also given an integer <strong>C</strong> which represents knapsack capacity.</p>\n<p>Find out the maximum value subset of <strong>A</strong> such that sum of the weights of this subset is smaller than or equal to <strong>C</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>You cannot break an item, either pick the complete item, or don\u2019t pick it (0-1 property).</li>\n</ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>3</sup></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= C &lt;= 10<sup>3</sup></p>\n<p>1 &lt;= A[i], B[i] &lt;= 10<sup>3</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong> of size <strong>N</strong> denoting the values on <strong>N</strong> items.</p><p></p><p></p><p></p><p></p>\n<p>Second argument is an integer array <strong>B</strong> of size <strong>N</strong> denoting the weights on <strong>N</strong> items.</p>\n<p>Third argument is an integer <strong>C</strong> denoting the knapsack capacity.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the maximum value subset of <strong>A</strong> such that sum of the weights of this subset is smaller than or equal to <strong>C</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = [60, 100, 120]\n B = [10, 20, 30]\n C = 50\n</pre>\n<p>Input 2:</p>\n<pre> A = [10, 20, 30, 40]\n B = [12, 13, 15, 19]\n C = 10\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 220\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> Taking items with weight 20 and 30 will give us the maximum value i.e 100 + 120 = 220\n</pre>\n<p>Explanation 2:</p>\n<pre> Knapsack capacity is 10 but each item has weight greater than 10 so no items can be considered in the knapsack therefore answer is 0.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given two integer arrays A and B of size N each which represent values and weights associated with N items respectively. Also given an integer C which represents knapsack capacity. Find out the maximum value subset of A such that sum of the weights of this subset is smaller than or equal to C. NOTE:You cannot break an item, either pick the complete item, or don\u2019t pick it (0-1 property). ",
        "link": "0-1-knapsack"
    },
    {
        "title": "Equal Average Partition",
        "topic": "Dynamic Programming",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an array <strong>A</strong> with non negative numbers, divide the array into two parts such that the average of both the parts is equal.</p>\n<p>Return both parts (If exist). If there is no solution. return an empty list.</p>\n<p><strong>NOTE:</strong></p>\nIf a solution exists, you should return a list of exactly 2 lists of integers A and B which follow the following condition :\n<li>numElements in A &lt;= numElements in B</li>\n<li>If numElements in A = numElements in B, then A is lexicographically smaller than B ( https://en.wikipedia.org/wiki/Lexicographical_order )</li></div></p>\n<p>If multiple solutions exist, return the solution where length(A) is minimum. If there is still a tie, return the one where A is lexicographically smallest.</p>\n<p>Array will contain only non negative numbers.</p></div>",
        "statement": "Given an array A with non negative numbers, divide the array into two parts such that the average of both the parts is equal. Return both parts (If exist).  If there is no solution.  return an empty list. NOTE:If a solution exists, you should return a list of exactly 2 lists of integers A and B which follow the following condition :numElements in A <= numElements in BIf numElements in A = numElements in B, then A is lexicographically smaller than B ( https://en. wikipedia. org/wiki/Lexicographical_order )",
        "link": "equal-average-partition"
    },
    {
        "title": "Best Time to Buy and Sell Stocks II",
        "topic": "Dynamic Programming",
        "companies": ["Amazon", "Facebook"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Say you have an array, <strong>A</strong>, for which the <strong>ith</strong> element is the price of a given stock on day <strong>i</strong>.</p></div></p>\n<p>Design an algorithm to find the maximum profit.</p>\n<p>You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).</p>\n<p>However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>\n<p><strong>Input Format:</strong>\n<code>\nThe first and the only argument is an array of integer, A.\n</code></p>\n<p><strong>Output Format:</strong>\n<code>\nReturn an integer, representing the maximum possible profit.\n</code></p>\n<p><strong>Constraints:</strong>\n<code>\n0 &lt;= len(A) &lt;= 1e5\n1 &lt;= A[i] &lt;= 1e7\n</code>\n<strong>Example:</strong>\n<pre>\nInput 1:\n    A = [1, 2, 3]</pre></p>\n<p>Output 1:\n    2</p>\n<p>Explanation 1:\n    =&gt; Buy a stock on day 0.\n    =&gt; Sell the stock on day 1. (Profit +1)\n    =&gt; Buy a stock on day 1.\n    =&gt; Sell the stock on day 2. (Profit +1)</p>\n<pre><code>Overall profit = 2\n</code></pre>\n<p>Input 2:\n    A = [5, 2, 10]</p>\n<p>Output 2:\n    8</p>\n<p>Explanation 2:\n    =&gt; Buy a stock on day 1.\n    =&gt; Sell the stock on on day 2. (Profit +8)</p>\n<p>Overall profit = 8\n</p></div>",
        "statement": "Say you have an array, A, for which the ith element is the price of a given stock on day i. ",
        "link": "best-time-to-buy-and-sell-stocks-ii"
    },
    {
        "title": "Potions",
        "topic": "Dynamic Programming",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given <strong>N</strong> potions arranged in a row in the form of an array <strong>A</strong>.<br/>\nEach potion has one of 100 different colors (colors have numbers from 0 to 99).<br/>\nYou need to mix all these potions together.<br/> \nAt each step, you are going to take two potions that stand next to each other and mix them together,<br/> \nand put the resulting mixture in their place.<br/>\nWhen mixing two mixtures of colors <strong>X</strong> and <strong>Y</strong>, the resulting mixture will have the color <strong>(X + Y) mod 100</strong>.<br/>\nAlso, there will be some smoke in the process. The amount of smoke generated when mixing two mixtures of colors X and Y is <strong>X * Y</strong>.<br/>\nFind out what is the minimum amount of smoke that you can get when mixing all the potions together.</p></div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= N &lt;= 100<br/>\n0 &lt;= A<sub>i</sub> &lt;= 99</div><br><br><strong>Input Format</strong><br>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the integer array A.</div><br><br><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting the minimum amount of smoke.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = [2, 3]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = [2, 3, 4, 5]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>6\n</code></pre>\n<p>Output 2:</p>\n<pre><code>71\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>There are only two potions given. Upon mixing them, we get 2 * 3 = 6 amounts of smoke.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>Out of all the possible order of operations of mixing the given potions, the minimum amount of smoke you can get is 71.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "You are given N potions arranged in a row in the form of an array A. Each potion has one of 100 different colors (colors have numbers from 0 to 99). You need to mix all these potions together.  At each step, you are going to take two potions that stand next to each other and mix them together, and put the resulting mixture in their place. When mixing two mixtures of colors X and Y, the resulting mixture will have the color (X + Y) mod 100. Also, there will be some smoke in the process.  The amount of smoke generated when mixing two mixtures of colors X and Y is X * Y. Find out what is the minimum amount of smoke that you can get when mixing all the potions together. ",
        "link": "potions"
    },
    {
        "title": "Dice Throw",
        "topic": "Dynamic Programming",
        "companies": ["NetApp"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given <strong>A</strong> dices with faces numbered from <strong>1</strong> to <strong>B</strong>.<br/>\nYou have to find out the number of ways to get to sum <strong>C</strong>.</p>\n<p>Since, the number can be large, output the answer modulo <strong>10<sup>9</sup> + 7</strong>.</p></div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A, B, C &lt;= 10<sup>3</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the integer A.<br/>\nThe second argument is the integer B.<br/>\nThe third argument is the integer C.<br/></div><br><br><strong>Output Format</strong><br>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting the number of ways to get to the required sum modulo 10<sup>9</sup> + 7.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = 2\nB = 4\nC = 5\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = 2\nB = 4\nC = 1\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>4\n</code></pre>\n<p>Output 2:</p>\n<pre><code>0\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>There are 4 different ways to arrange the dices - [1, 4], [2, 3], [3, 2], [4, 1].</code></pre>\n<p>Explanation 2:</p>\n<pre><code>Since, the dices are numbered from 1. 2 dices will have the minimum sum of 2. \nTherefore, there are zero ways to get to sum 1.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></br></p>\n\n</div>",
        "statement": "You are given A dices with faces numbered from 1 to B. You have to find out the number of ways to get to sum C. Since, the number can be large, output the answer modulo 109 + 7. ",
        "link": "dice-throw"
    },
    {
        "title": "Double Increasing Series",
        "topic": "Dynamic Programming",
        "companies": ["Accenture"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given two integers <strong>A</strong> and <strong>B</strong>. <br/>Find the number of sequences of length <strong>B</strong>, such that every element of this sequence is an positive integer and is <strong>less than of equal to A,</strong> also every previous element in the sequence is less than or equal to half of the next element.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>5</sup><br/>1 &lt;= B &lt;= 20</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given two integers A and B.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer, the number of possible sequences <strong>modulo 10<sup>9</sup>+7</strong>.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 4, B = 2\n</pre>\n<p>Input 2:</p>\n<pre>A = 4, B = 3\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>4\n</pre>\n<p>Output 2:</p>\n<pre>1\n</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>The possible sequences are {1, 2}, {1, 3}, {1, 4}, {2, 4}.\n</pre>\n<p>Explanation 2:</p>\n<pre>The only possible sequence is {1, 2, 4}.\n</pre></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given two integers A and B.  Find the number of sequences of length B, such that every element of this sequence is an positive integer and is less than of equal to A, also every previous element in the sequence is less than or equal to half of the next element. ",
        "link": "double-increasing-series"
    },
    {
        "title": "Dice Rolls",
        "topic": "Dynamic Programming",
        "companies": ["Deloitte"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">You rolled a dice <strong>K</strong> times and got a sum of<strong> A</strong> after summing all the values you got after a roll.<br/>Find the number of ways you could have got a sum of <strong>A</strong> after rolling <strong>K </strong>times, since this value can be very large return <strong>modulo</strong> <strong>10<sup>9</sup>+7</strong>.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>6</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an integer A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return and integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 2\n</pre>\n<p>Input 2:</p>\n<pre>A = 3\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>2</pre>\n<p>Output 2:</p>\n<pre>4</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>Ways to get sum 2 are {1, 1} {2}.\n</pre>\n<p>Explanation 2:</p>\n<pre>Ways to get sum 3 are {1, 1, 1}, {1, 2}, {2, 1}, {3}\n</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "You rolled a dice K times and got a sum of A after summing all the values you got after a roll. Find the number of ways you could have got a sum of A after rolling K times, since this value can be very large return modulo 109+7. ",
        "link": "dice-rolls"
    },
    {
        "title": "Palindromic Substrings",
        "topic": "Dynamic Programming",
        "companies": ["LTI"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a string <strong>A </strong>consisting of only lowercase English letters. <br/>Return the number of substrings of <strong>A</strong> which are <strong>palindrome</strong>.</div><br><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>3</sup></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first and only argument is a string A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = \"aba\"\n</pre>\n<p>Input 2:</p>\n<pre>A = \"abcd\"\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>4</pre>\n<p>Output 2:</p>\n<pre>4</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>The plaindrome substrings are \"a\", \"b\", \"a\" and \"aba\".</pre>\n<p>Explanation 2:</p>\n<pre>The plaindrome substrings are \"a\", \"b\", \"c\" and \"d\".</pre></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given a string A consisting of only lowercase English letters.  Return the number of substrings of A which are palindrome. ",
        "link": "palindromic-substrings"
    },
    {
        "title": "Bulbs",
        "topic": "Greedy Algorithm",
        "companies": [],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><strong>N</strong> light bulbs are connected by a wire.<br/><br/>Each bulb has a switch associated with it, however due to faulty wiring, a switch also changes the state of all the bulbs to the right of current bulb.<br/><br/>Given an initial state of all bulbs, find the minimum number of switches you have to press to turn on all the bulbs.<br/><br/>You can press the same switch multiple times.<br/><br/><strong>Note</strong> : 0 represents the bulb is off and 1 represents the bulb is on.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">0 &lt;= N &lt;= 5e5<br/>0 &lt;= A[i] &lt;= 1</div><br><br><strong>Input Format</strong><br>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first and the only argument contains an integer array A, of size N.</div><br><br><strong>Output Format</strong><br>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer representing the minimum number of switches required.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">A = [0 1 0 1]</div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">4</div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">press switch 0 : [1 0 1 0]<br/> press switch 1 : [1 1 0 1]<br/> press switch 2 : [1 1 1 0]<br/> press switch 3 : [1 1 1 1]</div><br><br/></br></br></br></br></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "N light bulbs are connected by a wire. Each bulb has a switch associated with it, however due to faulty wiring, a switch also changes the state of all the bulbs to the right of current bulb. Given an initial state of all bulbs, find the minimum number of switches you have to press to turn on all the bulbs. You can press the same switch multiple times. Note : 0 represents the bulb is off and 1 represents the bulb is on. ",
        "link": "bulbs"
    },
    {
        "title": "Disjoint Intervals",
        "topic": "Greedy Algorithm",
        "companies": ["Google"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a set of <strong>N</strong> intervals denoted by 2D array <strong>A</strong> of size N x 2, the task is to find the length of <strong>maximal set</strong> of mutually <strong>disjoint</strong> intervals.</p><p></p><p></p>\n<p>Two intervals <strong>[x, y] &amp; [p, q]</strong> are said to be disjoint if they do not have any point in common.</p>\n<p>Return a integer denoting the <strong>length</strong> of maximal set of mutually disjoint intervals.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>1 &lt;= A[i][0] &lt;= A[i][1] &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is a 2D array A of size N x 2 denoting the N intervals.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a integer denoting the length of maximal set of mutually disjoint intervals.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = [\n       [1, 4]\n       [2, 3]\n       [4, 6]\n       [8, 9]\n     ]</pre>\n<p>Input 2:</p>\n<pre> A = [\n       [1, 9]\n       [2, 3]\n       [5, 7]\n     ]</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 3</pre>\n<p>Output 2:</p>\n<pre> 2</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> Intervals: [ [1, 4], [2, 3], [4, 6], [8, 9] ]\n Intervals [2, 3] and [1, 4] overlap.\n We must include [2, 3] because if [1, 4] is included thenwe cannot include [4, 6].\n We can include at max three disjoint intervals: [[2, 3], [4, 6], [8, 9]]\n</pre>\n<p>Explanation 2:</p>\n<pre> Intervals: [ [1, 9], [2, 3], [5, 7] ]\n We can include at max two disjoint intervals: [[2, 3], [5, 7]]\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a set of N intervals denoted by 2D array A of size N x 2, the task is to find the length of maximal set of mutually disjoint intervals. Two intervals [x, y] & [p, q] are said to be disjoint if they do not have any point in common. Return a integer denoting the length of maximal set of mutually disjoint intervals. ",
        "link": "disjoint-intervals"
    },
    {
        "title": "Largest Permutation",
        "topic": "Greedy Algorithm",
        "companies": ["deshaw"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an integer array <strong>A</strong> of size <strong>N</strong> consisting of unique integers from 1 to N. You can swap any two integers atmost <strong>B</strong> times.</p><p></p><p></p>\n<p>Return the largest lexicographical value array that can be created by executing atmost B swaps.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>6</sup></p><p></p><p></p>\n<p>1 &lt;= B &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array A of size N.</p><p></p><p></p>\n<p>Second argument is an integer B.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer array denoting the largest lexicographical value array that can be created by executing atmost B swaps.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = [1, 2, 3, 4]\n B = 1</pre>\n<p>Input 2:</p>\n<pre> A = [3, 2, 1]\n B = 2</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> [4, 2, 3, 1]</pre>\n<p>Output 2:</p>\n<pre> [3, 2, 1]</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> In one swap we can swap (1, 4) so that the array becomes : [4, 2, 3, 1].</pre>\n<p>Explanation 2:</p>\n<pre> Array is already the largest lexicographical value array.</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an integer array A of size N consisting of unique integers from 1 to N.  You can swap any two integers atmost B times. Return the largest lexicographical value array that can be created by executing atmost B swaps. ",
        "link": "largest-permutation"
    },
    {
        "title": "Meeting rooms",
        "topic": "Greedy Algorithm",
        "companies": ["Amazon", "ajio", "Apple", "Fab", "Flipkart", "Microsoft"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an 2D integer array <strong>A</strong> of size <code>N x 2</code> denoting time intervals of different meetings.</p>\n<p>\u00a0</p>\n<p>Where:</p>\n<p>\u00a0</p>\n<ul>\n<li><strong>A[i][0]</strong> = start time of the i<sup>th</sup> meeting.</li>\n<li><strong>A[i][1]</strong> = end time of the i<sup>th</sup> meeting.</li>\n</ul>\n<p>\u00a0</p>\n<p>Find the <strong>minimum number of conference rooms</strong> required so that all meetings can be done.<br/><br/>Note :- If a meeting ends at time t, another meeting starting at time t can use the same conference room</p>\n<p>\u00a0</p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup></sup></p><p></p>\n<p>0 &lt;= A[i][0] &lt; A[i][1] &lt;= 2 * 10<sup>9</sup></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The only argument given is the matrix <strong>A</strong>.</p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the minimum number of conference rooms required so that all meetings can be done.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [      [0, 30]\n            [5, 10]\n            [15, 20]\n     ]<br/>\n</pre>\n<p>Input 2:</p>\n<pre> A =  [     [1, 18]\n            [18, 23]\n            [15, 29]\n            [4, 15]\n            [2, 11]\n            [5, 13]\n      ]\n</pre>\n<p></p></div><br><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 2\n</pre>\n<p>Output 2:</p>\n<pre> 4\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> Meeting one can be done in conference room 1 form 0 - 30.\n Meeting two can be done in conference room 2 form 5 - 10.\n Meeting three can be done in conference room 2 form 15 - 20 as it is free in this interval.\n</pre>\n<p>Explanation 2:</p>\n<pre> Meeting one can be done in conference room 1 from 1 - 18.\n Meeting five can be done in conference room 2 from 2 - 11.\n Meeting four can be done in conference room 3 from 4 - 15.\n Meeting six can be done in conference room 4 from 5 - 13.\n Meeting three can be done in conference room 2 from 15 - 29 as it is free in this interval.\n Meeting two can be done in conference room 4 from 18 - 23 as it is free in this interval.\n</pre>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "Given an 2D integer array A of size N x 2 denoting time intervals of different meetings. Where:A[i][0] = start time of the ith meeting. A[i][1] = end time of the ith meeting. Find the minimum number of conference rooms required so that all meetings can be done. Note :- If a meeting ends at time t, another meeting starting at time t can use the same conference room",
        "link": "meeting-rooms"
    },
    {
        "title": "Assign Mice to Holes",
        "topic": "Greedy Algorithm",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>There are <strong>N</strong> Mice and <strong>N</strong> holes that are placed in a straight line. Each hole can accomodate only 1 mouse.</p><p></p><p></p><p></p>\n<p>The positions of Mice are denoted by array <strong>A</strong> and the position of holes are denoted by array <strong>B</strong>.</p>\n<p>A mouse can stay at his position, move one step right from x to x + 1, or move one step left from x to x \u2212 1. Any of these moves consumes 1 minute.</p>\n<p>Assign mice to holes so that the time when the last mouse gets inside a hole is <strong>minimized</strong>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>-10<sup>9</sup> &lt;= A[i], B[i] &lt;= 10<sup>9</sup></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array A.</p><p></p><p></p><p></p>\n<p>Second argument is an integer array B.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the minimum time when the last nouse gets inside the holes.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [-4, 2, 3]\n B = [0, -2, 4]</pre>\n<p>Input 2:</p>\n<pre> A = [-2]\n B = [-6]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 2</pre>\n<p>Output 2:</p>\n<pre> 4</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> Assign the mouse at position (-4 to -2), (2 to 0) and (3 to 4).\n The number of moves required will be 2, 2 and 1 respectively.\n So, the time taken will be 2.</pre>\n<p>Explanation 2:</p>\n<pre> Assign the mouse at position -2 to -6.\n The number of moves required will be 4.\n So, the time taken will be 4.</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "There are N Mice and N holes that are placed in a straight line.  Each hole can accomodate only 1 mouse. The positions of Mice are denoted by array A and the position of holes are denoted by array B. A mouse can stay at his position, move one step right from x to x + 1, or move one step left from x to x \u2212 1.  Any of these moves consumes 1 minute. Assign mice to holes so that the time when the last mouse gets inside a hole is minimized. ",
        "link": "assign-mice-to-holes"
    },
    {
        "title": "Majority Element",
        "topic": "Greedy Algorithm",
        "companies": ["Microsoft", "Yahoo", "Google", "Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given an array of size <strong>n</strong>, find the majority element. The majority element is the element that appears more than <strong>floor(n/2)</strong> times.<p></p><p></p><p></p><p></p><p></p>\n<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>\n<p>Example :</p>\n<pre><code>Input : [2, 1, 2]\nReturn  : 2 which occurs 2 times which is greater than 3/2.\n</code></pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an array of size n, find the majority element.  The majority element is the element that appears more than floor(n/2) times. You may assume that the array is non-empty and the majority element always exist in the array. Example :Input : [2, 1, 2]Return  : 2 which occurs 2 times which is greater than 3/2. ",
        "link": "majority-element"
    },
    {
        "title": "Gas Station",
        "topic": "Greedy Algorithm",
        "companies": ["Bloomberg", "Google", "DE Shaw", "Amazon", "Flipkart", "Microsoft"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given two integer arrays <strong>A </strong>and <strong>B</strong> of size <strong>N</strong>. There are<strong> N</strong> gas stations along a circular route, where the amount of gas at station <strong>i </strong>is <strong>A[i]</strong>.<br/><br/>You have a car with an unlimited gas tank and it costs <strong>B[i]</strong> of gas to travel from station<strong> i</strong> to its next station <strong>(i+1)</strong>. You begin the journey with an empty tank at one of the gas stations.<br/><br/>Return the minimum starting gas station's index if you can travel around the circuit once, otherwise return <strong>-1</strong>.<br/><br/>You can only travel in one direction. i to <strong>i+1, i+2, ... n-1, 0, 1, 2..</strong> Completing the circuit means starting at i and ending up at i again.</div><br><br><strong>Input Format</strong><br>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument given is the integer array A.\nThe second argument given is the integer array B.</div><br><br><strong>Output Format</strong><br>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return the minimum starting gas station's index if you can travel around the circuit once, otherwise return -1.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">    A =  [1, 2]\n    B =  [2, 1]</div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1</div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">If you start from index 0, you can fill in A[0] = 1 amount of gas. Now your tank has 1 unit of gas. But you need B[0] = 2 gas to travel to station 1. \n        If you start from index 1, you can fill in A[1] = 2 amount of gas. Now your tank has 2 units of gas. You need B[1] = 1 gas to get to station 0. So, you travel to station 0 and still have 1 unit of gas left over. You fill in A[0] = 1 unit of additional gas, making your current gas = 2. It costs you B[0] = 2 to get to station 1, which you do and complete the circuit. </div><br/><br/></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "Given two integer arrays A and B of size N.  There are N gas stations along a circular route, where the amount of gas at station i is A[i]. You have a car with an unlimited gas tank and it costs B[i] of gas to travel from station i to its next station (i+1).  You begin the journey with an empty tank at one of the gas stations. Return the minimum starting gas station's index if you can travel around the circuit once, otherwise return -1. You can only travel in one direction.  i to i+1, i+2, . . .  n-1, 0, 1, 2. .  Completing the circuit means starting at i and ending up at i again. ",
        "link": "gas-station"
    },
    {
        "title": "Path in Directed Graph",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["uber"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an directed graph having <strong>A</strong> nodes labelled from <strong>1</strong> to <strong>A</strong> containing <strong>M</strong> edges given by matrix <strong>B</strong> of size <code>M x 2</code>such that there is a edge directed from node</p><p></p>\n<p><strong>B[i][0]</strong> to node <strong>B[i][1]</strong>.</p>\n<p>Find whether a path exists from node <strong>1</strong> to node <strong>A</strong>.</p>\n<p>Return <strong>1</strong> if path exists else return <strong>0</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>There are no self-loops in the graph.</li>\n<li>There are no multiple edges between two nodes.</li>\n<li>The graph may or may not be connected.</li>\n<li>Nodes are numbered from 1 to A.</li>\n<li>Your solution will run on multiple test cases. If you are using global variables make sure to clear them.</li>\n</ul>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= A &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= M &lt;= min(200000,A<em>(A-1))</em></p>\n<p>1 &lt;= B[i][0], B[i][1] &lt;= A</p>\n<p></p>\n<p></p></div><br/><br/><em>Input Format</em><em><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument given is an integer <strong>A</strong> representing the number of nodes in the graph.</p><p></p><p></p>\n<p>The second argument given a matrix <strong>B</strong> of size <code>M x 2</code> which represents the <strong>M</strong> edges such that there is a edge directed from node <strong>B[i][0]</strong> to node <strong>B[i][1]</strong>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Output Format</em><em><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return <strong>1</strong> if path exists between node <strong>1</strong> to node <strong>A</strong> else return <strong>0</strong>.</p></div><br/><br/></em><em>Example Input</em><em><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = 5\n B = [  [1, 2] \n        [4, 1] \n        [2, 4] \n        [3, 4] \n        [5, 2] \n        [1, 3] ]\n</pre>\n<p>Input 2:</p>\n<pre> A = 5\n B = [  [1, 2]\n        [2, 3] \n        [3, 4] \n        [4, 5] ]\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Output</em><em><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 0\n</pre>\n<p>Output 2:</p>\n<pre> 1\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Explanation</em>*<br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> The given doens't contain any path from node 1 to node 5 so we will return 0.\n</pre>\n<p>Explanation 2:</p>\n<pre> Path from node1 to node 5 is ( 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 ) so we will return 1.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an directed graph having A nodes labelled from 1 to A containing M edges given by matrix B of size M x 2such that there is a edge directed from nodeB[i][0] to node B[i][1]. Find whether a path exists from node 1 to node A. Return 1 if path exists else return 0. NOTE:There are no self-loops in the graph. There are no multiple edges between two nodes. The graph may or may not be connected. Nodes are numbered from 1 to A. Your solution will run on multiple test cases.  If you are using global variables make sure to clear them. ",
        "link": "path-in-directed-graph"
    },
    {
        "title": "Water Flow",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Google"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an <strong>N x M</strong> matrix <strong>A</strong> of non-negative integers representing the <strong>height</strong> of each unit cell in a continent, the \"Blue lake\" touches the left and top edges of the matrix and the \"Red lake\" touches the right and bottom edges.</p><p></p>\n<p>Water can only flow in four directions (up, down, left, or right) from a cell to another one with <strong>height equal or lower</strong>.</p>\n<p>Find the number of cells from where water can flow to both the Blue and Red lake.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= M, N &lt;= 1000</p><p></p>\n<p>1 &lt;= A[i][j] &lt;= 10<sup>9</sup></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is a 2D matrix A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the number of cells from where water can flow to both the Blue and Red lake.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [\n       [1, 2, 2, 3, 5]\n       [3, 2, 3, 4, 4]\n       [2, 4, 5, 3, 1]\n       [6, 7, 1, 4, 5]\n       [5, 1, 1, 2, 4]\n     ]</pre>\n<p>Input 2:</p>\n<pre> A = [\n       [2, 2]\n       [2, 2]\n     ]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 7</pre>\n<p>Output 2:</p>\n<pre> 4</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre>\n Blue Lake ~   ~   ~   ~   ~ \n        ~  1   2   2   3  (5) *\n        ~  3   2   3  (4) (4) *\n        ~  2   4  (5)  3   1  *\n        ~ (6) (7)  1   4   5  *\n        ~ (5)  1   1   2   4  *\n           *   *   *   *   * Red Lake\n Water can flow to both lakes from the cells denoted in parentheses.<br/>\n</pre>\n<p>Explanation 2:</p>\n<pre> Water can flow from all cells.</pre>\n<p></p></div><br><br/></br></p>\n\n</div>",
        "statement": "Given an N x M matrix A of non-negative integers representing the height of each unit cell in a continent, the \"Blue lake\" touches the left and top edges of the matrix and the \"Red lake\" touches the right and bottom edges. Water can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower. Find the number of cells from where water can flow to both the Blue and Red lake. ",
        "link": "water-flow"
    },
    {
        "title": "Stepping Numbers",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Epic systems", "Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given <strong>A</strong> and <strong>B</strong> you have to find all stepping numbers in range <strong>A</strong> to <strong>B</strong>.</p>\n<p><strong>The stepping number:</strong></p>\n<p>A number is called as a stepping number if the adjacent digits have a difference of 1.</p>\n<p>e.g. 123 is stepping number, but 358 is not a stepping number</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer <strong>A</strong>.</p>\n<p>Second argument is an integer <strong>B</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a integer array sorted in ascending order denoting the stepping numbers between <strong>A</strong> and <strong>B</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p>\n<pre>\n A = 10\n B = 20\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p>\n<pre>\n [10, 12]\n</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p>\n<pre>\n All stepping numbers are 10 , 12 \n</pre></div><br/><br/></p>\n\n</div>",
        "statement": "Given A and B you have to find all stepping numbers in range A to B. The stepping number:A number is called as a stepping number if the adjacent digits have a difference of 1. e. g.  123 is stepping number, but 358 is not a stepping number",
        "link": "stepping-numbers"
    },
    {
        "title": "Capture Regions on Board",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Google"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a 2D character matrix <strong>A</strong> of size <code>N x M</code>, containing <code>'X'</code> and <code>'O'</code>, capture all regions surrounded by <code>'X'</code>.</p><p></p><p></p>\n<p>A region is captured by flipping all <code>'O'</code>s into <code>'X'</code>s in that surrounded region.</p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N, M &lt;= 10<sup>3</sup></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument 2D character matrix <strong>A</strong> of size <code>N X M</code>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Make changes to the the input only as matrix is passed by reference.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = [  [X, X, X, X],\n        [X, O, O, X],\n        [X, X, O, X],\n        [X, O, X, X]\n     ]\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> A = [  [X, X, X, X],\n        [X, X, X, X],\n        [X, X, X, X],\n        [X, O, X, X]\n     ]\n</pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> 'O' in (4,2) is not surrounded by X from below.\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a 2D character matrix A of size N x M, containing 'X' and 'O', capture all regions surrounded by 'X'. A region is captured by flipping all 'O's into 'X's in that surrounded region. ",
        "link": "capture-regions-on-board"
    },
    {
        "title": "Path with good nodes!",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Tower Research Capital"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a tree with <strong>N</strong> nodes labelled from <strong>1</strong> to <strong>N</strong>.</p><p></p><p></p><p></p>\n<p>Each node is either <strong>good</strong> or <strong>bad</strong> denoted by binary array <strong>A</strong> of size <strong>N</strong> where if <strong>A[i]</strong> is <strong>1</strong> then <strong>i<sup>th</sup>node</strong> is <strong>good</strong> else if <strong>A[i]</strong> is \n<strong>0</strong> then <strong>i<sup>th</sup></strong> node is <strong>bad</strong>.</p>\n<p>Also the given tree is rooted at node <strong>1</strong> and you need to tell the number of <strong>root to leaf</strong> paths in the tree that contain not more than <strong>C</strong> good nodes.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>Each edge in the tree is <strong>bi-directional</strong>.</li></ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>A[i] = 0 or A[i] = 1</p>\n<p>0 &lt;= C &lt;= N</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an binary integer array <strong>A</strong> of size <strong>N</strong>.</p><p></p><p></p><p></p>\n<p>Second argument is a 2-D array <strong>B</strong> of size <strong>(N-1) x 2</strong> denoting the edge of the tree.</p>\n<p>Third argument is an integer <strong>C</strong>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the number of <strong>root to leaf</strong> paths in the tree that contain not more than <strong>C</strong> good nodes.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre>\n A = [0, 1, 0, 1, 1, 1]\n B = [  [1, 2]\n        [1, 5]\n        [1, 6]\n        [2, 3]\n        [2, 4]\n     ]\n C = 1\n</pre></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre>\n 3\n</pre></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre>\n Path (1 - 2 - 3) and (1 - 5) and (1 - 6) are the paths which contain atmost C nodes.\n</pre></div><br/><br/></p>\n\n</div>",
        "statement": "Given a tree with N nodes labelled from 1 to N. Each node is either good or bad denoted by binary array A of size N where if A[i] is 1 then ithnode is good else if A[i] is 0 then ith node is bad. Also the given tree is rooted at node 1 and you need to tell the number of root to leaf paths in the tree that contain not more than C good nodes. NOTE:Each edge in the tree is bi-directional. ",
        "link": "path-with-good-nodes!"
    },
    {
        "title": "Largest Distance between nodes of a Tree",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Facebook", "Google"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an arbitrary unweighted rooted tree which consists of <strong>N</strong> nodes.</p><p></p>\n<p>The goal of the problem is to find <strong>largest distance between two nodes in a tree.</strong></p>\n<p>Distance between two nodes is a number of edges on a path between the nodes (there will be a unique path between any pair of nodes since it is a tree).</p>\n<p>The nodes will be numbered <strong>0</strong> through <strong>N - 1</strong>.</p>\n<p>The tree is given as an array <strong>A</strong>, there is an edge between nodes <strong>A[i]</strong> and <strong>i (0 &lt;= i &lt; N)</strong>. Exactly one of the i's will have A[i] equal to -1, it will be root node.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 40000</p>\n</div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A of size <strong>N</strong>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the largest distance between two nodes in a tree.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [-1, 0, 0, 0, 3]\n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 3\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> node 0 is the root and the whole tree looks like this: \n          0\n       /  |  \\\n      1   2   3\n               \\\n                4<br/>\n One of the longest path is 1 -&gt; 0 -&gt; 3 -&gt; 4 and its length is 3, thus the answer is 3.\n</pre>\n<p></p></div><br><br/></br></p>\n\n</div>",
        "statement": "Given an arbitrary unweighted rooted tree which consists of N nodes. The goal of the problem is to find largest distance between two nodes in a tree. Distance between two nodes is a number of edges on a path between the nodes (there will be a unique path between any pair of nodes since it is a tree). The nodes will be numbered 0 through N - 1. The tree is given as an array A, there is an edge between nodes A[i] and i (0 <= i < N).  Exactly one of the i's will have A[i] equal to -1, it will be root node. ",
        "link": "largest-distance-between-nodes-of-a-tree"
    },
    {
        "title": "Cycle in Directed Graph",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Amazon", "Morgan Stanley"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an directed graph having <strong>A</strong> nodes. A matrix <strong>B</strong> of size <code>M x 2</code> is given which represents the <strong>M</strong> edges such that there is a edge directed from node <strong>B[i][0]</strong> to node <strong>B[i][1]</strong>.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Find whether the graph contains a cycle or not, return <strong>1</strong> if cycle is present else return <strong>0</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>The cycle must contain atleast two nodes.</li>\n<li>There are no self-loops in the graph.</li>\n<li>There are no multiple edges between two nodes.</li>\n<li>The graph may or may not be connected.</li>\n<li>Nodes are numbered from 1 to A.</li>\n<li>Your solution will run on multiple test cases. If you are using global variables make sure to clear them.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= A &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= M &lt;= min(200000,A<em>(A-1))</em></p>\n<p>1 &lt;= B[i][0], B[i][1] &lt;= A</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><em>Input Format</em><em><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument given is an integer <strong>A</strong> representing the number of nodes in the graph.</p><p></p><p></p><p></p>\n<p>The second argument given a matrix <strong>B</strong> of size <code>M x 2</code> which represents the <strong>M</strong> edges such that there is a edge directed from node <strong>B[i][0]</strong> to node <strong>B[i][1]</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Output Format</em><em><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return <strong>1</strong> if cycle is present else return <strong>0</strong>.</p></div><br/><br/></em><em>Example Input</em><em><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre> A = 5\n B = [  [1, 2] \n        [4, 1] \n        [2, 4] \n        [3, 4] \n        [5, 2] \n        [1, 3] ]\n</pre>\n<p>Input 2:</p>\n<pre> A = 5\n B = [  [1, 2]\n        [2, 3] \n        [3, 4] \n        [4, 5] ]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Output</em><em><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Explanation</em>*<br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> The given graph contain cycle 1 -&gt; 3 -&gt; 4 -&gt; 1 or the cycle 1 -&gt; 2 -&gt; 4 -&gt; 1\n</pre>\n<p>Explanation 2:</p>\n<pre> The given graph doesn't contain any cycle.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an directed graph having A nodes.  A matrix B of size M x 2 is given which represents the M edges such that there is a edge directed from node B[i][0] to node B[i][1]. Find whether the graph contains a cycle or not, return 1 if cycle is present else return 0. NOTE:The cycle must contain atleast two nodes. There are no self-loops in the graph. There are no multiple edges between two nodes. The graph may or may not be connected. Nodes are numbered from 1 to A. Your solution will run on multiple test cases.  If you are using global variables make sure to clear them. ",
        "link": "cycle-in-directed-graph"
    },
    {
        "title": "Delete Edge!",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Flipkart"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a undirected tree with <strong>N</strong> nodes labeled  from <strong>1</strong> to <strong>N</strong>.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Each node has a certain weight assigned to it given by an integer array <strong>A</strong> of size <strong>N</strong>.</p>\n<p>You need to delete an edge in such a way that <strong>Product</strong> between sum of weight of nodes in one subtree with sum of weight of nodes in other subtree is <strong>maximized</strong>.</p>\n<p>Return this maximum possible product modulo <strong>10<sup>9</sup> + 7</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<ul><li>The tree is rooted at node labeled  with 1.</li></ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= N &lt;= 10<sup>5</sup></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= A[i] &lt;= 10<sup>3</sup></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer array <strong>A</strong> of size <strong>N</strong> denoting the weight of each node.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Second argument is a 2-D array <strong>B</strong> of size <strong>(N-1) x 2</strong> denoting the edge of the tree.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the maximum product prossible of sum of weights of nodes in the two subtrees formed by deleting an edge with modulo <strong>10<sup>9</sup> + 7</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = [10, 5, 12, 6]\n B = [<br/>\n        [1, 2]\n        [1, 4]\n        [4, 3]\n     ]\n</pre>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> A = [11, 12]\n B = [<br/>\n        [1, 2]\n     ]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br><br><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 270</pre>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 132\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> Removing edge (1, 4) created two subtrees.\n Subtree-1 contains nodes (1, 2) and Subtree-2 contains nodes (3, 4)\n So product will be = (A[1] + A[2]) * (A[3] + A[4]) = 15 * 18 = 270\n</pre>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> Removing edge (1, 2) created two subtrees.\n Subtree-1 contains node (1) and Subtree-2 contains node (3)\n So product will be = (A[1]) * (A[2]) = 11 * 12 = 132\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></br></br></p>\n\n</div>",
        "statement": "Given a undirected tree with N nodes labeled  from 1 to N. Each node has a certain weight assigned to it given by an integer array A of size N. You need to delete an edge in such a way that Product between sum of weight of nodes in one subtree with sum of weight of nodes in other subtree is maximized. Return this maximum possible product modulo 109 + 7. NOTE:The tree is rooted at node labeled  with 1. ",
        "link": "delete-edge!"
    },
    {
        "title": "Two teams?",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Directi"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>There are <strong>A</strong> people numbered 1 to A in a football academy.<br/>\nThe coach of the academy wants to make two teams (not necessary of equal size) but unfortunately, not all people get along, and several refuse to be put on the same team as that of their enemies.</p><p></p><p></p><p></p><p></p><p></p>\n<p>Given a 2-D array <strong>B</strong> of size <code>M x 2</code> denoting the enemies i.e B[i][0] and B[i][1] both are enemies of each other.</p>\n<p>Return <strong>1</strong> if it possible to make exactly two teams else return <strong>0</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>2 &lt;= A &lt;= 10<sup>5</sup></p><p></p><p></p>\n<p>1 &lt;= M &lt;= 10<sup>5</sup></p>\n<p>1 &lt;= B[i][0], B[i][1] &lt;= A</p>\n<p>B[i][0] != B[i][1]</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an integer A denoting number of peoples.</p><p></p><p></p><p></p><p></p><p></p>\n<p>Second argument is a 2-D array B of size M x 2 denoting enemies.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return <strong>1</strong> if it possible to make exactly two teams else return <strong>0</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 5\n B = [ [1, 2],\n       [2, 3],\n       [1, 5],\n       [2, 4] ] </pre>\n<p>Input 2:</p>\n<pre> A = 4\n B = [ [1, 4],\n       [3, 1],\n       [4, 3],\n       [2, 1] ]\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> 1 </pre>\n<p>Output 2:</p>\n<pre> 0 </pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> We can make two teams [1, 3, 4] and [2, 5].</pre>\n<p>Explanation 2:</p>\n<pre> No possible way to create two teams. So, we need to return 0.</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></br></p>\n\n</div>",
        "statement": "There are A people numbered 1 to A in a football academy. The coach of the academy wants to make two teams (not necessary of equal size) but unfortunately, not all people get along, and several refuse to be put on the same team as that of their enemies. Given a 2-D array B of size M x 2 denoting the enemies i. e B[i][0] and B[i][1] both are enemies of each other. Return 1 if it possible to make exactly two teams else return 0. ",
        "link": "two-teams?"
    },
    {
        "title": "Snake Ladder Problem!",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Rishabh takes out his <a href=\"https://en.wikipedia.org/wiki/Snakes_and_Ladders\"><strong>Snakes and Ladders Game</strong></a>, stares the board and wonders: \"If I can always roll the die to whatever number I want, what would be the <strong>least number of rolls to reach the destination</strong>?\"</p><p></p><p></p>\n<p><strong>RULES:</strong></p>\n<ul>\n<li>The game is played with cubic dice of <strong>6</strong> faces numbered from <strong>1</strong> to <strong>A</strong>.</li>\n<li>Starting from  <strong>1</strong> , land on square <strong>100</strong> with the exact roll of the die. If moving the number rolled would place the player beyond square <strong>100</strong>, no move is made.</li>\n<li>If a player lands at the base of a ladder, the player must climb the ladder. Ladders go up only.</li>\n<li>If a player lands at the mouth of a snake, the player must go down the snake and come out through the tail. Snakes go down only.</li>\n</ul>\n<p><strong>BOARD DESCRIPTION:</strong></p>\n<ul>\n<li> The board is always <code>10 x 10</code>  with squares numbered from <strong>1</strong> to <strong>100</strong>.</li>\n<li>The board contains <strong>N</strong> ladders given in a form of 2D matrix <strong>A</strong> of size <code>N * 2</code> where <strong>(A[i][0], A[i][1])</strong> denotes a ladder that has its base on square <strong>A[i][0]</strong> and end at square <strong>A[i][1]</strong>.</li>\n<li> The board contains <strong>M</strong> snakes given in a form of 2D matrix <strong>B</strong> of size <code>M * 2</code> where <strong>(B[i][0], B[i][1])</strong> denotes a snake that has its mouth on square <strong>B[i][0]</strong> and tail at square <strong>B[i][1]</strong>.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N, M &lt;= 15</p><p></p><p></p><p></p>\n<p>1 &lt;= A[i][0], A[i][1], B[i][0], B[i][1] &lt;= 100</p>\n<p>A[i][0] &lt; A[i][1] and B[i][0] &gt; B[i][1]</p>\n<p>Neither square <strong>1</strong> nor square <strong>100</strong> will be the starting point of a ladder or snake.</p>\n<p>A square will have at most one endpoint from either a snake or a ladder.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is a 2D matrix <strong>A</strong> of size <code>N * 2</code> where <strong>(A[i][0], A[i][1])</strong> denotes a ladder that has its base on square <strong>A[i][0]</strong> and end at square <strong>A[i][1]</strong>.</p><p></p><p></p><p></p>\n<p>Second argument is a 2D matrix <strong>B</strong> of size <code>M * 2</code> where <strong>(B[i][0], B[i][1])</strong> denotes a snake that has its mouth on square <strong>B[i][0]</strong> and tail at square <strong>B[i][1]</strong>.</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the <strong>least number of rolls</strong> to move from start to finish on a separate line. If there is no solution, return <strong>-1</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [  [32, 62]\n        [42, 68]\n        [12, 98]\n     ]\n B = [  [95, 13]\n        [97, 25]\n        [93, 37]\n        [79, 27]\n        [75, 19]\n        [49, 47]\n        [67, 17]\n</pre>\n<p>Input 2:</p>\n<pre> A = [  [8, 52]\n        [6, 80]\n        [26, 42]\n        [2, 72]\n     ]\n B = [  [51, 19]\n        [39, 11]\n        [37, 29]\n        [81, 3]\n        [59, 5]\n        [79, 23]\n        [53, 7]\n        [43, 33]\n        [77, 21] \n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 3\n</pre>\n<p>Output 2:</p>\n<pre> 5\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> The player can roll a <strong>5</strong> and a <strong>6</strong> to land at square <strong>12</strong>. There is a ladder to square <strong>98</strong>. A roll of <strong>2</strong> ends the traverse in <strong>3</strong> rolls.</pre></div></p>\n<p>\n<p>Explanation 2:</p>\n<pre> The player first rolls <strong>5</strong> and climbs the ladder to square <strong>80</strong>. Three rolls of <strong>6</strong> get to square <strong>98</strong>.\n A final roll of <strong>2</strong> lands on the target square in <strong>5</strong> total rolls.\n</pre>\n<p></p>\n<p></p>\n<p></p></p></div>",
        "statement": "Rishabh takes out his Snakes and Ladders Game, stares the board and wonders: \"If I can always roll the die to whatever number I want, what would be the least number of rolls to reach the destination?\"RULES:The game is played with cubic dice of 6 faces numbered from 1 to A. Starting from  1 , land on square 100 with the exact roll of the die.  If moving the number rolled would place the player beyond square 100, no move is made. If a player lands at the base of a ladder, the player must climb the ladder.  Ladders go up only. If a player lands at the mouth of a snake, the player must go down the snake and come out through the tail.  Snakes go down only. BOARD DESCRIPTION: The board is always 10 x 10  with squares numbered from 1 to 100. The board contains N ladders given in a form of 2D matrix A of size N * 2 where (A[i][0], A[i][1]) denotes a ladder that has its base on square A[i][0] and end at square A[i][1].  The board contains M snakes given in a form of 2D matrix B of size M * 2 where (B[i][0], B[i][1]) denotes a snake that has its mouth on square B[i][0] and tail at square B[i][1]. ",
        "link": "snake-ladder-problem!"
    },
    {
        "title": "Region in BinaryMatrix",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary matrix <strong>A</strong> of size <code>N x M</code>.</p><p></p><p></p><p></p>\n<p> Cells which contain <strong>1</strong> are called <strong>filled cell</strong> and cell that contain <strong>0</strong> are called <strong>empty cell</strong>.</p>\n<p>Two cells are said to be connected if they are adjacent to each other horizontally, vertically, or diagonally.</p>\n<p>If one or more <strong>filled cells</strong> are also connected, they form a <strong>region</strong>. Find the <strong>length of the largest region</strong>.</p>\n</div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= N, M &lt;= 10<sup>2</sup></p><p></p><p></p><p></p>\n<p> A[i][j]=0 or A[i][j]=1</p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is a 2D binary matrix <strong>A</strong>of size <code> N x M</code>.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single interger denoting the length of largest region.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre> A = [  [0, 0, 1, 1, 0]\n        [1, 0, 1, 1, 0]\n        [0, 1, 0, 0, 0]\n        [0, 0, 0, 0, 1]\n    ]\n</pre>\n<p>Input 2:</p>\n<pre> A = [  [1, 1, 1]\n        [0, 0, 1]\n    ]\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> 6\n</pre>\n<p>Output 2:</p>\n<pre> 4\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> The largest region is denoted by red color in the matrix:\n    00<font color=\"red\">11</font>0\n    <font color=\"red\">1</font>0<font color=\"red\">11</font>0\n    0<font color=\"red\">1</font>000\n    00001\n</pre>\n<p>Explanation 2:</p>\n<pre> The largest region is:\n    <font color=\"red\">111</font>\n    00<font color=\"red\">1</font>\n</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary matrix A of size N x M.  Cells which contain 1 are called filled cell and cell that contain 0 are called empty cell. Two cells are said to be connected if they are adjacent to each other horizontally, vertically, or diagonally. If one or more filled cells are also connected, they form a region.  Find the length of the largest region. ",
        "link": "region-in-binarymatrix"
    },
    {
        "title": "Level Order",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Facebook", "Groupon", "Goldman Sachs"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).</p></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is root node of the binary tree, A.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a 2D integer array denoting the zigzag level order traversal of the given binary tree.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p>\n<pre>    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n<p>Input 2:</p>\n<pre>   1\n  / \\\n 6   2\n    /\n   3</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p>\n<pre> [\n   [3],\n   [9, 20],\n   [15, 7]\n ]</pre>\n<p>Output 2:</p>\n<pre> [ \n   [1]\n   [6, 2]\n   [3]\n ]</pre>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p>\n<pre> Return the 2D array. Each row denotes the traversal of each level.</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a binary tree, return the level order traversal of its nodes' values.  (ie, from left to right, level by level). ",
        "link": "level-order"
    },
    {
        "title": "Min Cost Path",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Directi"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given a <strong>A<em>B</em></strong> character matrix named <strong>C</strong>. Every cell in <strong>C</strong> has a character <strong>U,R,L or D</strong> indicating up,right,left and down.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>Your target is to go from <strong>top left corner</strong> to the <strong>bottom right corner</strong> of the matrix.</p>\n<p>But there are some restrictions while moving along the matrix:</p>\n<ul><li>If you follow what is written in the cell then you can move freely.</li>\n<li>But if you don't follow what is written in the cell then you have to pay 1 unit of cost.</li></ul>\n<p>Like: If a cell contains character <strong>U</strong> and you go <strong>right</strong> instead of <strong>Up</strong> you have to pay 1 unit of cost.</p>\n<p>So your task is to find the <strong>minimum cost</strong> to go from top-left corner to the bottom-right corner.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><em>Problem Constraints</em><em><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><ul>\n<li> 1 &lt;= A,B &lt;= 10<sup>3</sup></li>\n<li> C[i][j] can be either <strong>U,R,L or D</strong>.</li></ul></div><br/><br/></em><em>Input Format</em><em><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><ul>\n<li> First Argument represents a integer A (number of rows). </li>\n<li> Second Argument represents a integer B (number of columns). </li>\n<li> Third Argument represents a string array <strong>C</strong> which contains <strong>A</strong> strings each of length <strong>B</strong>. </li>\n</ul>\n</div><br/><br/></em><em>Output Format</em><em><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> Return an integer denoting the minimum cost to travel from top-left corner to bottom-right corner.</p></div><br/><br/></em><em>Example Input</em><em><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input:1</p><p></p><p></p><p></p><p></p>\n<pre> A = 3\n B = 3\n C = [\"RRR\",\"DDD\",\"UUU\"]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p><p></p>\n<p>Input:2</p>\n<pre> A = 1\n B = 4\n C = [\"LLLL\"]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Output</em><em><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output-1 :</p><p></p><p></p><p></p><p></p>\n<pre> 1</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p><p></p>\n<p>Output-2 :</p>\n<pre> 3\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Explanation</em>*<br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation for Input-1:</p><p></p><p></p><p></p><p></p><p></p>\n<pre> Matrix looks like: <font color=\"red\">RRR</font>\n                    DD<font color=\"red\">D</font>\n                    UU<font color=\"red\">U</font>\n We go right two times and down two times.\n So from top-right cell we are going down though right is given so this incurs a cost of 1.\n</pre>\n<p>Explanation for Input-2:</p>\n<pre> Matrix looks like: <font color=\"red\">LLLL</font>\n We go right three times.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "You are given a AB character matrix named C.  Every cell in C has a character U,R,L or D indicating up,right,left and down. Your target is to go from top left corner to the bottom right corner of the matrix. But there are some restrictions while moving along the matrix:If you follow what is written in the cell then you can move freely. But if you don't follow what is written in the cell then you have to pay 1 unit of cost. Like: If a cell contains character U and you go right instead of Up you have to pay 1 unit of cost. So your task is to find the minimum cost to go from top-left corner to the bottom-right corner. ",
        "link": "min-cost-path"
    },
    {
        "title": "Permutation Swaps!",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Directi"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Rishabh has a permutation <strong>A</strong> of <strong>N</strong> integers 1, 2, ... N but he doesn't like it. Rishabh wants to get a permutation <strong>B</strong>.</p><p></p>\n<p>Also, Rishabh has some <strong>M</strong> good pairs given in a form of 2D matrix <strong>C</strong> of size <code>M x 2 </code> where <strong>(C[i][0], C[i][1])</strong> denotes that two indexes of the permutation <strong>A</strong>.</p>\n<p>In one operation he can swap <strong>A<sub>x</sub></strong> and <strong>A<sub>y</sub></strong> only if <strong>(x, y)</strong> is a good pair.</p>\n<p>You have to tell whether Rishabh can obtain permutation <strong>B</strong> by performing the above operation any number of times on permutation <strong>A</strong>.</p>\n<p>If the permutation <strong>B</strong> can be obtained return <strong>1</strong> else return <strong>0</strong>.</p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><ul>\n<li>2 &lt;= N &lt;= 10<sup>5</sup></li>\n<li>1 &lt;= M &lt;= 10<sup>5</sup></li>\n<li>1 &lt;= A[i], B[i] &lt;= N</li>\n<li>A[i] and B[i] are all distinct.</li>\n<li>1 &lt;= C[i][0] &lt; C[i][1] &lt;= N</li>\n</ul></div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First arguement is an integer array <strong>A</strong> of size <strong>N</strong> denoting the permutation <strong>A</strong>.</p><p></p>\n<p>Second arguement is an integer array <strong>B</strong> of size <strong>N</strong> denoting the permutation <strong>B</strong>.</p>\n<p>Third argument is an 2D integer array <strong>C</strong> of size <strong>M x 2</strong> denoting the <strong>M</strong> good pairs.</p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>If the permutation <strong>B</strong> can be obtained return <strong>1</strong> else return <strong>0</strong>.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p>\n<pre> A = [1, 3, 2, 4]\n B = [1, 4, 2, 3]\n C = [ \n        [3, 4]\n     ]\n</pre>\n<p>Input 2:</p>\n<pre> A = [1, 3, 2, 4]\n B = [1, 4, 2, 3]\n C = [\n        [2, 4]\n     ] \n</pre>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p>\n<pre> 0\n</pre>\n<p>Output 2:</p>\n<pre> 1\n</pre>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p>\n<pre> As A != B you have to perform operations on A but there is only good pair available i,e (3, 4) so if you swap\n A<sub>3</sub> with A<sub>4</sub> you get A = [1, 3, 4, 2] which is not equal to B so we will return 0.\n</pre>\n<p>Explanation 2:</p>\n<pre> As A != B you have to perform operations on A but there is only good pair available i,e (2, 4) so if you swap\n A<sub>2</sub> with A<sub>4</sub> you get A = [1, 4, 2, 3] which is equal to B so we will return 1.\n</pre>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Rishabh has a permutation A of N integers 1, 2, . . .  N but he doesn't like it.  Rishabh wants to get a permutation B. Also, Rishabh has some M good pairs given in a form of 2D matrix C of size M x 2  where (C[i][0], C[i][1]) denotes that two indexes of the permutation A. In one operation he can swap Ax and Ay only if (x, y) is a good pair. You have to tell whether Rishabh can obtain permutation B by performing the above operation any number of times on permutation A. If the permutation B can be obtained return 1 else return 0. ",
        "link": "permutation-swaps!"
    },
    {
        "title": "Possibility of finishing all courses given pre-requisites",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Amazon", "Flipkart", "Grab", "infoworks", "Zenefits"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">There are a total of <strong>A</strong> courses you have to take, labeled from <strong>1</strong> to <strong>A</strong>.<br/>Some courses may have prerequisites, for example to take course <strong>2</strong> you have to first take course <strong>1</strong>, which is expressed as a pair: <strong>[1,2]</strong>.<br/>The pairs are given as two arrays B and C, where [B[i], C[i]] form a pair.<br/><br/>Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?<br/>Return <strong>1</strong> if it is <strong>possible</strong> to finish all the courses, or <strong>0</strong> if it is <strong>not possible</strong> to finish all the courses.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 64<br/>1 &lt;= length(B) = length(C) &lt;= 1e5<br/>1 &lt;= B[i], C[i] &lt;= A</div><br><br><strong>Input Format</strong><br>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument of input contains an integer A, representing the number of courses.<br/>The second argument of input contains an integer array, B.<br/>The third argument of input contains an integer array, C.</div><br><br><strong>Output Format</strong><br>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a boolean value:<br/> 1 : If it is possible to complete all the courses.<br/> 0 : If it is not possible to complete all the courses.</div><br><br><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 3\nB = [1, 2]\nC = [2, 3]\n</pre>\n<p>Input 2:</p>\n<pre>A = 2\nB = [1, 2]\nC = [2, 1]\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>1</pre>\n<p>Output 2:</p>\n<pre>0</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre>It is possible to complete the courses in the following order:\n1 -&gt; 2 -&gt; 3\n</pre>\n<p>Explanation 2:</p>\n<pre>It is not possible to complete all the courses.\n</pre></div><br/><br/></br></br></br></br></br></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "There are a total of A courses you have to take, labeled from 1 to A. Some courses may have prerequisites, for example to take course 2 you have to first take course 1, which is expressed as a pair: [1,2]. The pairs are given as two arrays B and C, where [B[i], C[i]] form a pair. Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?Return 1 if it is possible to finish all the courses, or 0 if it is not possible to finish all the courses. ",
        "link": "possibility-of-finishing-all-courses-given-pre-requisites"
    },
    {
        "title": "Cycle in Undirected Graph",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Amazon"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an undirected graph having <strong>A</strong> nodes labelled from <strong>1</strong> to <strong>A</strong> with <strong>M</strong> edges given in a form of matrix <strong>B</strong> of size <code>M x 2</code> where (B[i][0], B[i][1]) represents two nodes B[i][0] and B[i][1] connected by an edge.</p><p></p><p></p>\n<p>Find whether the graph contains a cycle or not, return <strong>1</strong> if cycle is present else return <strong>0</strong>.</p>\n<p><strong>NOTE:</strong></p>\n<ul>\n<li>The cycle must contain atleast three nodes.</li>\n<li>There are no self-loops in the graph.</li>\n<li>There are no multiple edges between two nodes.</li>\n<li>The graph may or may not be connected.</li>\n<li>Nodes are numbered from 1 to A.</li>\n<li>Your solution will run on multiple test cases. If you are using global variables make sure to clear them.</li>\n</ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A, M &lt;= 3<em>10<sup>5</sup></em></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= B[i][0], B[i][1] &lt;= A</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><em>Input Format</em><em><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>The first argument given is an integer <strong>A</strong> representing the number of nodes in the graph.</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<p>The second argument given is an matrix <strong>B</strong> of size <code>M x 2</code> which represents the <strong>M</strong> edges such that there is a edge between node <strong>B[i][0]</strong> and node <strong>B[i][1]</strong>.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></em><em>Output Format</em><em><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return <strong>1</strong> if cycle is present else return <strong>0</strong>.</p></div><br/><br/></em><em>Example Input</em><em><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p>\n<pre> A = 5\n B = [  [1. 2]\n        [1, 3]\n        [2, 3]\n        [1, 4]\n        [4, 5]\n     ]\n</pre>\n<p>Input 2:</p>\n<pre> A = 3\n B = [  [1. 2]\n        [1, 3]\n     ]\n</pre>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Output</em><em><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p>\n<pre> 1\n</pre>\n<p>Output 2:</p>\n<pre> 0\n</pre>\n<p></p>\n<p></p></div><br/><br/></em><em>Example Explanation</em>*<br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p>\n<pre> There is a cycle in the graph i.e 1 -&gt; 2 -&gt; 3 -&gt; 1 so we will return 1\n</pre>\n<p>Explanation 2:</p>\n<pre> No cycle present in the graph so we will return 0.\n</pre>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given an undirected graph having A nodes labelled from 1 to A with M edges given in a form of matrix B of size M x 2 where (B[i][0], B[i][1]) represents two nodes B[i][0] and B[i][1] connected by an edge. Find whether the graph contains a cycle or not, return 1 if cycle is present else return 0. NOTE:The cycle must contain atleast three nodes. There are no self-loops in the graph. There are no multiple edges between two nodes. The graph may or may not be connected. Nodes are numbered from 1 to A. Your solution will run on multiple test cases.  If you are using global variables make sure to clear them. ",
        "link": "cycle-in-undirected-graph"
    },
    {
        "title": "Useful Extra Edges",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["curefit", "Directi", "juspay"],
        "difficulty": "Hard",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a graph of <strong>A</strong> nodes. Also given the weighted edges in the form of array <strong>B</strong>.</p><p></p><p></p><p></p><p></p><p></p>\n<p>You are also given starting point <strong>C</strong> and destination point <strong>D</strong>.</p>\n<p>Also given are some extra edges in the form of vector <strong>E</strong>.</p>\n<p>You need to find the length of the shortest path from C to D if you can use maximum one road from the given roads in E.</p>\n<p>All roads are bidirectional.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= A &lt;= 100000</p><p></p><p></p><p></p><p></p><p></p>\n<p>1 &lt;= |B| &lt;= 100000</p>\n<p>1 &lt;= C, D &lt;= A</p>\n<p>1 &lt;= |E| &lt;= 300</p>\n<p>All lengths of the roads lie between 1 and 1000.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is the integer A.</p><p></p><p></p><p></p><p></p><p></p>\n<p>Second argument is the vector of vectors B.</p>\n<p>Third argument is the integer C.</p>\n<p>Fourth argument is the integer D.</p>\n<p>Fifth argument is the vector of vectors E.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return -1 if C is not reachable from D. Else return the shortest distance between them.</p></div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> A = 3\nB = [   [1, 2, 1]\n        [2, 3, 2]\n    ]\nC = 1\nD = 3\nE = [   [1, 3, 2]\n    ]\n</pre>\n<p></p>\n<p></p>\n<p>Input 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> A = 4\nB = [   [1, 2, 1]\n        [2, 3, 2]\n        [3, 1, 4]\n    ]\nC = 1\nD = 4\nE = [   [1, 3, 2]\n    ]\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> 2\n</pre>\n<p></p>\n<p></p>\n<p>Output 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> -1\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>\n<pre> Use the direct edge from 1 to 3. It has shortest path from 1 to 3.\n</pre>\n<p></p>\n<p></p>\n<p>Explanation 2:</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p><p></p><p></p>\n<pre> 4 cannot be reached from 1.\n</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></p>\n\n</div>",
        "statement": "Given a graph of A nodes.  Also given the weighted edges in the form of array B. You are also given starting point C and destination point D. Also given are some extra edges in the form of vector E. You need to find the length of the shortest path from C to D if you can use maximum one road from the given roads in E. All roads are bidirectional. ",
        "link": "useful-extra-edges"
    },
    {
        "title": "Clone Graph",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Google", "Facebook", "Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Clone an undirected graph. Each node in the graph contains a label and a list of its neighbors.</p><p></p><p></p>\n<p><b>Note:</b> The test cases are generated in the following format (use the following format to use <b>See Expected Output</b> option):<br/>\nFirst integer N is the number of nodes.<br/>\nThen, N intgers follow denoting the label (or hash) of the N nodes.<br/>\nThen, N<sup>2</sup> integers following denoting the adjacency matrix of a graph, where <b>Adj[i][j] = 1</b> denotes presence of an undirected edge between the i<sup>th</sup> and j<sup>th</sup> node, <b>O</b> otherwise.</p>\n<p></p>\n<p></p></div><br><br><strong>Problem Constraints</strong><br><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= Number of nodes &lt;= 10<sup>5</sup></p> </div><br/><br/><strong>Input Format</strong><br/><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is a node A denoting the root of the undirected graph.</p></div><br/><br/><strong>Output Format</strong><br/><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return the node denoting the root of the new clone graph.</p></div><br/><br/><strong>Example Input</strong><br/><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p>\n<pre>      1\n    / | \\\n   3  2  4\n        / \\\n       5   6</pre>\n<p>Input 2:</p>\n<pre>      1\n     / \\\n    3   4\n   /   /|\\\n  2   5 7 6</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p>\n<pre> Output will the same graph but with new pointers:\n      1\n    / | \\\n   3  2  4\n        / \\\n       5   6</pre>\n<p>Output 2:</p>\n<pre>      1\n     / \\\n    3   4\n   /   /|\\\n  2   5 7 6</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p>\n<pre> We need to return the same graph, but the pointers to the node should be different.</pre>\n<p></p>\n<p></p>\n<p></p>\n<p></p></div><br/><br/></br></br></br></p>\n\n</div>",
        "statement": "Clone an undirected graph.  Each node in the graph contains a label and a list of its neighbors. Note: The test cases are generated in the following format (use the following format to use See Expected Output option):First integer N is the number of nodes. Then, N intgers follow denoting the label (or hash) of the N nodes. Then, N2 integers following denoting the adjacency matrix of a graph, where Adj[i][j] = 1 denotes presence of an undirected edge between the ith and jth node, O otherwise. ",
        "link": "clone-graph"
    },
    {
        "title": "Connected Components",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["IBM"],
        "difficulty": "Easy",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Given a graph with <strong>A</strong> nodes.<br/>The edges in graph are given in a 2D array <strong>B</strong>.<br/>There is an undirected edge between <strong>B[i][0]</strong> and <strong>B[i][1]</strong>.<br/>Find the <strong>number of connected components</strong> in the given graph.</div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>5</sup><br/>1 &lt;= |B| &lt;= 10<sup>5</sup><br/>1 &lt;= B[i][0], B[i][1] &lt;= A</div><br><br><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">First argument is an integer A.<br/>Second argument is a 2D integer array B.</div><br><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return an integer.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:\n<pre>A = 4\nB = [[1, 2],\n     [2, 3]]\n</pre>\n<p>Input 2:</p>\n<pre>A = 3\nB = [1, 2]\n    [2, 1]\n</pre></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:\n<pre>2</pre>\n<p>Output 2:</p>\n<pre>2</pre></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:\n<pre> The two connected components are [1, 2, 3] and [4].\n</pre>\n<p>Explanation 2:</p>\n<pre>The two connected components are [1, 2] and [3].\n</pre></div><br/><br/></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "Given a graph with A nodes. The edges in graph are given in a 2D array B. There is an undirected edge between B[i][0] and B[i][1]. Find the number of connected components in the given graph. ",
        "link": "connected-components"
    },
    {
        "title": "File Search",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["AlphaGrep "],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given an assignment to sort out the files of your department today.<br/>\nA file contains various records. Each record has an (ID, Parent ID).<br/>\nTo make your task easier, you decided to separate records into different sets.<br/>\nIf a set contains a record with (ID, Parent ID) - (X, Y), then both X and Y must be present in the set.<br/>\nThere are <strong>A</strong> records. You are also given a 2D array <strong>B</strong> of dimensions <strong>N x 2</strong>,<br/>\nwhere each row is record's (ID, Parent ID).<br/>\n<br/>\nYou have to find the maximum number of sets you can divide the records into.\n</p></div><br><br><strong>Problem Constraints</strong><br>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A, N &lt;= 10<sup>5</sup><br/>\n1 &lt;= B[i][0], B[i][1] &lt;= A<br/>\nThere can be duplicate records.<br/>\nThere can be two records (X, Y) and (Y, X).</div><br><br><strong>Input Format</strong><br>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the integer A.<br/>\nThe second argument is the 2D integer array B.</div><br><br><strong>Output Format</strong><br>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer denoting the maximum number of sets you can break the record into.</div><br><br><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = 4\nB = [[1, 2], [3, 4]]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = 4\nB = [[1, 2], [3, 4], [2, 4]]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>2\n</code></pre>\n<p>Output 2:</p>\n<pre><code>1\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>We can create two sets (1, 2), (3, 4). Since, (1, 2) need to be together and (3, 4).</code></pre>\n<p>Explanation 2:</p>\n<pre><code>We can only have 1 set because (1, 2) need to be together (2, 4) need to be together. \nHence, (1, 2, 4) need to be together. Similarly, (1, 2, 3, 4) need to be together. Therefore, the answer is 1.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></br></br></br></br></br></br></br></br></p>\n\n</div>",
        "statement": "You are given an assignment to sort out the files of your department today. A file contains various records.  Each record has an (ID, Parent ID). To make your task easier, you decided to separate records into different sets. If a set contains a record with (ID, Parent ID) - (X, Y), then both X and Y must be present in the set. There are A records.  You are also given a 2D array B of dimensions N x 2,where each row is record's (ID, Parent ID). You have to find the maximum number of sets you can divide the records into. ",
        "link": "file-search"
    },
    {
        "title": "Mother Vertex",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Paytm"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given a directed graph with <strong>A</strong> vertices and <strong>M</strong> edges.<br/>\nYou are given an array <strong>B</strong> with dimensions <strong>M x 2</strong>, where each row denotes a directed edge from B<sub>i, 0</sub> to B<sub>i, 1</sub>.<br/>\nYou need to find if there exists a mother vertex in the given graph. Return <strong>1</strong> if it exists, otherwise <strong>0</strong>.</p>\n<p>A mother vertex is defined as a vertex from which all the vertices in the graph are accessible by a directed path.</p></div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">1 &lt;= A &lt;= 10<sup>5</sup><br/>\n1 &lt;= M &lt;= 2 * 10<sup>5</sup><br/>\n1 &lt;= B<sub>i, 0</sub>, B<sub>i, 1</sub> &lt;= A<br/>\nThere can be duplicate edges or self loops in the input graph.\n</div><br><br><strong>Input Format</strong><br>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the integer A.\nThe second argument is the 2D integer array B.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer 1 if a mother vertex exists, otherwise 0.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = 3\nB = [[1, 3], [2, 3], [1, 3]]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = 3\nB = [[1, 3], [2, 3], [3, 2]]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>0\n</code></pre>\n<p>Output 2:</p>\n<pre><code>1\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>There is no vertex from which all the other vertices are accessible.\nNote there can be duplicate edges.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>Vertex 1 is the mother vertex. We can reach 2 using 1 -&gt; 3 -&gt; 2. We can reach 3 using 1 -&gt; 3\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></br></br></p>\n\n</div>",
        "statement": "You are given a directed graph with A vertices and M edges. You are given an array B with dimensions M x 2, where each row denotes a directed edge from Bi, 0 to Bi, 1. You need to find if there exists a mother vertex in the given graph.  Return 1 if it exists, otherwise 0. A mother vertex is defined as a vertex from which all the vertices in the graph are accessible by a directed path. ",
        "link": "mother-vertex"
    },
    {
        "title": "Path in Matrix",
        "topic": "Graph Data Structure & Algorithms ",
        "companies": ["Amazon"],
        "difficulty": "Medium",
        "description": "<div class=\"markdown-content\" id=\"problem-content\">\n<p><strong>Problem Description</strong><br/>\n<div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given <strong>N x N</strong> matrix filled with <strong>0</strong>, <strong>1</strong>, <strong>2</strong>, <strong>3</strong>.<br/>\nFind whether there is a path possible from source to destination, traversing through blank cells only. <br/> \nYou can traverse up, down, right, and left. Return a single integer <strong>1</strong> if a path exists, otherwise <strong>0</strong>.\n</p><ul>\n<li>A value of cell 1 means Source.</li>\n<li>A value of cell 2 means Destination.</li>\n<li>A value of cell 3 means Blank cell.</li>\n<li>A value of cell 0 means Blank Wall.</li></ul>\n<strong>Note</strong>: there are an only a single source and single destination(sink).<p></p> </div><br><br><strong>Problem Constraints</strong><br/>\n<div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">2 &lt;= N &lt;= 10<sup>3</sup><br/>\n0 &lt;= A<sub>i, j</sub> &lt;= 3</div><br><br/><strong>Input Format</strong><br/>\n<div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">The first argument is the 2D integer array A.</div><br/><br/><strong>Output Format</strong><br/>\n<div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Return a single integer <strong>1</strong> if a path exists, otherwise <strong>0</strong>.</div><br/><br/><strong>Example Input</strong><br/>\n<div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Input 1:<p></p><p></p>\n<pre><code>A = [[1, 0], [0, 2]]\n</code></pre>\n<p>Input 2:</p>\n<pre><code>A = [[1, 3], [3, 2]]\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Output</strong><br/>\n<div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Output 1:<p></p><p></p>\n<pre><code>0\n</code></pre>\n<p>Output 2:</p>\n<pre><code>1\n</code></pre>\n<p></p>\n<p></p></div><br/><br/><strong>Example Explanation</strong><br/>\n<div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \">Explanation 1:<p></p><p></p>\n<pre><code>The source is blocked by walls on all its sides. So, there is no way to reach the destination.</code></pre>\n<p>Explanation 2:</p>\n<pre><code>We can take any possible path to reach the destination from the source.\n</code></pre>\n<p></p>\n<p></p></div><br/><br/></br></br></br></p>\n\n</div>",
        "statement": "Given N x N matrix filled with 0, 1, 2, 3. Find whether there is a path possible from source to destination, traversing through blank cells only.   You can traverse up, down, right, and left.  Return a single integer 1 if a path exists, otherwise 0. A value of cell 1 means Source. A value of cell 2 means Destination. A value of cell 3 means Blank cell. A value of cell 0 means Blank Wall. Note: there are an only a single source and single destination(sink).  ",
        "link": "path-in-matrix"
    }
]
